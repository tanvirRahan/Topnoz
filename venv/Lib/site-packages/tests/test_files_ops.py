import base64
import json
import os

import responses
from responses import matchers

from imagekitio.client import ImageKit
from imagekitio.constants.url import URL
from imagekitio.exceptions.BadRequestException import BadRequestException
from imagekitio.exceptions.ConflictException import ConflictException
from imagekitio.exceptions.ForbiddenException import ForbiddenException
from imagekitio.exceptions.NotFoundException import NotFoundException
from imagekitio.exceptions.UnknownException import UnknownException
from imagekitio.models.CopyFileRequestOptions import CopyFileRequestOptions
from imagekitio.models.MoveFileRequestOptions import MoveFileRequestOptions
from imagekitio.models.RenameFileRequestOptions import RenameFileRequestOptions
from imagekitio.models.UpdateFileRequestOptions import UpdateFileRequestOptions
from imagekitio.models.UploadFileRequestOptions import UploadFileRequestOptions
from imagekitio.utils.formatter import camel_dict_to_snake_dict
from tests.helpers import (
    ClientTestCase,
    create_headers_for_test,
    get_auth_headers_for_test,
)

imagekit_obj = ImageKit(
    private_key="private_fake:",
    public_key="public_fake123:",
    url_endpoint="fake.com",
)


class TestUpload(ClientTestCase):
    """
    TestUpload class used to test upload method
    """

    image = os.path.join(
        os.path.dirname(os.path.realpath(__file__)), "dummy_data/image.png"
    )

    sample_image = os.path.join(
        os.path.dirname(os.path.realpath(__file__)), "sample.jpg"
    )
    filename = "test"

    @responses.activate
    def test_upload_fails_on_unauthenticated_request(self):
        """
        Tests if the unauthenticated request restricted
        """
        URL.UPLOAD_BASE_URL = "http://test.com"
        url = "%s%s" % (URL.UPLOAD_BASE_URL, "/api/v1/files/upload")
        try:
            responses.add(
                responses.POST,
                url,
                status=403,
                body="""{"message": "Your account cannot be authenticated."
                                    , "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.upload_file(
                file=self.image,
                file_name=self.filename,
                options=UploadFileRequestOptions(
                    use_unique_file_name=False,
                    tags=["abc", "def"],
                    folder="/testing-python-folder/",
                    is_private_file=False,
                    custom_coordinates="10,10,20,20",
                    response_fields=[
                        "tags",
                        "custom_coordinates",
                        "is_private_file",
                        "embedded_metadata",
                        "custom_metadata",
                    ],
                    extensions=(
                        {
                            "name": "remove-bg",
                            "options": {"add_shadow": True, "bg_color": "pink"},
                        },
                        {
                            "name": "google-auto-tagging",
                            "minConfidence": 80,
                            "maxTags": 10,
                        },
                    ),
                    webhook_url="https://webhook.site/c78d617f-33bc-40d9-9e61-608999721e2e",
                    overwrite_file=True,
                    overwrite_ai_tags=False,
                    overwrite_tags=False,
                    overwrite_custom_metadata=True,
                    custom_metadata={"testss": 12},
                ),
            )
            self.assertRaises(ForbiddenException)
        except ForbiddenException as e:
            self.assertEqual(e.message, "Your account cannot be authenticated.")
            self.assertEqual(e.response_metadata.http_status_code, 403)

    @responses.activate
    def test_binary_upload_succeeds(self):
        """
        Tests if  upload succeeds
        """
        URL.UPLOAD_BASE_URL = "http://test.com"
        url = "%s%s" % (URL.UPLOAD_BASE_URL, "/api/v1/files/upload")
        headers = create_headers_for_test()
        responses.add(
            responses.POST,
            url,
            body="""{
                        "fileId": "fake_file_id1234",
                        "name": "file_name.jpg",
                        "size": 102117,
                        "versionInfo": {
                            "id": "62d670648cdb697522602b45",
                            "name": "Version 11"
                        },
                        "filePath": "/testing-python-folder/file_name.jpg",
                        "url": "https://ik.imagekit.io/your_imagekit_id/testing-python-folder/file_name.jpg",
                        "fileType": "image",
                        "height": 700,
                        "width": 1050,
                        "thumbnailUrl": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/testing-python-folder/file_name.jpg",
                        "tags": [
                            "abc",
                            "def"
                        ],
                        "AITags": [
                            {
                                "name": "Computer",
                                "confidence": 97.66,
                                "source": "google-auto-tagging"
                            },
                            {
                                "name": "Personal computer",
                                "confidence": 94.96,
                                "source": "google-auto-tagging"
                            }
                        ],
                        "isPrivateFile": true,
                        "extensionStatus": {
                            "remove-bg": "pending",
                            "google-auto-tagging": "success"
                        }
                    }""",
            headers=headers,
        )

        with open(self.sample_image, mode="rb") as img:
            resp = self.client.upload_file(
            file=img,
            file_name="file_name.jpg",
            options=UploadFileRequestOptions(
                use_unique_file_name=False,
                tags=["abc", "def"],
                folder="/testing-python-folder/",
                is_private_file=True,
                response_fields=["is_private_file", "tags"],
                extensions=(
                    {
                        "name": "remove-bg",
                        "options": {"add_shadow": True, "bg_color": "pink"},
                    },
                    {"name": "google-auto-tagging", "minConfidence": 80, "maxTags": 10},
                ),
                webhook_url="url",
                overwrite_file=True,
                overwrite_ai_tags=False,
                overwrite_tags=False,
                overwrite_custom_metadata=True,
                custom_metadata={"test100": 11},
                transformation={"pre": "h-100", "post": [{"type": "transformation", "value": "w-100"}]},
                checks="'request.folder' : '/testing-python-folder/'",
                is_published=True
            ),
        )
        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "http_status_code": 200,
            "raw": {
                "AITags": [
                    {
                        "confidence": 97.66,
                        "name": "Computer",
                        "source": "google-auto-tagging",
                    },
                    {
                        "confidence": 94.96,
                        "name": "Personal computer",
                        "source": "google-auto-tagging",
                    },
                ],
                "extensionStatus": {
                    "google-auto-tagging": "success",
                    "remove-bg": "pending",
                },
                "fileId": "fake_file_id1234",
                "filePath": "/testing-python-folder/file_name.jpg",
                "fileType": "image",
                "height": 700,
                "isPrivateFile": True,
                "name": "file_name.jpg",
                "size": 102117,
                "tags": ["abc", "def"],
                "thumbnailUrl": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/testing-python-folder/file_name.jpg",
                "url": "https://ik.imagekit.io/your_imagekit_id/testing-python-folder/file_name.jpg",
                "versionInfo": {"id": "62d670648cdb697522602b45", "name": "Version 11"},
                "width": 1050
            },
        }
        request_body = b'----randomBoundary---------------------\r\nContent-Disposition: form-data; name="file"; filename="file_name.jpg"\r\n\r\n\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00H\x00H\x00\x00\xff\xe2\x0cXICC_PROFILE\x00\x01\x01\x00\x00\x0cHLino\x02\x10\x00\x00mntrRGB XYZ \x07\xce\x00\x02\x00\t\x00\x06\x001\x00\x00acspMSFT\x00\x00\x00\x00IEC sRGB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf6\xd6\x00\x01\x00\x00\x00\x00\xd3-HP  \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11cprt\x00\x00\x01P\x00\x00\x003desc\x00\x00\x01\x84\x00\x00\x00lwtpt\x00\x00\x01\xf0\x00\x00\x00\x14bkpt\x00\x00\x02\x04\x00\x00\x00\x14rXYZ\x00\x00\x02\x18\x00\x00\x00\x14gXYZ\x00\x00\x02,\x00\x00\x00\x14bXYZ\x00\x00\x02@\x00\x00\x00\x14dmnd\x00\x00\x02T\x00\x00\x00pdmdd\x00\x00\x02\xc4\x00\x00\x00\x88vued\x00\x00\x03L\x00\x00\x00\x86view\x00\x00\x03\xd4\x00\x00\x00$lumi\x00\x00\x03\xf8\x00\x00\x00\x14meas\x00\x00\x04\x0c\x00\x00\x00$tech\x00\x00\x040\x00\x00\x00\x0crTRC\x00\x00\x04<\x00\x00\x08\x0cgTRC\x00\x00\x04<\x00\x00\x08\x0cbTRC\x00\x00\x04<\x00\x00\x08\x0ctext\x00\x00\x00\x00Copyright (c) 1998 Hewlett-Packard Company\x00\x00desc\x00\x00\x00\x00\x00\x00\x00\x12sRGB IEC61966-2.1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12sRGB IEC61966-2.1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00XYZ \x00\x00\x00\x00\x00\x00\xf3Q\x00\x01\x00\x00\x00\x01\x16\xccXYZ \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00XYZ \x00\x00\x00\x00\x00\x00o\xa2\x00\x008\xf5\x00\x00\x03\x90XYZ \x00\x00\x00\x00\x00\x00b\x99\x00\x00\xb7\x85\x00\x00\x18\xdaXYZ \x00\x00\x00\x00\x00\x00$\xa0\x00\x00\x0f\x84\x00\x00\xb6\xcfdesc\x00\x00\x00\x00\x00\x00\x00\x16IEC http://www.iec.ch\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x16IEC http://www.iec.ch\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00desc\x00\x00\x00\x00\x00\x00\x00.IEC 61966-2.1 Default RGB colour space - sRGB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.IEC 61966-2.1 Default RGB colour space - sRGB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00desc\x00\x00\x00\x00\x00\x00\x00,Reference Viewing Condition in IEC61966-2.1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00,Reference Viewing Condition in IEC61966-2.1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00view\x00\x00\x00\x00\x00\x13\xa4\xfe\x00\x14_.\x00\x10\xcf\x14\x00\x03\xed\xcc\x00\x04\x13\x0b\x00\x03\\\x9e\x00\x00\x00\x01XYZ \x00\x00\x00\x00\x00L\tV\x00P\x00\x00\x00W\x1f\xe7meas\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x8f\x00\x00\x00\x02sig \x00\x00\x00\x00CRT curv\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x05\x00\n\x00\x0f\x00\x14\x00\x19\x00\x1e\x00#\x00(\x00-\x002\x007\x00;\x00@\x00E\x00J\x00O\x00T\x00Y\x00^\x00c\x00h\x00m\x00r\x00w\x00|\x00\x81\x00\x86\x00\x8b\x00\x90\x00\x95\x00\x9a\x00\x9f\x00\xa4\x00\xa9\x00\xae\x00\xb2\x00\xb7\x00\xbc\x00\xc1\x00\xc6\x00\xcb\x00\xd0\x00\xd5\x00\xdb\x00\xe0\x00\xe5\x00\xeb\x00\xf0\x00\xf6\x00\xfb\x01\x01\x01\x07\x01\r\x01\x13\x01\x19\x01\x1f\x01%\x01+\x012\x018\x01>\x01E\x01L\x01R\x01Y\x01`\x01g\x01n\x01u\x01|\x01\x83\x01\x8b\x01\x92\x01\x9a\x01\xa1\x01\xa9\x01\xb1\x01\xb9\x01\xc1\x01\xc9\x01\xd1\x01\xd9\x01\xe1\x01\xe9\x01\xf2\x01\xfa\x02\x03\x02\x0c\x02\x14\x02\x1d\x02&\x02/\x028\x02A\x02K\x02T\x02]\x02g\x02q\x02z\x02\x84\x02\x8e\x02\x98\x02\xa2\x02\xac\x02\xb6\x02\xc1\x02\xcb\x02\xd5\x02\xe0\x02\xeb\x02\xf5\x03\x00\x03\x0b\x03\x16\x03!\x03-\x038\x03C\x03O\x03Z\x03f\x03r\x03~\x03\x8a\x03\x96\x03\xa2\x03\xae\x03\xba\x03\xc7\x03\xd3\x03\xe0\x03\xec\x03\xf9\x04\x06\x04\x13\x04 \x04-\x04;\x04H\x04U\x04c\x04q\x04~\x04\x8c\x04\x9a\x04\xa8\x04\xb6\x04\xc4\x04\xd3\x04\xe1\x04\xf0\x04\xfe\x05\r\x05\x1c\x05+\x05:\x05I\x05X\x05g\x05w\x05\x86\x05\x96\x05\xa6\x05\xb5\x05\xc5\x05\xd5\x05\xe5\x05\xf6\x06\x06\x06\x16\x06\'\x067\x06H\x06Y\x06j\x06{\x06\x8c\x06\x9d\x06\xaf\x06\xc0\x06\xd1\x06\xe3\x06\xf5\x07\x07\x07\x19\x07+\x07=\x07O\x07a\x07t\x07\x86\x07\x99\x07\xac\x07\xbf\x07\xd2\x07\xe5\x07\xf8\x08\x0b\x08\x1f\x082\x08F\x08Z\x08n\x08\x82\x08\x96\x08\xaa\x08\xbe\x08\xd2\x08\xe7\x08\xfb\t\x10\t%\t:\tO\td\ty\t\x8f\t\xa4\t\xba\t\xcf\t\xe5\t\xfb\n\x11\n\'\n=\nT\nj\n\x81\n\x98\n\xae\n\xc5\n\xdc\n\xf3\x0b\x0b\x0b"\x0b9\x0bQ\x0bi\x0b\x80\x0b\x98\x0b\xb0\x0b\xc8\x0b\xe1\x0b\xf9\x0c\x12\x0c*\x0cC\x0c\\\x0cu\x0c\x8e\x0c\xa7\x0c\xc0\x0c\xd9\x0c\xf3\r\r\r&\r@\rZ\rt\r\x8e\r\xa9\r\xc3\r\xde\r\xf8\x0e\x13\x0e.\x0eI\x0ed\x0e\x7f\x0e\x9b\x0e\xb6\x0e\xd2\x0e\xee\x0f\t\x0f%\x0fA\x0f^\x0fz\x0f\x96\x0f\xb3\x0f\xcf\x0f\xec\x10\t\x10&\x10C\x10a\x10~\x10\x9b\x10\xb9\x10\xd7\x10\xf5\x11\x13\x111\x11O\x11m\x11\x8c\x11\xaa\x11\xc9\x11\xe8\x12\x07\x12&\x12E\x12d\x12\x84\x12\xa3\x12\xc3\x12\xe3\x13\x03\x13#\x13C\x13c\x13\x83\x13\xa4\x13\xc5\x13\xe5\x14\x06\x14\'\x14I\x14j\x14\x8b\x14\xad\x14\xce\x14\xf0\x15\x12\x154\x15V\x15x\x15\x9b\x15\xbd\x15\xe0\x16\x03\x16&\x16I\x16l\x16\x8f\x16\xb2\x16\xd6\x16\xfa\x17\x1d\x17A\x17e\x17\x89\x17\xae\x17\xd2\x17\xf7\x18\x1b\x18@\x18e\x18\x8a\x18\xaf\x18\xd5\x18\xfa\x19 \x19E\x19k\x19\x91\x19\xb7\x19\xdd\x1a\x04\x1a*\x1aQ\x1aw\x1a\x9e\x1a\xc5\x1a\xec\x1b\x14\x1b;\x1bc\x1b\x8a\x1b\xb2\x1b\xda\x1c\x02\x1c*\x1cR\x1c{\x1c\xa3\x1c\xcc\x1c\xf5\x1d\x1e\x1dG\x1dp\x1d\x99\x1d\xc3\x1d\xec\x1e\x16\x1e@\x1ej\x1e\x94\x1e\xbe\x1e\xe9\x1f\x13\x1f>\x1fi\x1f\x94\x1f\xbf\x1f\xea \x15 A l \x98 \xc4 \xf0!\x1c!H!u!\xa1!\xce!\xfb"\'"U"\x82"\xaf"\xdd#\n#8#f#\x94#\xc2#\xf0$\x1f$M$|$\xab$\xda%\t%8%h%\x97%\xc7%\xf7&\'&W&\x87&\xb7&\xe8\'\x18\'I\'z\'\xab\'\xdc(\r(?(q(\xa2(\xd4)\x06)8)k)\x9d)\xd0*\x02*5*h*\x9b*\xcf+\x02+6+i+\x9d+\xd1,\x05,9,n,\xa2,\xd7-\x0c-A-v-\xab-\xe1.\x16.L.\x82.\xb7.\xee/$/Z/\x91/\xc7/\xfe050l0\xa40\xdb1\x121J1\x821\xba1\xf22*2c2\x9b2\xd43\r3F3\x7f3\xb83\xf14+4e4\x9e4\xd85\x135M5\x875\xc25\xfd676r6\xae6\xe97$7`7\x9c7\xd78\x148P8\x8c8\xc89\x059B9\x7f9\xbc9\xf9:6:t:\xb2:\xef;-;k;\xaa;\xe8<\'<e<\xa4<\xe3="=a=\xa1=\xe0> >`>\xa0>\xe0?!?a?\xa2?\xe2@#@d@\xa6@\xe7A)AjA\xacA\xeeB0BrB\xb5B\xf7C:C}C\xc0D\x03DGD\x8aD\xceE\x12EUE\x9aE\xdeF"FgF\xabF\xf0G5G{G\xc0H\x05HKH\x91H\xd7I\x1dIcI\xa9I\xf0J7J}J\xc4K\x0cKSK\x9aK\xe2L*LrL\xbaM\x02MJM\x93M\xdcN%NnN\xb7O\x00OIO\x93O\xddP\'PqP\xbbQ\x06QPQ\x9bQ\xe6R1R|R\xc7S\x13S_S\xaaS\xf6TBT\x8fT\xdbU(UuU\xc2V\x0fV\\V\xa9V\xf7WDW\x92W\xe0X/X}X\xcbY\x1aYiY\xb8Z\x07ZVZ\xa6Z\xf5[E[\x95[\xe5\\5\\\x86\\\xd6]\']x]\xc9^\x1a^l^\xbd_\x0f_a_\xb3`\x05`W`\xaa`\xfcaOa\xa2a\xf5bIb\x9cb\xf0cCc\x97c\xebd@d\x94d\xe9e=e\x92e\xe7f=f\x92f\xe8g=g\x93g\xe9h?h\x96h\xeciCi\x9ai\xf1jHj\x9fj\xf7kOk\xa7k\xfflWl\xafm\x08m`m\xb9n\x12nkn\xc4o\x1eoxo\xd1p+p\x86p\xe0q:q\x95q\xf0rKr\xa6s\x01s]s\xb8t\x14tpt\xccu(u\x85u\xe1v>v\x9bv\xf8wVw\xb3x\x11xnx\xccy*y\x89y\xe7zFz\xa5{\x04{c{\xc2|!|\x81|\xe1}A}\xa1~\x01~b~\xc2\x7f#\x7f\x84\x7f\xe5\x80G\x80\xa8\x81\n\x81k\x81\xcd\x820\x82\x92\x82\xf4\x83W\x83\xba\x84\x1d\x84\x80\x84\xe3\x85G\x85\xab\x86\x0e\x86r\x86\xd7\x87;\x87\x9f\x88\x04\x88i\x88\xce\x893\x89\x99\x89\xfe\x8ad\x8a\xca\x8b0\x8b\x96\x8b\xfc\x8cc\x8c\xca\x8d1\x8d\x98\x8d\xff\x8ef\x8e\xce\x8f6\x8f\x9e\x90\x06\x90n\x90\xd6\x91?\x91\xa8\x92\x11\x92z\x92\xe3\x93M\x93\xb6\x94 \x94\x8a\x94\xf4\x95_\x95\xc9\x964\x96\x9f\x97\n\x97u\x97\xe0\x98L\x98\xb8\x99$\x99\x90\x99\xfc\x9ah\x9a\xd5\x9bB\x9b\xaf\x9c\x1c\x9c\x89\x9c\xf7\x9dd\x9d\xd2\x9e@\x9e\xae\x9f\x1d\x9f\x8b\x9f\xfa\xa0i\xa0\xd8\xa1G\xa1\xb6\xa2&\xa2\x96\xa3\x06\xa3v\xa3\xe6\xa4V\xa4\xc7\xa58\xa5\xa9\xa6\x1a\xa6\x8b\xa6\xfd\xa7n\xa7\xe0\xa8R\xa8\xc4\xa97\xa9\xa9\xaa\x1c\xaa\x8f\xab\x02\xabu\xab\xe9\xac\\\xac\xd0\xadD\xad\xb8\xae-\xae\xa1\xaf\x16\xaf\x8b\xb0\x00\xb0u\xb0\xea\xb1`\xb1\xd6\xb2K\xb2\xc2\xb38\xb3\xae\xb4%\xb4\x9c\xb5\x13\xb5\x8a\xb6\x01\xb6y\xb6\xf0\xb7h\xb7\xe0\xb8Y\xb8\xd1\xb9J\xb9\xc2\xba;\xba\xb5\xbb.\xbb\xa7\xbc!\xbc\x9b\xbd\x15\xbd\x8f\xbe\n\xbe\x84\xbe\xff\xbfz\xbf\xf5\xc0p\xc0\xec\xc1g\xc1\xe3\xc2_\xc2\xdb\xc3X\xc3\xd4\xc4Q\xc4\xce\xc5K\xc5\xc8\xc6F\xc6\xc3\xc7A\xc7\xbf\xc8=\xc8\xbc\xc9:\xc9\xb9\xca8\xca\xb7\xcb6\xcb\xb6\xcc5\xcc\xb5\xcd5\xcd\xb5\xce6\xce\xb6\xcf7\xcf\xb8\xd09\xd0\xba\xd1<\xd1\xbe\xd2?\xd2\xc1\xd3D\xd3\xc6\xd4I\xd4\xcb\xd5N\xd5\xd1\xd6U\xd6\xd8\xd7\\\xd7\xe0\xd8d\xd8\xe8\xd9l\xd9\xf1\xdav\xda\xfb\xdb\x80\xdc\x05\xdc\x8a\xdd\x10\xdd\x96\xde\x1c\xde\xa2\xdf)\xdf\xaf\xe06\xe0\xbd\xe1D\xe1\xcc\xe2S\xe2\xdb\xe3c\xe3\xeb\xe4s\xe4\xfc\xe5\x84\xe6\r\xe6\x96\xe7\x1f\xe7\xa9\xe82\xe8\xbc\xe9F\xe9\xd0\xea[\xea\xe5\xebp\xeb\xfb\xec\x86\xed\x11\xed\x9c\xee(\xee\xb4\xef@\xef\xcc\xf0X\xf0\xe5\xf1r\xf1\xff\xf2\x8c\xf3\x19\xf3\xa7\xf44\xf4\xc2\xf5P\xf5\xde\xf6m\xf6\xfb\xf7\x8a\xf8\x19\xf8\xa8\xf98\xf9\xc7\xfaW\xfa\xe7\xfbw\xfc\x07\xfc\x98\xfd)\xfd\xba\xfeK\xfe\xdc\xffm\xff\xff\xff\xdb\x00C\x00\x03\x02\x02\x03\x02\x02\x03\x03\x03\x03\x04\x03\x03\x04\x05\x08\x05\x05\x04\x04\x05\n\x07\x07\x06\x08\x0c\n\x0c\x0c\x0b\n\x0b\x0b\r\x0e\x12\x10\r\x0e\x11\x0e\x0b\x0b\x10\x16\x10\x11\x13\x14\x15\x15\x15\x0c\x0f\x17\x18\x16\x14\x18\x12\x14\x15\x14\xff\xdb\x00C\x01\x03\x04\x04\x05\x04\x05\t\x05\x05\t\x14\r\x0b\r\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\xff\xc2\x00\x11\x08\x02\xbc\x04\x1a\x03\x01\x11\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1c\x00\x00\x02\x03\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\xff\xc4\x00\x1b\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\xff\xda\x00\x0c\x03\x01\x00\x02\x10\x03\x10\x00\x00\x01\xf3\x7f\xcd\x7f\xab\xea\xe3\xd3\xd4\xfc\x7fn\xef?,\x9d\xbc\xfc\xefW\x82\xcc\xb4\xf2\xe9w=\xca(\xe9i\xdfY:\xd9\x8d\xea\xe54r\xcc\xa1\xc3\xdc\x87me\xbd\xf0\xf6s=\\)\xdf;\xb1\xab\xb1l\xc5\xbf\r\xfc\xafK<_9\x85\x9e7\xb7\xc9\xe3~\xef\xcb\xe1\xfd\x1f/7\xe9p\xc3\xea\xe7\xab\x8f\xa3\xd2|\x9f\xa7\xeb~\'\xd4\xf4\x1e__K:\xc2\x9e[\xd1\xe3\xef\xfdN\x1fL\xed\xf3}G\xa3\xe2j\xef\xc2\xfe\x9c\xc4R\xc5T\xaaT\xb1\xcdDZP\x95J\x962\xa5Y\xd2"\xa0\x94\x95\x00\x04\x8e\x1c\x80Q\r\x00\x01\xa3\x01\xc8\xe4c\x90\x18\r\x1a4\x933\xb1\xa5x\xd6>\x1e\x9e\x7f\x9f\xd9\x83\x8f\xaa\xbcn\xe9\xce\xdb\x8b\x1c\xe6\xc5X\xe9\xc9\xf2{|\xaf\x9f\xd7\xe7\xfa\xb2\xf5\xc5;\xcd[\xcb\x12\x88\x96\xad\xa1\xabfz\xfao+\xe9\xdd~e\x1d\xf3\xef?G\xf9\xac?/\xd7G>\xb4\xe7\xa59\xe9L\xeb\x0c\xeb\xf3\xad\xfd_O\xc9\xe8\xf4\x7f/\xd1\xa3\x97\x1c>\x8f7?\xd3\xe1\xd1\xcfzyt\xb3\x1b\x94\x99\xfa\xaa\xd7Y:]\xcfZ\xb8\xe6\xferSJ\x8e\x8a\xfbo-\xed\x87\xac\xe5{<\xd5\xeb\x9e\x9e[\xb7\x1a\xb7\x17F\x1b\xb9\xde\x8f>P\xe30v\xe3\xc3\xfa\x1e?!\xf6\xbeo\x1f\xe9y\xb9\xbe\xfe\x18\xbd\\\xf5\xf1\xf4\xfa_\x8f\xf4\xfdw\xc5\xfa~\x83\xcb\xec\xe9f\xe0\xaf+\xe9\xf0\xf6\xfe\x9f\x1f\xa6u\xf9\xfe\xab\xd1\xf15v\xe1\xa3\xa7$%R\xa5R\xc6U\x11\x9a@\xb1\x95*\x95DmR\xa9R\xa0\x12\x92\xa8aB9\x1c\x00\x8c\x07\x00\xd0\x1c\x00\x8d\x1c4!\x81&Z4\xab\x1d0\xf0\xf5a\xe3\xea\xc3\xc7\xd5^79\x99\xb36\x1c\x99\xb9\xf6\xe3y}~w\x97NV\xf3F\xf3\rf\xbdf\xbdHo.\t\xa9MCR\x9d\xc5\xad\xdf\xcb\xbf\xbe\xf3\xf9\xbd\xa7\xa3\xc1o\xd1\xf2z\xdf\xa5\xf1r\xf8}\x14\xe3\xa5\x18\xebVzS\x9e\x95\xcd\xfec\xf4~\x9b\xbb\xf3\xfd\xbd\xcf\x9f\xdey\xe3\xca\xf6|\xec\xbd\xbc\xbayv\xd5\xc7\xa5\x98\xdd\x99\xcd\x1d\x15\xef\xad\x98\xe9\xa3\x9e\xb5\xf0\xb7\xf3Y\x9d\xa6\x9fK_Me\xe9\xd3\x07\\r\xfd~h\xdc\xe9\xe5\xbd\x1c\xf5vu\xa3-\xbc\xa6\xfe|\xe9\xc6y\x9d\xbc\xdc\x1f\xa3\xe2\xf2\xdfc\xc1\xc9\xfa\x1e|\x1e\xee\x18\xbdX\xd9\xc3\xd5\xe9~G\xd2\xf5\x9f\x1b\xe9z\x1f7\xb3\xa1\x9da\xb9\xf2\x9e\x9f\x17c\xe9\xf9\xfe\x9b\xbf\x1f\xab\xef\xf1u\xf6\xf3\xdf\xd7\x90)R\xc6U\x9a\x96*\xa1),E*\x95\tSQ\x94\xa5\x00*\x00\x80h\x0c \t\x18\x0e\x01\xa00\x81\x1a4p\xe0\x1a4\x86u\xcc\xf3{x\xfe\x7f\xa3\x9f\x97i\xcc\xc9\x96W\x9dc\xe7\xd7\x8d\xc3\xbf\x03\x17\x99\xbc4\x19\x86\xa4.cd5\x0b\x1c\xa4\xadcU\xea\xd9\x9e\xba9\xf5\xfa\x87?\x9b\xdb\xf4\xf9\xba\xbf{\xe4\xf6\xb1\xe3\xab\x97Jq\xd2\x9e}i\xcfJs\xb8N\x9f\x8e\xbe\xe7\xd5\xf4\x1f7\xdd\xd1\xf2\xf4\xab~~g\xaf\xc3\rcW.\xbax\xf4\xbb\x9e\xa4\x94\xec\xddo\xe5\xd2\xfe{\xd9\xc3W\xf3\xb6g\xa4\xf3\xda\xdc\xf6\xabW\x1f~x\xbd\x1cy\xde\x9e\x13\x8d\\w\xa7\x96\xf4s\xde\x9ew\xa1\xe7\xd6\xceY\xa2\xf1\xe6\xfa|\xdc/\xa1\xe2\xf3\x7fW\xc5\xcc\xfa\x1c1{8\xe4\xf4c\x7f\x9f\xd7\xe8\xfeW\xd1\xf5\x9f\x1b\xe9w\xfc\xde\xbe\x94\xde\x06|\xa7\xab\xc5\xd7\xfa^\x7f\xa6\xeb\xc9\xea\xfa\xfc}}\xbc\xfa:\xf1b\x96*\xa5R\xc5R\xac\x85BU,E*i\tP\x94\x80%,\x06\x80\x0c \x1c\x08@0G\x00\xc2\x04\x924!\xc04\xcb\xcb\xbf\x0f\xcb\xf4\xf9\xde\x7fd\xd1Fy\xbew>\xbc.]8\t\x8f\xa6g\x94\xb3\x89\xcc\xa6c\xa9\x1b#b\xa9C\x9a\x01al5\xbb\xb1\xd7\xa5\xe5\xe9\xf5\xae\xdf\x16=\xe7\xb1\xfd\'\xe74y3_=\xd3\x8e\x95s\xe9FzU\x9e\x95\xe7\x7f\x8b\x7fG\xf4z\xde\x1fV\x8ev\x9e\x9c3\xf4\xe3)o\xe7\xd2\xccY\xe6\xc7Y\x86\x83s\xce\xad\xc5\xbb\x9d\x94JnS\xa5\xb8\xe9V\xd9;s\xc7\xdf\x8eN\xdc\xad\xce\xb4r\xde\x8e[\xbf\x1b\xd3\xcb]\x0f.\xef\xe7\x9azq\xe7z|\xdc\x8fw\x97\x8f\xf4|\xb8}\x9cr\xf7\xe5GL\xf4<\xfe\xce\xf7\xcc\xf7\xfa\x7f\x8f\xf4{~?_S\x9f^v\xf9yo\xa3\xe0\xf4>\xbc\xfd_<\xbdf\xfeN\xde\xdem\x1dx\xb1\nX\xaa\x95*\xcdB\x05P\x95K\x15J\x94\x12\xa0\x80\x14@r0\x00\xa7 \x01\x00\xe0\x1a\x10\r\x1c\x8d\x18\x04\x01/?\x87\xab\x81\xe4\xfa\xd99\xf6\xc95\xca\xc6\xfc\xff\x00=p:1u[\x99fe\xb8\xcd\xb8\xcc\xb3\x95b\xb9\x8d*d\xb2\x1a\x8dCV\xbdn\xcc\xf4\xd3\xcb\xb7\xa4\xf2g\xe9\xbe\xcf\x87\x93\xa6\xbe\x85\xfa\xaf\xca\xd5\xf3\xfa\xd5\xcfucus\xe9N:U\x9e\x95\xe7\x7f\x97>\xbf\xe96s\xebn)3"\xdc\xdb\xa6\xa7\x9b(h\xa8\xb6J\xf1\x1c)!P\xd5-\xae\xcc\xfd3\x97|r\xf5\xc3\xcd\x94\xae\x14\x84_\xc2\x93\x9e~\x9c\xb0w\xe1\xcf\xf4\xf0\xc5\xea\xe3\x8f\xd1\xcb7nto:9v\xdf\xe4\xf5u\xfc\x1e\xbe\x9f\x8f\xd3\xbb\xcf\xd7\x9d\xe9\xe1\xc1\xfa>/Yz\xfd\x8f\xcb\xafd\xf9\xbb\xfbyt\xf5\xe0\xe8\x88\xaa\x95*\x95B\x05J\xa1Bi\tR\x82\x12\x90\x00\x050F\x10AM\x08\x06\x129H,!\xc8\xd1\x8d\x00\x02\x18\xd73\xcf\xed\xe0\xf1\xfa~S\x97\x7f7\xc7~\x7f\xac\xc5\xdeK6r\xdb\x8c\xdd\xcf6\xe2[\x8c\xca\x0b\x98\xd2\xa8\xd4\xa1\xc2\xaa\xf4\xabZ\x94\xeb\xa3\x97m\xfe~\xbe\xd3\x97\x8b\xdc{~Q\xec\xe5\xed~\xf7\xe7\xa9\xf0\xf5\x865W=\xd5\x9e\x95s\xe9N7\x06\xfeY\xee\xfd\x8d\xcc\xd9%\x8c\xcd&\xcc\xd2RN\xe6H\xd1\xa3\x01K\x15\x8a\xab`\xa8\x85B\xd8\xc0"5\x12!\nJ\xec\xa3Y\xcb\xbc\xd5\xac\xd1\xbc\xd1\xbc\xe6\xde`\xa6u>z\x96)5\x8b|\xf9\x1e\x8f?\xa9\xe7\xaf\xa6\xf9\xb1\xde\xd7\x8bo_.\x9e\xbcede\x04\xaa\x14\xa9AJ\x84\xaa\x12\xa5@\xa0\x80C\x00\x00\x86\x01D\x00\x8c\x02\x18#\x82\x00\x1c\x8eF\x08\xc0\xa3\x9f^o\x0fo\x0b\x1e\xef\x98s\xef\xe4\xf5k\xd1T\xf3m\xc2\xeer\xecf\xecK0h\xd1,iX\xa92YV\xacn\xed\xc7m\x9c{\xf4|\xbd~\x90\xf9\x1d\xff\x00g\x8bw\xdb\xf9\xfe\x8f\xaf\xcc\x8f=W\x8dC\x9e\xea\xc6\xea\xc7Jq\xd23\\_\x7f\xd1\xba\xf3\xb2\xe2\xcb\x89\xdc\xcd\'r\xeed\x92\xb1\xd8\r\x12\xa1*\x95*\x12\xa5\x04\xaa\x0bQ\x19R\xc6X\xb5\x15\x8c\xd4\x1a\x84\xd4\x1a\x82\xd7u\t\xaa\xd6\rU5U\xb4\xd6}g\xad\x9e}\x87\x9fn\xfc\xda\xbap\xbb\xa76\x80\x95J\x84\xaa\x05\x8a\xa0\x95BT\n\x08\x00J#\x00\x01\x80\x04\x80\xc2\x88\x06\x19\x8c \x82\x81\xc8\xe1\xa0\x06N]\xf9\xbc=\xbc\t\xec\xf8\xfe:\xf1zZ\xf5\x08\xbb\x16\xdc4s\xcd\xdc\xe5\xb9\xcc\xa1\xca\xc8\xd2\x15\x89\x0b#ez\x13\xa6\x9e^\x8d\xfe~\xfd//O\xab\xfa~\x05\xbe\x8e~\x93\xf4\x7f\x13\xa3\xc7\xce\xb2\x867^u_=\xd5\x8e\x95cuM\xbf\xa9,\xb9\x95\x93\xd6]\xcc\xa9\xd8\xecv=GM\x1d\x00\x80ZHP0\xa1\x1d\x14@)T\xb1\xc9MFX\xcb\x19\xa8\xcb\x19a5\x19\xa8MBj\x13U\xcd\xc2j\xb9\xb7W^Z7\xca\xfd\xf2\x9e\xf0()R\xa1J\x84\xaa\x12\x92\xa1\x02\x82\x01\x00\x00\xe8\x80\x06\x00\x00\x8e\n\x02\x01\x86c\x86\x89@\x1a<\x84R\xe2\xe5\xe9\xe5\xf1\xf6\xf9w\xab\xe3\x13Y\xb7j\xdc\xb36\xdc]<\xa5\xfc\xe5\xdc\xe4\xe6\\0\x12\x82\xb0A*\xd6j\xda\xdc\xf6\xd9\xc3\xd5\xbb\xcf\xdf\xb5\xe5}W\xdf\xf9\xec\xddu\xee\xff\x00O\xf9\x83\xc7T\xb0\xc6\xa1\x8dW\x8d\xd5\x9d\xd7\xcf\xa43\xa8\xfdK;\x99\\\xca\xc9Y-Gc\xb1\xeaKRV;\nv\x14\x0e\x84c\xb0\xa7d\xb5\x1e\xa1K5f\x80,\xd8\xe2\xc6X\xe6\xc6j2\xc6j9\xb1\x96-Bj2\xc6j\x13JTN\xe6\xcdbz\x8e\xc5\x02\xa5B\x12\xa9R\xa8\x04\xa0\x81P\x05(\x00\x11\xd0\xa4\x03\x00\x08\x10\x1c:\x02\x00\t\x1c9\x00\x80\x02#5\xcf\xe3\xeb\xe4\xf3\xf5\xf8i\xe8\xf9\'D4\x85[\x85\xfc\xee\x9eWG)ns)\x1c\x8a\x85b\x159\x15\xcd;\xccn\xae\xc7}\xbe\x7f_O\xc9\xdf\xd6r\xf2\xfb\xdf\x7f\xc6\x8f\xa7\x9f\xb9\xfd\'\xe7+\xf0\xee2\xc3\x1a\x8eu^5^7^:W5\x0f\xa5\xa9\xdc\xce\xe6Z\x92\xb9\x96\xa3\xb1\xd9-Gd\xac5\x1e\x8c,\x06\x16:c\xd4\x05\x11\xcd\xaf\x9e\xea\xe5\xd1E\x9d3\x7fnR\xdcX\xb1\x962\xc75K\x19c4\xa5R\xc6X\xaceJ\xa5\x06\x14\x00\x81P\x84\xaaP\x15\x08@\xa8@\x02\x00\x00\x18\x00\x00\xc6\x10\x04\x008` \x90\x1c9\x00\x80\n\xb1\xbeo\x1fw\x17>\x8f\x97\xde\xbf=\xeb+\xd5\x0b\xf9\xdd\x1c\xae\x9eM\\\x96g.A\x98\xda+\x10$\xa4\x86\xb3V\xf2N\xbayzz>oOC\xcb\xdb\xdf\xdf\x99\xe9\xfd\xdf?g\xd6\xf0\xfa\x8fo\xc8\x8f\r"8\xd43a\x8d\xd7\x8dW\x8d\xc2n\xaf\xa3\xb9\xdc\xcfY\x9e\xb3+\x1e\xa3\xb2V;\x99h\xf5\x1d\x8e\x9d\x8e\xc7E\x80,qa\x8b\x0e{\xaf\x1a\xa3\x1dqr\xf4\xf2\xf1\xee\xb2\xe3\xb3\xdb\xe7n\xf4y\xb4\xfa8\x89\x1c\xe9K\x19c\x9a\xa5\x8a\xa9R\xc6U\x9b\x05\x15J\x86\xa8\x00J\x84\x12\xa1)\tU%B\x00\x10\xd1\x00\x00\x00\x0c\x00`\xac\x07\x08 \x18C\t\x00\x08r\x08*\x97>:\xf2\xf8{x\x17\xb7\xc75\xbf/\xd5\n\x94_\xcfZy]<n\x8ey\x9e`\xc8\xccuR\xb8c\x91\xb3^\xb3\x1b\xa9\xe7\xb6\xbe>\xae\x87\x9b\xd3\xb7\x86\xfe\xa5\xd3\xe3t\xbd~^\xe7\xdf\xf9\x1d\x9c\xf8\x94\xaa#\x8dG6\x18\xd5x\xddy\xdc3\xaa~\x8fK5\x99\\\xcfY\x95\xcc\xa9\xeb.\xc9h\xecz\x8fQ\xd9+\nQ\x1cj8\xb0\xc6\xab\xc6\xe8\xc7\\\\\xfd<\xcc{x\x99\xf7y\xddw\xf0\xfe\xae\x1aS\xeb\xbe^\x1e\xc7\xd3\xf0\xb6\xfa|\xd6t\xc2\x962\xc75J\xa5\x8a\xa9Q\x19\xa5*X\xca\tHJ\x81P\n\x12\xa5\x04\xa8B\x10\x08\x00\x00\x10\xb4@\x06\x00\n\xe0\xa6\x10\x0c\x02R\x04%`\x120\x81\x08R\xe3\xe7\xe8\xe4\xf2\xf5\xf9\xadv\xf8\x7fG;V\x159n\xe7uq\xbay.\xc4s2\x99U\r\x1c\xa1,\x9b\x030\xd4\'[\xf1\xe8\xd7\xc3\xd7\xbf\xcf\xdf\xa5\xe6\xd7\xd6}\xbf\x9e\xaf\xb3\xdb\xfe\x93\xf3v\xf9\xb2\n#\x8dFXcP\xc6\xab\xce\xe1\x8dS\xf4z\xcfX\x9e\xb3=fV;\x1d\x92\xd4z\x8d\x1e\x92\xd4Q\x0ez\xaf\x9e\xe1\x9dBj\x13Yq\xdf\x97\xcb\xdd\xc3\xcf\xbf\xcdo\xd1\xe4\xfb\xe3\xca\xfa<\x9c^\xfc8\xbe\xaf(\xc7\xde\xfe/\xda\xfa\xfe~/[\xd1\xe0\xd3\xdf\x8b\xa8\xca\xb3b)\xa8\xa9\tc*\x95\nT\xa9T\xa0\x95\x08%BQP\x84!\x08\x01\x154,\x00\x00\x07 \x00\x03P\x14W(\x03\x08%\x10W \xa4\x80\xe0\x92-`\xe3\xe9\xe3c\xd3\xe3:v\xf8\x87\\U\xad\x0bfn\x8eWW\x1b\xa7\x92\xdcdsdiZ\xe5d\xb3%3\x1df5<\xf6\xd3\xcb\xd3\xaf\x87\xabo\x0e\xfe\x93\x8f\x1f\xa4\xfb~-]\xb3\xef\xbfK\xf9\x8a\xfc[\x03(\xe7Q\x968\xb0\xce\xeb\xc6\xa35\x9f\xdf\xdaz\xc5\x9a\xcc\xf5\x87R\xd6e\xa8\xect\xecz\x81W\x1d\xe5\xe3\xdf/.\xf9s\xdf\x06}|\xa9\xec\xe0\xeb\xd3\xe4z\xcf\x1f\xe9\xf1\xf9\xdfW\x97/NQ\xb2r\xe6\xdf>O\xa3\xc9\xf4\x0f\x9f\xf4\xff\x00E|\xae\xfe\xcb\xbf\xc4\xd7\xdb\xcfo^jU5\x18M(B\x9aJ\xa1,eA*T\xa0\x85\tA4\x84" +\x12\x16\x000\x04\x10P,!\x85\x10JXJ\xc0\x01\\\xd3P\x03 \x07\x00@\x11\x0c\xeb\x99\xcb\xd5\xc3\x9d\xfeg\xd7\x7f)\xef!l\xa5\xbf\x9e\xb5q\xba\xb8\xdb\xb1\x99\xe7\x0ed\xb6\x14\xe5m6g\x98\xd9\x85\xcb\x96\xfcz4r\xf5\xec\xe1\xe9\xd9\xc7\xb7\xb7\xc7\x8b\xda{>e\xff\x00C\xc7\xec>\x97\xc3\x8f\r4R\xac\xd8\xcb\x1c\xd8gP\xc6\xe3.ow{5\x8b7\x89\\\xcbRZ\x92\xd6];\x1d\x86\x8b77\x9b\xb6\x1e>\xaf3\xc3\xecx\xad}\x1f;\xdb\x1e\x7f\xb7\x0eWN\\\xce\xbcq\xf4\xe3GLE\x0b#eZ\xcf/\xbf\x96\xc8\xfd\x11\xf0\xbe\xff\x00\xd7\xf9|\xae\xa7\x7f\x16\xae\xdc\x1d\x91\x9a\x8c\xa8\x162\x8a\xa2*\xa5\x04\xaaT%\x05\tR\x8a\x84D\x08\xd8!b\x00\x0b\x08,`\x80P0\x00\x00\x1a\x90\x04\x12\x83RV\xd0<\x80\x80\x02\x02\x9ct\xe5r\xf4\xf9\xfb\xd7\xe3]\xef\x88\xebk\xb6\xc9\xad\x1cn\xce:\xd1\xca[\x8c\xb9\x91\x92\xea6\xb9ZJK1\x1c\xccu\x89N\x97s\xf5h\xe7\xeb\xd9\xc3\xbe\xae=~\x9f>_{\xd3\xe3\xeb}\xdf\x93\xdd\xcf\x86H\xd0\x88\xe6\xa9c5\x1cXcQ\\\xbe\xefE\x9a\xe7f\xb3=fZ\xcc\xb7\x1aKP\xa7c\xa5\x9b\x93\xcb\xdf\x9b\xc3\xd9\xf3\xbe\x7f\xa3\xf8\xd7\xbf\xcb\xca\xed\xe7\xafP"\x95k\x15o4\xef\x02UsF\xf1\x93\xaf\x1ew_7\xd0\xbe\x7f\xd6\xfd\x17\xf1\xfd~\xdb\xa7\xc7\xd7\xdb\x85\xdd9\xc6T\xa9T)P\x95J\tT\xa8J\n\x05\x8a\x8a\x84"(\xaeJ@\x80\x80,hS@\x00\x01\x05\x11\xa8\n\xc0\x00% \x95\x80M5%y\x00\x01\x199\xf5\xe4c\xd1\xe6\xf7\xd7\xe1\x1d\xe7\x03\xa1-\xd8\xde\x9eZ\xd7\xc6\xdf\xceK9\x19bi]2Y\xcc\xf3\x99H\xae\x02\xccu\xbf\x1e\xbd<}z\xb9w\xe8y\xb7\xf5\xee\xdf\x19\xf6\xe7\xec\xfe\xff\x00\xe7t\xf0\xe7$h\x0b%,f\xa3\x9b\x0cj2\xe6\xf7w\x9e\xb1n\xf1;\x99o2\xd4v:,t\xf4$\xcf\xe7\xed\x83\xcf\xea\xf2\xbe\x7f\xb9\xf2\x1fG\xaf\xc1\xfb\xfe}\x17\x9d\x92\xb9k\xd6j\xd6s\xf4\xe7\rJ\xeei\xde3o\x9e\x0e\x9e{\x17\xef\xbf\x13\xee\xfd\xaf\xcd\xe1\xe9\xf5\xf1i\xeb\xc5\xd8\x95J\x85*PJBT\xa8\x05(%BT"7)\n@\x88,\x02\xe5\xa0\x03\x00\x01S\x00\x00\x01\x84\x03Q@S"Pp4\xe5y\xa0\x11\\<\xba\xf1\xf1\xdf\xc8\xf5\xeb\xf0\x1fF2\xe85\x7f=\xea\xe5\xad<W`\x99`\xb1\xb4V\x93\xce\'\x9cK9\x8d\xcd\x93w\xf3\xf4_\xcf\xd5\xa3\x97\xa7W\x1e\xfe\x83\xcd>\xa7\xeb\xf8\xd4t\x9f@\xfd\x0f\xe5\xe1\xe2\xe8\xf5$\x82,\xd2#4\xb2\x867\t\xac\xde\xee\xd6k\x16o\x13\xd6g\xbc\xca\xc2\xc7N\xc2\x9d;\x9a\xf9t\xc5\xe5\xf4q\xf8\xfd\x1f\x9d\xe7\xef\xfc\xab\xdf\xe2\xe3\xf5\xe0\xd2QN\xb3F\xb3F\xf1^\xb1V\xa5:\xe7F\xf1\x9b|\xb0u\xe1\xed|\x7fC\xf4\x8f\xc5\xfa\x1e\xdb_/W^\x17o\x9a\x14\xa9P)\tP*\x12\x90\x84\xa2\xa1\x11EbB\x92 \xa1\x0b\x91\x00\x1a\x01@\x025H(\x03\x00\x00Pp+P \x94\x94\x86\xaeh\xcdek\xcd\xe5\xdb\x8b:\xfc\xf3\xbfO\x8av\xcd[9\xad<\xb5\xaf\x8e\xf4\xf2O(\xd9)\xa8R\xb5\xc8\xd8\xb39\xb3\x12s\x11K\xb1\xd2\xfcz\xb4r\xf5\xdf\xcf\xbe\xde\x1d\xbd\xaf\x1f7\xbd\xf5\xfc\xd7\xea\xf3\xfbO\xab\xf0!\xe5\xdc\xae]4!J\xa5\x8els\xa8\xe6\xe6\xf7v\xb3x\xb3Y\x96\xb3=\xe6Z\x8e\xc0v\x14\xe9\xd9\x1c\\\x9en\xf88z\xfco\x1f\xd0|\xcf\xd3\xd3\xc8\xfa|y5\xce5^\xb3\x9fX\xa3y\xae\xe6\xad\xe2\x9d\xe7>\xb9Sq\x87\xb7\x11>\xfb\xf1~\xf7\xda<~^\x9fO&\x9e\xbc%b\tR\x82\x08V\x90\x95\x00*\x12\xa1\x11\xb9HRD\x16\x08\xaeX\x02:\x10\x18\x00\x00\x80\x00`\x00\x00\xa0\xd4\x86\xa0J\x04\xa4\xae\t\xa75L\xbc\xae}\xb8\x17\xaf\xc8\xbd\x1a\xf9\xb7IV\x93\x9a\xd7\xc6\xeb\xe3\xab\xf9\x01S\x9b\x86\xaa\xb5\xccJb\xdcfy\xc8\xcc\xa5\xbf\x9f]\x1c\xbdzy\xfa\xee\xe7\xdbw\x9f\xaf\xd2\xf3\xe0\xf4\xde\x9f\x17G\xeb\xfc\xce\xf6|.I\xb2\xec`\x10\xa5\x8eQ\xce\xa3\x9b\x9f\xdf\xdaz\xcd\x9a\xcc\xf5\x99o2\xd4v\x160\xa7DG6\x8e=2\xf0\xf4y\x9f?\xda\xf0\xda\xfa~\x0b\xd7\xe4\xe4u\xe3\x8fx\xae\xe6\xadf\x9df\x9df\x9d\xf3\xa3Y\xcb\xbet\xef\x19\xb7\xcf\x0f_?\xb4\xf1}\x0f\xd1\xdf\x1b\xe8\xfblxuu\xf3\xe8\xe9\xc8\tP\x81P*\x12\x80\n\x84!\\\xc5\x92\xd8\xa2\x0b\x0b\x91\x01\xa3\xa1\x18\xc2\xc0\x10\x01\x00\x80\x00\x15\xa14\x00\x02\x80\xae\x01\xb4A))\x04\xb9\xb3\xd3\x93\xcf\xb7\x99\xe9\xd3\xe0\xfe\xb7\x97\xd4\x9euw=i\xe5\xad\x1c\xad\xb9&KSQ\xbbT\xe7;3\x8bq\x99Ifc\x9a\xd1\xcb\xd1\xa3\x9f\xaa\xfe~\x9d<\xbbm\xe1\xbf\xaf\xdf\x9b\xb3\xd1\xc3\xd2\xfd\xaf\x87\xb3\xcb\xcez\xcc\x92L\xbb\x18\xb3P\xb3c,sh\xf7\xf5\xb3Y\x96\xa4\xee\'\xbc\xcbP\xa2\xc6\x14\xe9Dy\xea\xae{\xcf\xcb\xb7\x1f\x87\xd0\xf2\x9c\xfe\xdf\x88\xf4<\x8f\xa7\xcd\xcc\xe9\xc7=\xc5Z\xcdvS\xac\xd1\xbcg\xde2t\xe5\x9f|\xe8\xd7<]9+\x9f\xbc|o\xbb\xf6\xaf\x9f:\xfb\xf2k\xeb\xe7\x9d\xca\x12\x8a\x08J\xa0\x82\x8bA\x11\x15\xc8\x8a\xc4!X\\\x00\t+\x01\xa3\xb0\x18X\x08\x04 \x00\x00\x94\x18\x02\xa0W\x00)+\x05%r\x91\x19q\xe3\xaf\x1f\x1d|\x7f\xa3\x7f\x9b~\x97\x0e}\xd6\xae=vp\xde\xde\x1b\xbf\x92\xcc\xc8\xdc&\x95\xd45\xa6Js\xb3\x19\xb7\x19q9ts\xebw?E\xfc\xfd7c\xbfC\xcb\xdb\xab\xc6\xfd{\xd1\xf2\xe8\xeb\x9fy\xf6\xbf7_\x8f\xa4\xaeed\xa6ec\x08P\xa5\x8c\xaaZ}\xdd%\xbc\xce\xc9\\\xcfy\x96\xa1N\xc2\x81\xd0C\x95\xa7\x9fJ\xb9\xf4\xc9\xcb\xbf\x9d\xe1\xf6<\xa6\xfe\x8f\x82\xf5y\xb8\x1d\xb8`\xe9\xca\xab#d.s\xef97\xcb\x1f^Y5\xce\x8d\xe3>\xf9`\xeb\xc3\xd8\xf8\xfd\xff\x00\xa2\xfe?\xd5\xfa\x07\x0f.\xce\x9e{\xf7\xc4U\tJJ\xa0\x00\xa5@\x84\x8a\xe4\xa4\x91\x0b\x92\xe4\x04\x07c\x0b\x1a;\x01\xd0\x80\x84*$@\x00\x03\x94Pr\xa1\x89Ep\x95\x8eP&\x88\x8c\xd7;\x9fN,\xeb\xe0=\x97\xf3\xd7\xbb\xcd\xce\xed\'\x9d\xee\xf3w\xe8y\xbam\xe1l\xc1\xcc\x95\x1b\xb8j\xca\'\x8c[\x9c\xcf!-\xc6\xb4r\xef\x7f?U\xfc\xfd\x17g\xb6\xef?_]\xc3\x9f\xd2}\x1e\x08\xf7\xe1\xee~\xb7\xe7\xb3\xf8\xfb\xc9\x99X\xec\x94\x8d\x00\x16leQ_\xd0\xdc\xee^\x93\xb9\x96\xb2\xf5\x1d;\naN\xc8\xe2\xd5\xcbus\xe9O>\x9c\xce>\xdf/\xcf\xedx\x7fF\xfc?\xaf\xc7\xcc\xeb\xce\xab\x98\xc8\xac\xa3Y\xc7\xd3\x96>\x9c\xf1u\xe3\x9f|\xe8\xd62o\x94n~\xe5\xf2>\xdf\xdc~oN\xcb\xcd\xab\xaf\t\xb0\x95(\xa8J\x05\x80\xa8A#a`\x88V\x17)\x1a\x16\x03@v\x17.\x81\x85\x08\x84\x82\xa0\x01\x00\xe0\xa2\x00\x1c\xd0\x12\x80\xa2\x90+\x95\x8aZ\xf3\xaeW>\xbcK\xd3\xe6_B|\xbb\xd3\x8ed\xcf:\xa9\xba\xd1\xcb[\xbc\xfb\xd3\xca\xe8\xe6\x96t\xd66\xca\'\x9c\xd9\x98\xe4q~:i\xe5\xde\xeczn\xe7\xea\xb3=v\xf9\xfa}+\x8f\x9f\xdaw\xf1\xe9\xfa?;\xd2k\xe7\xaez\x93-%cF\x8c\x05\x92\xcdR\xc7\xe9YX\xec\x95\xcc\xb5\x1e\xa3\xa7\xa8\xe8\x18XD9\xea\xae{\xa7\x9fL\xdc\xfby\xff\x00?\xd6\xf1\xfa\xfa_:\xf6\xf9\xbc\xe7\xa3\xcdF\xb2B\xb2\x9dg.\xf9\xe1\xe9\xcb\x17^Yu\xca\x9d\xe2\x9b\x9c}8\xfa\xcf7\xb7\xf4?\xc6\xfa\x9fD\xf3r\xd9\xbe\x1a7\xc5*P@ B\x8b\x10\\\xab\x01 +\x82\xc1\x18X ;\x15\xcb\xb0\x18X\x00\x08\x00@\x00\x000R\x00\x05r\x92\x80\xa4\xa2\xb8\x176w\xc9\xe7\xd3\x89\xbd\xfc\xbf\xe8\xbc\xa7i\xcc9\xb9\x9832UW7b\xeb\xe3\xbd<wv6\xe2RO2\xcc\x82Q\xaf\x8f}\x1c\xfd\x17\xf2\xf4Y\x9e\xf6\xe3\xb6\xde\x1b\xfb\x1f/\'c\xb7\x9f\xb7\xf6>/K\xcb\x86\xcc\x92V9$\x8e\xc6\x8aR\x16Q\x9a\x7fM+\x97d\xacv=GOQ\xd3B\xc2\x99\x1cZ\xf9\xee\xae})\xe7\xd3\x9b\xc3\xd9\xe59\xfd\xbf\x9f\xfao\x80\xf6\xf8q\xef\x04\x85U\xac\xe4\xdf<]y\xe3\xdf,\xbb\xe5N\xb1\x0b1\xf4\xe5\x1b\x9f\xb4|\xbf\xb3\xf7?\x97\xdb\xbb\x9eZ\xf7\xc2\xcb\x94%V\x00\x85\x08RB\xe4\xa4\x82+\x92\xc0\x11\xd8 \x16\x17%\x80\x02\x14\x00 \x08(\x00\x00\xa0\x00\x00(\x10\xd4\x94\x94W()q\xe3|\xac\xf5\xe2t\xdf\xcd\xbd\xee?I\xcf\xd3\x9ea\x8cx\x98\xa6r%:\x8a\xac\xc6\xf4\xf2\xde\xbe7G+n(\xcd\xb9\xde\xce\x1e\x9b\xf9\xfa-\xc7{q\xdbW\x1e\x9d\x1e\x1b\xfb}\xf1U\xd7\x9f\xb8\xfa\xdf\x9d\x8f\x8f\xa3\xb2VI\x99@\x92A\x1c)T,\xd9\xfdL\xcbQ\xd8\xect\xec*Z\x8e\xc2\xc7@\x01\x0ez\xab\x96\xea\xc7L\xfc\xba\xf9\xcf7\xd9\xf1\x1d>\x87\xcc\xfd\xfe/=\xdf\xcd\x10\xb2\xbb3o\x18\xbar\xc7\xd3\x9em\xf2\xa7X\xad\x9a7\x8c\x9b\xe7\xe98z\x7fC|\x7f\xad\xf4o\x1ez7\x9e\xad\xf1B\x15\x80!N\xc4\x17%\x82 \xb9.@F\x85\x80"\xd6K\x00B\x98\x02\x08!@P\x02\x1c\n\x00(\x12\x80\n\x04\x12\xb9\xa0&\x91\xcf\xc7N^zpz\xeb\xc1{u\x93S\x1db\xacv\xe2L\x99\x98r\xe73\x83\xa62v\x84\x9d\x0f6\xf6p\xde\xae:\xbb\x1a\xd3\xc7\xae\xce>\x9b\xb1\xdeY\xed)\xd7_\x1e\x9e\xb3\xca\xfa\xe6\xbc\x99\xfbr\xfa\x07\xd4\xfc\xee_\x17\xa2V4\x95\xcb\x92CF\x84\x10\xa1gV}ns\xd6]\x08\xe8\n\x96\xa3\xd4v\x03D\xad#-|\xb7_=\xd3\x8e\x9c\xaf?\xbf\xc8r\xfb_:\xf6g\xe7\x9e\xef\x06m\xe2,\xd5\xb9M\xce>\x9c\xb1\xef\x95\x1b\xe7M\xcdz\x94\xdcf\xdf5g\xd8~o\xd6\xfb\x97\xca\xf4\xfaN|\xf7\xeb\x9d\x97\x11\x0b\x12:\x10\xa1\x92\xc2\xc0\x10\xb8(A\x1d\x08X\\\xab\x00B\x81\xa0\x89\n(\n \xa0\x06(t@\x01(\xa4\xa0\x02\xa8p4\xe5\xaek\x99\x8e\x9c\xc9\xbf1\xe8\xbeK\xd5\xbaJj\x85\xce\xb9+\x12c\xac\x19b\xcey\xda\xcf7\xb7\x1a\xb5.\xe7\xab\xf1u\xf0\xeb\xd8\xf1z6y\xfdw\xe3\xbc\xa7[1\xd7W-\xfd#\xc9>\x85\xbf-\xde\xdf\x0f\xad\xeb\xf3*\xe1\xd2L\xba\x93-$\x8c$hB\x95K\x7f\xd7\xe5-G`\x00;\x1e\xa3\xa7cB\x88(!\xcfus\xdd|\xf7\x93\x8f\x7f7\xe7\xfb>\x1b\xaf\xb7\xe5\xfe\xff\x00\x07\x97\xf5y#U\\\xd1\xbc\xe4\xdf,\xdb\xe7M\xc5\x1a\xcd[\xc5L\xd7\xa9F\xb9\xfa\x1e>\x9f\xbf\xfc\x8f\xab\xf5\x0f\x0b\xa2\xe7\xaf\\\xd2\x142\x0fA\x15\xc1L\x02\xf3t \x8e\x84\x03XV\x03EB\x08#\xa5@X\x00\x00\x00\x00\x00+\x08\x05\x03D\xa0(\x10\xe6\xa8\xce\xb9X\xe9\xcb\xbb\xf1\xfe\xadp\xbb\xda\xe6\xa0FZ\xda\xa2\xb3\x99,\xcb\x18m\xc5\'>c\x03<\xde\xfc\xb2\xf5\xc5\xb9\xdf_\xc3\xe9\xebx\xfd\xbb\xbc\xfe\x9b1\xda\xfe}vq\xd7\xd9<\xb8\xf4\xbd<\xddo\xa7\xf2:\xfel4\x94\x92GcI#\x91\x82\x19%Q\xab\xecqz\xcb\xd0\x80\x07EJ\xe5\xd1`\x00\x02\xcd\xab\x9e\xeb\xe7\xba9u\xe5p\xf7\xf8\xfe\x7fg\xe7\x1e\xde_4\xfa\x1f;\x0fNUk4\xdc\xe5\xe9\xce\x8ds\xa6\xe6\x9d\xe2\xab\x9a\xec\xae\xe6\x9d`g\xeb_?\xeb}\xdb\xe5z\xbdG\x1cm\xd7;\xaeR\x08\xecv\xab\x86\x85\x08X\xeeDhS@5\x81\n\x10\xa4\x8d\x0b\nA`\x00!\x89\x00\x05`\x00\x00\n\x04\nf\x8a\x82P\xcb\x9e\x9c\x9ct\xe4k^+\xd9\xac;\xb5\xac&\x89b\xb1\x96\x11R\xe7\xac\x95\x8c\xc0\x98S\x9f3\xcb\xdf,=\xf2\xae\xfa>_gO\xc9\xec\xd5\xc7\xafG\xcb\xdf\xa7\xe5\xdf\xde\xfc\xfc_n^\xd3\xe8|;<\xdb\x929\x99H\xc7cF\x92\x90\x82\x10\xa5\xd9\xf6\xbc\xefQ\xd0\x00\x08\xe9\xd8\xec(\x00\x80"\xbcn\xae{\xa7\x97\\\x9c{\xf9\xee\x1f[\xc1\xf7\xf5\xfc\xaf\xdf\xe0\xf1\xde\xdf\x15:\xc5W9\xf7\x8a5\x8anj\xd6*\xb9\x85\xcc,\xae\xe6\x9d\xf3\xefq\xf4\xfd\xf3\xe5}_\xaa|\xfdt\xa7=\x9a\xc4\x90Gaar\xe9\x82\x17\x0e\x84v\x08\xc2\xe5\\\x94\xd0\xa0\x18(\xa5B\x00$\x04\x8e\x94\x16\n\x025\x14\x86\xa8\x00\x14\x083F\x81K\x87\x1b\xe4M\xf1:\xef\xc5z\xf7UBj*Jf\xa5SJZ\xe2\x9a\xcdn:\xc6\x9c\xf4\xe71\xc7\xdf>\'\xaf\x94o}\xde\x7ff\xbe>\x8e\xbf\x8b\xd3\xed\xfe_O\xbby\xb8\xe4\xeb\xcf\xe8\xbe\xff\x00\x81\x9b\xc9\xe9v6e#\x91\xd3F\x8e\t\x08 6\xfd\xcf3\xb1\xd0\x8c\x02\x81\xd8P:\x05\x04\x11\x19\xaa\xb9n\x9e}3\xf2\xed\xce\xe1\xec\xf1\x93\xeb\xfc\xdb\xdb\xc7\xe5\xdfK\xe6r\xfa\xf0\xa7X\xa7Y\xa6\xe2\x9dJ\xb5\x8a\xeek\xb2,\xc6\xca\xb5\x94\xcf\xd4\xbc_S\xee\xff\x00\'\xd7\xea\xf8g\xa1y\xe8A\x97E\xcb\xb1\xd3B\xe1\xd0\x8d\x1d\x08\xd1k\x05\x08\xc2\xc1\x044HP$\x05`\x80\x00\x00\x00\x00\rE PA+\x84\xa4\xb1^n7\xc9\x9b\xf3\x9d\xf7\xe5=:\x85\xb0\x96\x12\xc9\xa7\x9a\xa5sJX\xcb\x02\xa5\xcfm\x06*\xe4\xdc\xf9\x9e\xbe\x7f?\xe9\xe39\xd7W\x1fMz\xeb\xa3\x9f\xa3\xed\x7f\x9e\xf5\xfd{\xc9\xc9z<\xde\xeb\xd1\xf2s\xf9\xbb\xbb\x1a9\x1c4h\xc7#\x91\x04\x07G\xefy\x0b\x18\r\n\x00\x07E\x8cJB\x82\x14\xb5\xe3T\xf3\xebO.\x99yz<\xef\x1f\xab\xf3\xefGo\x95\xfd\x0f\x0f\x86\xf7|\xea7\x8a\xd2\x8db\xadf\xab\x9a\xeecs\x0b#ew5\xeb\x1d\xae^\x8f\xbb\xfc\xdf\xab\xf5O\x9b\xae\xcey\xeffV;\x06ec\xb0Gc\xb0\xb1\xa3\x1a+\x93PB\x84h\x91\xe8\xac\x01\x10X\x90\x00\x12\x00\x80\x00+P\x00Ch\x82\x14\r\x00\xb5f\xf2\xf3\xd3\x92\xd7\x93\xf5o\x83\xdbPj\x0bYfk\x9a%r\x93K:E\x05r\xc6\xeb\x9f\xac\xf0u\x9f9\xd3\x8e\rcg.\xdax\xf5\xc5\xbb^\xb7\xfa7\xf3\xbfC\xda\xf3\xe7\xd0\xf7\xfc\xde\xcf\x96\x994rHr\x03G#@2R\x91\xda\xfd\x1f\xcdv\x03\xb0\x1d\x14@\x03\xd4\x02\x14\xaa\x14\xaa#\x9dU\xcf\xa5<\xfag\xe5\xd7\x9b\xc7\xdb\xe2\xdfK\xe6\xbe\xee?*\xfa_/\x8b\xdf\xcbU\x95\xdc\xd5\xa9M\xc45+\xb8U\x0b\x98\xd9]\xe6\xd3\xe9~?\xa9\xf7O\x95\xec\xf6~\\\xf4\xdc\xf4\xd8\\\xb2V;\x0b\x97c\xb1\x92A\x0b\x92\xc2\x84(`\r\x0b\x01\x02+\x04\x01\x12\x00\x80\x00\x82\x9c\x00\xa2\x8a\x00))\x04%\x176o+=9:\xd7\x8b\xf6o\x99\xbdF\xd8\xcb\x05\x94\xaf:sO"h\x95KE\xb4\x14W+S\x83\xacr\xf7\x9b\xf9\xeb\xad\xcb\xac\xf3\xac"\xe5\xaf\xd1\xdf\x1f\xdd\xd0\x9c\xfd\x17\xbb\xe6C\xe7\xfb\xdc\x8d%\x020\x87#\x90\x82\x01JG\xac\xfdO\xc0t!N\x9a\x14\n\x01\xd0\x10\xa5P\xa5R\xc6XcT\xf2\xe9G>\xb99z<\xff\x00/\xa7\xf3\xdfOO\x95}\x1f\x0f\xcf\xfd\xdf/>\xb3^\xb3]\x95k5\\GY\x8dE\x98\xd9\x0b\x88\xdcu\xf9\xfa>\xe1\xf3\xbe\xa7\xd7>g^\xde9\xefb\xcb\x1d\x8e\xc1\x99S\xd4h\xd2H\xaeK\nhP\xc8\x85\x1a\x80\t\x12\x16\x08\x90@A@\x00\x08\x06\x01\rP(\xa0JA\t\xacY\xd7"o\x8d\xd3^#\xd9\xbc\xf6\xc6\xd8\xca\xa6\x9a\xbc\xe9\xca\xe6\x883\xa5-\x16\xe1\xd4\xe6jp\xb5\x8e.\xb1fw\xdf\xe3\xdb\xaf\xcf\xa1.T\xd5\xc7\xa7\xde\xbeG\xa7\x1f\\{^\xbe\x1e\x07\xcf\xfbNG#G\x049\x02R\x10A\n\x14\xbfA\xfd\x7f\xe4]\x8f@v:\x00\x05\x00\x04)T,\xd4\xb0\x95gUs\xdd\x1c\xfa\xe6\xe5\xdb\x9d\xcb\xd9\xe3o\xbf\xe6^\xff\x00?\xca~\x8f\xcc\xf3\xfe\x8f\x1c*\xbb\x9a\xf5+\xb9\x86\xb3\x1b"\xccncs\ra\x9fF\xf1\xfd/\xba\xfc\xbfg\xb7\xf2N\x9b\x1a\xd9v:w/Q\xa4\x92H!\xac\x94#\x0b\x06@\xd0\xb1\x02$\x11X \x88(\x12\x00\x00\x00\n\x00\x00J\xd5(\ne\x19y\xd3|y\xaf=\xdf^?\xd7\xb8\xaa\x96*K)\xa74JJ\xa6\x89h0\xe9\xc9\xd4\xe2\xeb<\x1dr\xcf\'\xa1\xe3\xe9\xf4\x9c\xbbtq\xba\xe5\x84zO/o\xa8|\xfd\xe4\xed\xcb\xbb\x9d\xf9\xef\x9b\xf7\x1c9\x18\xe1\xc8$\xa4r8 \x91f\xac\xbe\xaf\xfb\x9f\xc1=\x1d\x8e\x8b\x18X\x04\xaa\x05PB\x95B\x969\xb1\x9aQ\x0cn\x8ct\xa3\x97\\|\xbd\x1c<}\x0f\x9d\xfa\xb7\xf2\xbf\x7f\x8b\xe7_C\xe5f\xd6+\xb2\x1a\xcdw0\xb2\x1a\xca\xb2\x17\t!\xacF\xe7\xa9\xcb\xd1\xf6\xdf\x9f\xf4\xfe\xbf\xf3:w\xb9\xe7\xa3qm\xc8\x92\xb1\xeaHh\xd95\x97B1X\xd9C\xd1X\x02$,@\xc8\x88T\x02\x00\x00\x02\x00\x00\x00Pp(\xd2\tk\x8e^u\xc5\xba\xf2\x1e\xad\xf9\xbfF\x89E%\x94\xd4\xa6\xa54JgQk=\x9c\xfd9:\x9c[\x8e\x1e\xb9\xe1g\xb9\xc7\xd1\xe9y\xf7\xed\xf3\xe9\xa7:Y\xb0\x8fw\xe0\xef\xec|\xa9\xfa\xfc|o\x97\xfa\x0c\x1e?\xa0\xf2r\xc8\x96l\xa5\x94\x8d\'2\xe4r<\x96j>\xcd\xfd\x0b\xf9\xb4\xb4,h\xe8\x1d\x80\x835\tIVQ\xcdY\xb1\x9a\x8c\xb1\xcdR\xd5\x8e\x94s\xe9\x9b\x9f|\x1c\xbd^7~\xdf\x98\xfb\xb8|\xab\xe8|\xcf5\xe9\xf1\xc2\xc8k5\\\xc3R71\xb9\x8d\xccnb\xccu\x92=\xff\x00\x97\xe9}\xd7\xe6\xfa\xfd\xdf\x89\xd8\x98\xd9p\xeaZ\xcb$\x8d\x1d\xc9c\xb0\n\x19\x10\xa2\xc2\x92\x08\n\xc1\x91\x10\xa8\x04@\x01`\x08\x00\x95\x84\xa8\x01A\x84\xa2\xa5\xa2^Fu\xc0\xde\xbc\x0f\xb7|\x9e\xb4W,\xa6\xa7\x9bnm\x93Nj+\x92\xcev\xaf&\xce-\xcf\x17\\\xb1\x1d\x9e=\xbd\x0f>\xfd\xact\xeacs\xcdR\xac\xeb\xea\x1f/\xb7W\x13g\xab\xc3\xe2>\'\xeb\xa3\xcb\xa3\xc9\xcb9g\x8b9\xbb\t\xc9$\x94\x8ee\xe4d\xa5\xfbW\xf4O\xe6oQ\xa0\x14\xc2\x84\x14\xc9\nU*\xc9K\x1c\xd8\xe7Q\x9a\x8c\xa4W\x9dS\x8e\xb4r\xeb\x97\x9f~\x16}\xbf:\xf5\xeb\xe5\xbe\xff\x00\x17\xcd\xfd\xdf3.\xf9\xd5\xac\xc2\xca\xf5\x98k1e\\\xc6\xe5Y\x1b\x91:\x1c\xfb\xfd\x97\xc5\xf4\xbe\xc3\xf3:z~\x18\xe9\\\xdd\xa8\xec\x921\xb2\\\xba,(d@,,\x05B\x16&D\x05B \n\x11X\x02\x00\xa2\x01(\x13@\x00\x95\xc0%\xc7\x9d\xf1\xa5\xf3]\xf5\xf3_wL\x9a\xad\\\xb6E\xf3Wf\xdb\x9a\x97\x1d\xbc\xcd^M\x9cfy\x0etY\xd8\xe5\xdf\xb9\xcf\xaf_=:|\xf5\xb3;%R\xd9\xcf\x7f\\\xf9]\xb2t\xc7w\\>\x7f\xf1\xbfR\xb3\xa2W,\xf3l\xcd\xb7:\xb4\xb2&<\xc7\x12\x90\xc8\xcb\xed_\xd0\xbf\x99\x9a\x10\x0e\xc7@\x08 \x14\xab%*\x96\xbcn\x18\xd4f\xa3(\x15\x0cj\x9ct\xcf\xcf\xaf?\x97\xaf\xc5\xf5\xf4\xfc\xc3\xdf\xc3\xe5~\xef\x9d\xe5\xfd^*\xf5!s^\xb3\x1db,\xa4W1\xb0\xb1!/\xb3\xf3\xfb\xbe\xe9\xf3\xbd\x9fH\xf0;\x13\x1b5\x99SF\xcbe\xd1aB+\x90\x19(B\x8a\x10\xb0d\nH\x08\x02\xc2\xe4\x00\xa0@\x10Q(\x02\rC4\xce\xdcEy\xf9\xd7\r|\x7f\xaf\x7f5\xf6t\x82\xb2\xc9o\x97D]\x9dEsW2\xb9\x15\xc7g\x97q<\xeb\xb1\x8e\xbd\x8e}zy\xde\xfckv5<\xea*/g\xcd\xd7\xe9\xdf;|\xce\xd8\xea\xf3\xd7\x87\xf9\x7f\xa2Y\xa4JY\xe7VKnm\xd1b\xd9\x94\xb2p\xe4 \x8f\xb2\xfe\xe7\xf9\xba\x88\xe7M\x1e\x8e\xc0A*\x85*\t^\xa2\x95D&\xa1\x8dBm\xd9+\x1d\x95c\xa58\xe9\x93\x97\xa3\xcf\xcf_\xce\xbd\xb9\xf9_\xbf\xc7\xf3\x8fo\xcd\xc3\xd7\x9c.!\xac\xc2\xe67)\x92\xc4\x16$\rX\xeb\xf6\x0f\x1f\xd1\xfb\'\xcd\xe9\xea\xbc\xf3\xa0\xc5\xb6;\x04h\xd0\xb0\xa6\x85\xc8;\x04v\x03\xa2\xe5\xa0\x85\x14\x90\n\x10\xb0@) 0\x00P!Tzr\x86\xf0\xf3\xa9\xf1\xee\xf3\xb8G3:\xe0k_?\xf7o\xc2\xf7\xd8\xb3[\xa3B\xdb,\x0c\xb6\xf3\x93\x95\\v0I\xb3=;\x18\xed\xd5\x9b\xe8\xe3[s\xadX\xd5\xd9\xaaU,\xa6\xbd\x87\x87\xb7\xb5\xf2\xda{\xf9\xf9~?\xaf\xc2\xf1}%),\xf3g\x9bful\xb7Kl\xb3\x89\xe5)\x0c\xd7\x04\x9fa\xfd\xa7\xf3\xa8cUcp\x9a\x86w\x15\x95\xc9\tE\x88\x95\x92\xb9\x95\x92\xd6f\x95gtc\xab,\xe9\xce\xddb2\xd3\xcf\xad\x19\xeb\xcd\xc7\xa7\xc2\xfaw\xf2\xef\x7f\x9f\xe6~\xdf\x07\x96\xf4\xf8\xab\xd6#r\xacI\x1b\x95`\x8a\xc4\x08\xd7\xd6\xf9\xfd\x9fe\xf1\xfa\xbe\x8f\xe0\xbd\xaeY\xd2\x92I\xd3eX\x86\x8e\x9b-\x0b\x19+%cGr\xc6\x8e\x84(\x0b!dQ\x02$B\xa0\x91amIE\x8e\xb1G\xa3\xcd\x9f\xaf\x19g\xae\xaf\'\xae\xce]i\x8eD\xd7\x9c\xe9\xaf\x99\xfb\xf7\xe7w\xb9\xad\xcbj\x85&J\xc1/.\xe7\x9d3\x94\xdb\x9e\xbd\xbcu\xe9Mo\xcd\xd9\x9d\xdf\x9d_\x9d\x12\xac\x89e\x9d}\x17\xe7w\xee\xf1\xcd\xde\x9f7\x86\xf9\x9f\xa5\xab\x8fe4\xf2\x9eufuf-\xd2\xdd-\xb2\xceY\xe5,\x9eJ\x08\xfb\x17\xec\xbf\x9c\xc6j\xacn\xac\xf4\xc3\xc7\xd5\x8b\x1e\x84\xd4\xaeB\x13U6\x96I\xa3\\\xb5k\x86\x9d\xf0\xb3Y\xa3\x1d0\xf3\xf5Um\xfa\xe7\xaf\xa7\x19\xdc\xc3:\xa7=8\x8e\xfe\x13\xd5~\x7f\xec\xe1\xe0\xbd>_#\xe8\xf1\xe4\xdf:\xf5\x88k)#r\xaeP\n\xe4\x02\xfc\xef\xe8\x9c=\x9fK\xf2\xf5\xf5\xbeWc\x94\xe8bkfIMg\xb1\x13F\x91\xb26\x05\xa9l\x97\xa5\x84\xeed\x92\xa6\x92\xa6\x86\xb3\x12\x04n@\xac\xc9\x8a\xdc\x95\xa67\xc6\xc8\xd1k\xb6\x1a\xe5\x8f\xd9\xe2\xc1\xeb\xf2Y\xcb\xd1\xd0\xf9\xdfK_\x1e\xd9#\x8c\xbe[\xbe\xbea\xee\xe9\x8a\xea\xe9f\xb1\xb72c\xb7\x9cs\x93\x9f2\xe6\xba9\xe9\xd4\xcfN\x9c\xd6\xdc\xddSZ1g)6\xa1K,\xd9\xe7\x7fX\xf9]\xab\xd6:\xba\xc7\x80\xf9\x9f\xa4\x864D\xb3\xb9\xe6\xd9\x9d[\x9bvut\xb6\xcb<\xa5,\xb2y\x12\x99}\x9f\xf6\xbf\xcd^\x91\x96\x9e}9\xdeog/\x8f\xbf\x9f=v1;\x9c\xce\xd9\xdd\x92\xd0\xde\xe7\x9b\xb5\xd3\xe6\xdbqNw\x96\xf4\xcd\xea\x9c\x8e\xbb\xc3\x9cv\xa7\x1e\x863fmY\xd7#Z\xf0\xde\xa7\x8c\xf4r\xf2\xbdy\xf9\xee\xbe|;\xe5\x8f|\xe8\xd6k\xb9VF\xc4$V\n\x99\x8dt\xa5\xf6\\\xfb\xfa\xbe{\xf5\xfek\xe9|\xf3n2YMb\xda\xab/\x8a\xb5\x9a\xb4\xcd\xa8\x8e\x863\xdb\xe3\x9e\xb6f\xc4\xb0\xb2\xc9\xa4\xac\x95;\x1a+"+\x11\x04\xe7\x1cM8]u\xb7\x17\xb9\xc9\xd3\xcd\xd8YP\xdf,\x1e\xff\x00\x07\'\xdd\xe0\xbb\x87\xaf\xad\xf3>\xae\xee\x1d\xb0G\n\xdf#\xea\xbf9\xf5\xf5v\xb8\xa6\xdc\x95\x89y\xa7.g,io\xa77\xd2\x9a\xe8\xe7[s\xbd9\xb7K<\xd8\xca\x95M<\xd7/K\x8fO\xa9\xfc\xce\xbc\x8e\xd8\xed\xf1\xe9\xe0\xbew\xdeC\x9a\x94\xd5\x9c\xf5d\xd5\xd9\xb7gWKnl\xe2P\xf3e\x9aB\xcb\xee\xbf\xd1\xbf\x96Kp\xd2<\xeeO\x1f\xa3\x93\xf3\xbe\x87\x0f\x87\xd3\xael\xac\xb3\xbe{\xbc\xda\xa2t\xa7(\xa6]c\x8f\xdb5\xfbs\xc2\xf7\xdf?\xe9\xca\xdf.6<]\xce:\xee\xf9zu|\xbb\xdf\xc9R\xf9n\xf3\xc1z\xb9y^\xbc9=9F\xc9\xd94\x9a\xb4u\x14\x8a*\x11\xeaZ\x9dy\xae\xe6o{\x95\xebsm\xcc\xcb\xbc\xf3\xfag\x9b\xd2D\xd7\x95:\x99\xaer\xed\xa3X\xf6\x1c8\xfb//>\xf7;\xd0[\t\xd4\x91\x80\r\x15\x08\rk\x8e|q\xab\x89\xbd_\x9b\xdb\xe5zq\xb2\xd9\x10\xe9\xcb\x9f\xed\xf9\xfco\xa1\xf3tp\xf5\xf6>g\xd6\xd9\xc3\xd1\xcb\xcb\xcfn\xf8\x8f^\xbc_\xa7\xa4W-\xb8k\t\xce9\xb30\xcd\xde\xdfFo\xa2\xd6\xfc\xebfn\xac\xea\xd9\xa2\x12\xa9c)4\xe5y\xd7\xa8\xf2u\xf7\xbe-`\xef\xce\xbf\x1f\xd0\xf3>\x1f\xa8,\xe6\xa7\x9d\xdb\x8d[\x9bl\xd5\xf9\xb7Kd\xb3\xcaR\xb8\x96K4\x8f\xbd\xff\x00R\xfeNX\xe8\x8c\xfe>\xdc\xaf\x91\xef\xe1\xf8\xbe\x9e,z\xb1\xce\xf9/\\\xda\x95\xef\x1d\x07\x18\x1c>\xba\xe2\xf5\xc7\x87\xf5\xf0\xb3\xeat\xe6\xfb\'/\xaf\x17\xd3\x9f\x95\xe1\xf3=\x0e:}\x0b\xe7z}W\xcf\xeb\xd0\xe3\xaaW\xcfux\xcfO?-\xdb\x97\x17|%Z\x97L\xb6\xd92D\xc9\x12\xb9\xb0\xb1\x9d\x17:\xa3n-\x85\xb9iJu\x9ev\xf2\x93f[\xb0\xbeH\xdc\x9a\xce\xfb\xc7\xd4\xf1\xe5\xe8s\x8e\xa2\xeb\xba\x90\xeeV\xb3\x14\xaa\xe6\xab\x95N\xc7d\xe5\xb3\x1d\x0e{\xa3\x1a\xc9\x18\xd6r\xed\x8dV\xda:\xaf|\xf0\xfb<\x1c_\x7f\xcc\xbf\x8f\xa7\xaf\xf3~\xc5\xfc;\xf1\xb1|\xcfMx\x7ff\xfc\xb7}`\xd5\xe6[\xca9\xf9\x99\x8be\xea\xcd\xf4\x9a\xd6\xbb%\xd7\x9dh\x96\xcc\xd2j+\x19IIII\xa75\xef\xfewoO\xc2\xcf\xaf\x0f!\xe1\xfb\xd9\xfc\xde\x99gS\xcd\xb2j\xdcn\xdc\xea\xdc\xea\xe8\xba[3g\re\x98\xe4Y\x11\xf7\x9f\xea\x7f\xca\x94\x00S\xe6\xe9\xcf\xf9^\xceG\xcf\xfa\x1c\xde^\xcev=\xb9\xa7U\xa9=c\x1e\xa7+\xae|\xef|xoO\x9f\xc7\xfa\xfc\xbb\xfd;\xf4\xbe\xcfV\x8c\xe5y8h\xe5\xcb\xaf\xcbz\xf8o\xa5\xc3[\xf9\xa9\xae7Y\xe4\xfb\xe3\xce\xf5\xe7\x86\xe7A\xb2MF\x84\xb95F\xac\xcd1t\x9a&vft17g:$\xb4VWevI\x9b\xa4\xb9.\x92\xe4\xb1%\xac\xdb\xbezu\x8d\x9b\xce\xad[5\x00\xb26UqF\xb1\x9bX\xa6\xe27.\xe5\xcdY\xcf\xac\xf9\xf5\x9f>\xa42v\xcdf1\x95k8\xbd^\x1e_\xb3\xe7<v\xe8|\xff\x00\xa6\xfc\xde\x9e\x04\xbc>\x9b\xe1v\xd7+\xae\xb9\x1do\x9c\xe9|\xc9\xca\x89\xafM\xae\xac\xd6\xc5\xb8\xb2kD\xba2R\x93I\xa8\xcd\x10\xa5j\xf3\xa9g_S\xf9}\xf5L\xf45\x8eO\x83\xecvg2]Yie\xa4\xb3\xaa\xb3\xbbQ\xc9(\x92C:\xbe\xf3\xab;\xb9\xce3_H\xfd\xff\x00\xe2\xe3\xcfK\x14*\xe1\xbc_?\xd3\x83\xcb\xeb\xcf\x8e\xb4s\xeb\x9b=\xea\x9bK\x92\xf4\xe7\xeb^w\xab\x83\xdf\x99\xacYf\xda\xd5$\xb0\xbb62\xc1)\xacu\xca\xdey\xda\x97I\xb3\x12\xdc\xcb$\xd13z\\\xcd\xf2i\x99\xd1%\x84\xe4\xb72\xfb\x9dW:\xf7\x8d;\xc5\xfd0\xecH\xec\x95\x92\xb1\xd4\xac\x91+\x13*\xc2\xc9\xeaJ\x9d\x8e\xc5b\xb9\x85\xcd6S\xacU\xacB\xc5\xac\x91.]\x0e}\'\x8e\x93Y\xc14J+$CX\xcf\xdf\xcd\x8f\xd1\xe5SW\xf9}Y\xb8\xf6\xf3WXu\xb8-v\xd1\xab\x8b\xa5\xe6\xf4\xd7;L\x1a\xd6[alm\x1a\x89Q\xab:r\x92\xc1\xa54\xe1M\x12\xca[\xf1\xbf\xae|\x9e\xbc\x9e\xd8\xf7\x9e]\xea\xe1\xd7\xbd\xe9\xf0Yse\xce~]\xb5t\xe0\xa5\xc9\xc7\xd1\xb7\xaf\x9a\xb9\xbb\xf5\xc5[$\xbb\xa78gV\xb9\xc7Z\xdf\xf6\xfc\x90\xe5\xaa\xf9n8\xb4\xf9\xfa\xe5\xf3w\xab\x9e\xddFX\xcdFXM\xd37\x9f=\xaaj\xa6\xa2Aj\xb1\x15MU5\xcfo\x95\xa77S&\xb3V\xa6\x89=\x0f)\xd7\xe7\x9d\x19\xc2A\x97d\x99\x9e\xb3c2I#\x1aYsv\xb3\xa7\xae5u\xe7o\\Ws\x9e"]\xac\xdd\xb3\xb0IXX\x922\x964u\x10%r\xf5\n\x8aWel\xd7d,\x84\xcdY\xd5X\xd9\x12\x87,s\xb8\xe7JY\xe6\xdb\x9b&a\xdb\x95]\xb8\xadG\xcf\xaf+\x17\xcd\xf5\xd5mF\xd8\xaaT\xa2\xc6\xd8\xcbU\xb5[N\xb5E\xb8\xb5y\xfb\xb8\xb5sj\xd6\xd4!4\xa6\x88%R\xfa\x1f7_\xa2\xfc\xfdb\xe8\xf6\xbe\x1e\xf8q\xe9\xf6~\xaf\x95\xd7\xf5xn\xe9\xce\xde\x9c\xe5c\xb1\xd8\xe9\xd8\x00Q\x00B1\xf2\xf4\xc3\x96\xe1\xcbUs\xdd\x1cz\xd3\x8e\x85[\xbcOXz\x89a\x9d\xd7\x8d=#-8\xebFzW\x9d\xd3:U5\x92o\x9c\xe9\xcb\xd2\x8a\xcf\xac\xe7\xd6(\xd4\x95\xcfg\x9ez\xdc\xf3\xab8p\\\xcd\'qbX\x92\xb2V(\x07sm\x97o\x1a:at\xc6\x14\xe3\xae{6\xdc\xec\xb9\xb7Q\xd94\x9d\xcb\xb1\xd5\x9a\xcd\xda;+\xc9K+\x1d\x8e\x9d\x85\x8bY\x8d\x91\xb2\x12FZ\xd2\xb20\xb3c-b\x95\xe3S\xe7\xb9Ar\xbad\xdc\x89\xcf\x97\x85\xd1\x82\xee+\x1aSB\xa5\x14\x96\x16\xb9g,\x9a%MV\xd6z\xc7\xbb\xce\xdd\xe7n\xf3\xf7\xac\xcb\\E}\xcf\x87\xaf\xae\xf2\xdd8\xeb\xdc\xf2w\xc5\x9e\xddm\xf0\xecz<\xddn\xde-\x1a\xe5wNWt\xe7-\xc6\x80\xd1\xe8\x05\x80\x01\xcb\xf9\xfe\xf5\nU-X\xe9^4\x0e\x9d\x88\x8c\xd2\x96\x13S\xd6R\xd1\x8e\xb9y\xf6\xcf\x8e\xb9\xe7L\xcb\x9bLu\x8bs\x9b\xd3<\xde\x99\xe5\xf5\xc7/\xb7<;\xc7C\x9c\xeb\xf1k\xcc\xbc\xd0\xce\xac\xcd\xfc\x9b\xb9\xdd2\\\x96\xd9m\x93fz\x96\xdc\xd9d\xac\xcb/\x19\xbf1\xdfY\xb5:\x19\xcfBf\xc4\x95\xcd\xac\xda\x96\xb3v\xb3\xa3x\xbfYvW\x11\xc9\x8fR6;\x9bw\x9b7\x1e\xb3\x0b"\x91\x88$,\x89\x18\xcefX+\x88MP\xad4&\x83D\xd6\x9b0\xa7\x8d\xeb\xbc\xba\xdc\xf3e+\x9aj4\x18\xb5an\xbewV4+RW6JJ*k:\xe1\xd5\xe6n\xfa?7N\x8e\x1d\xae\x1dt\xf9=\x97\xef\x95\x8bf\xf1t\xdfO\xbf\x9b\xa5\xd3\xc7\xa7|o\xdf+zs\x9d\xcb\xd4\x96\xa0*\x00#\x83\xf2>\xb4U\xd9=e\xea1\xd8\xea9\xb5\xe7u\xe3U\xe3q\x9a\x8a\x8bF:g\xe7\xdb4\xd66\xb1\xd6=\xe75\xce\x1e\x98\xe7u\xc7?\xa69\xdd\xb1\x8b\xbe\x13:\xf97sm\xcby\xaagTm\xe6\xd9\x8bt\x96\x96\xd96]\x93I\xd4\xac\x89\x9b:\xe7\xbaf\xb4\xb95\x92\xc5r\xd2W-\x97d\xb5\x89\xdc\xadg.\xb3F\x8d,*\xd6s\xeeJgIm\xcdZSd\x89&z\xc9\xa4l\xb1iL\x1d-\x1aJVWll\x92j\xc3\xa9\xca\xf6y\xa2p7\xac\x1d.\x1dj\x9b\xa9\xe6\xe9\xcd\xbf6\xdc\xe8T\xb6e<\xd94+\x94i\xcaM9\\\xd4\xa6\x9c\xb2\xce\xa7\x9b\x0b~\x85\xe7K\x97\xa7\xa9\xdf\xcbFz]\xacs\xb9z\xf9\xf7\xd3=^\x8d\xf2u5\xe1\xd7\xaf=\xfb\xe5wNv\xf4\xc4\xachP\x11\xe3\xfe\x0f\xe8\xabj-Y\xacOX\x95\x92\xb0\x16le\x86t-\xb7\x9d\xba\xe6,3\xaa\xf3\xaa\xb3\xd2\x99\xaa\xa2\xbb+\xb2\xb2\xbb"\x86\xf2\xb7\x91\x1c4d\xac\x02\xc8\xdc\xc3y\x8d\xcaGar\x0e\xc6\x85\x85\x95\xcbM\xa9\x1d\xcb\xb2W-%r\xec,hX\\\xe7\xd4\xe3ur:\xa7%\xc4l\xcb\xa9F\x91\xad\x19GS6\x90\xab"l\xa36\x95i$\xbf)E:g\xd6\xa1S\x92\xc4\x82\xd6\xb0Vk\xe6\xd9\x85\xf8\xb0\xb7\x1e\xb5\x83v\x8dY\xe7[1v\xf3\xd5\xf9\xb3\x95\xe6\xb5r\xc9\\\xd0\xd1+\x96Y\xd4\xe6\xa5,\xf1\xac\xbd\x1fU\xf2\xe3\xb7\xdb\x94e\x83U\xb7\t\xb85T\xdei\xde\xb9\xad\x19\xe5\xa5\xc3U\xe1\xa7\\o\xdf+5\x8b7\x89\xeb%|\xff\x00\xf3\xdf\xad\x9d\xccf\xa4\xcc\xaeE\x8a\xc5c5\t\xaa\x9d"u\xbaxw\xf5\xf24\xaen\xac\xee\x19\xdc\x1a\x84\xd2"\xb1"E\x15\x91\xb2\xbb+H,lQ\x12&.\xdcx\xde\xdf-\x1d1$\x92Y$\xd2\xe8\xbd-\x92\xc4\x9d\x93K\x12l\xca\xc9$\xec\x92N\x9d\xcbB\xb3\xa4\x12\x8d9;q;\x12\xea\xcc\x12\xbd3i\x97b\xcdY\x91\xb3&\xae]\xa4\x9bq\x03.\xaeM\x83Nf\xac+\xac].m\x19\xa3\x1a\x0e~\xef;\xa3"\xce:\xdc\xdd^7\xb1\xc59qo\\\xae\x8c;\xd15\xb7\x9d\xe9s\xba\xb1\xa9\xe6\xb9\xb9+\x95\xb4\xf2\x94\xb6gs\x96\xcc\\\x9dg\xd6<s\xbd\xe9\xe0d\xe8+\x9a\xcf\x8e\xd9\xf3\xd5,\x92z\xc2\x96\x19\xd2\xce\xa71e\xc5\xd7\x9d\xd7\x9c\x99\xf1\xbf#\xf4w\xef\x91,%\x95\x92\xb1K\t\xa8MV\xddst\xce\x9ao\x1d\xbb\xf3*\xaf;\x83P\x9b\xad\xa8MD\x85\xaa\xc8$\x12\xb4\x8d\x95\xd9[1\xb1\\\xbb\x91#\\\xcfO\x0e7\xd2\xf0K\\\xef\x93~3\xbb9\xd3\x1ad\xbe/K\x19\x9d\x92I\x8e\xc7a`\x80X\xac\x11U\x12R+\x03&\xa7\x0f\xa5\xc5\xb7C\x12\xd0)\xb3\x93\xd9\xc8\xec\xd5\x99\xb79\x81\xcf\xe9\xac\xbaU\xa9\xd1\xe4\xd5\x99V\x987r\xee\xdd\x99\xbb\x12\xc8\xa3LZ\xd77\xa6\x90\xad\xcb\\\xed\xb1\xddBU\x8b\xdf\xc4\xebp\xd7\xa6\xe16s\xb9\xb5y\x1du\xca\xe9r\xeb[1z\xdcu\xb7\x9e\xac\x96SNj\xdc\xad\xce\xac\x9a\x9eQ\xe9\x9f\xac\xf9gS\xbf)#R\x14\x02\x96\x19\xd5\x19\xebF:\xc2jVJ\xe4!7\t\xa8gK7\x8d\xf3~\x8c\xf5\x9b\\\xe8\xcfa\'s$\x05*X\xdb\t\xa8\xa8\x0b\x15B\x966\xc6j\x02\xa5\xa9\x16#`\x8a\xc4\x91\xb9\x08X\x98VSs\xc3\xf4r\xe6}\x1f\x16\xadp\x9b5\xf4\xe7\xb39\xe8\xf3\xbb\xf9\xdd\xb9_d\x91\xb2S\x12;\x92\x9a\x16:\x10\xb0B\xc8\xa5$\t\xa4k\x97\xb9\xe6\xbb\xdc]\x1d\x0c*\xa8U6Q\xb9\x8fwn&\xac\xc8.M\xcc;\xb0\xad\xd8\xce\xbcUf\r\xeb\x9d\xd2F\xb4\xe5\xd2\xe5R\xf2\xba^gK\xcd\xd5\xc7\xa5V\xc0\xc4\xd4\x83\x1ago\x9b\xb3\xca\xfao;\xbd\xc6\xca^?K\xc6\xeb\xaeoK\xaf\x17\xbf\xe7\xde\xccY5f-\xd9\xd7;\xa4\xf5>~\x9e\xeb\x97.\x8fLi\xdc\xb3P\x94\x90\x95d\x0cR\xc6Z\xb1\xbas\xd6\x99\xd2\x13Ic*^\x07\xcb\xfa\xd7^V1L\xea\xec\x9a;\x95*T\n\x96\x0b\x16\x92\xa1J\xa8X\xc1J\xa1eVUd\xeel\x98h\xecU\x14\x19VT\x9c^\xd9\xf0\xbfK\xcb\xe8z\xf8\xb6\xe3\x18\xfbs\xb5:\x9c]\x1ez\xd9\x95\x8c\xca\xc92S\xa6\xc8\x8e\xc0,v\x16\x08\xd1X\x01\x14t Ug\x9a\xed|_\xb2\xf4\xb9\xb6\xe2`\xeb6g\x04\xba2\xf2~\xadtp\xdd\xcc\xc8V{8\xddm\xa7[\x9er\xea\xd3\xa5+\xce\xdd\xe9s\xbbs3\xe9\xcc\xe9|\xff\x00]g\xb3/>\x94\xe9\xae\xc8\xe3V\xe6\xec\x93W=jK&\xbdo\x95\xe98Z\xd6+fm\xb3Wf\x8b\xca\xebx\xbd5\x8a\xdf\xb5\xfc\xddM\xcf\xa3\xd2k\xd2\xc2\xc5\xb5%D\x10@)H\x11f\xc3:\xaf;\xaf;\x84\xd7\x95\xf9_v\xfb\xcel\xc2j\xb6\xa1w+\x96*J\x86\x04V-)b\xb1PHj*\x8b\x10Hj\x01q4\xbd\x86\x95\xd4\x08X\x8c\xfa\x9c/g\x96\xbfg\xce\xb9\x92\xe4\xb3f\x1as-\x89Y9%cGM\x90\x924t\xeeecA\x18\xe9\xa0\x8e\x84\x00U\x9bS\xe7\xfe\xady\xae\xf7\xd5q\xcc\xe3\x8f\xd9\xbd\x88F\xce[\xf1^\x8dw\xf1\x9bnj\xb6\xd8\xe7Z\xf3z\x8c\xcc\xb2ID\x96\xd8\x9em\xb9h\x97To\xc5\x99\xaa\xde\xbe\x9d}<\xdf+Z\xf3\xee\xba\x19l\x96\xb5\xebb\xf9.\xf3\x81\xadu\xb9k\xbd\xe7\xd7\x07}9\xbd\xb1\xe0\xfdW\xd3\xf8\xfa}\xd3\x86t\xf4\xc6Nz\xaf\x16v\xda\xd4se-\xd76\\\xba$%Y\xa4\x12%2p\x97\xc7|\x8f\xd0\xca\'\xacI!5\x99\xda\xa7K.+\x9bE\xb7\x15]\x80\x80J\xe9K\x15V+\x94&U\xc8\x91\xb26;-f\xc6$\xca g\xba\xaa\xb9\xbd\xf9\xf3\xbe\x8f\xc7\xb1.K$\xb5\x99\xc5\x88\xeeg\x12\xa9#F\xcc\x89X\xc7c\xb9\x902\xc7M\x04v0\nb\xb0 \x9c\xdd\xdf\r\xe9\xd7e\xce\x95\xf5\xfeV\xcc\xc9\x06\xadZ\xbb\x8b\xcb*\xcbl\xb2Ub\xce\xa7R\x96vL\xf9\x17\xa2x\xcd_O\x97\xd3<\xf7\xd2j\xeb\xea\x9d\re\xe5#\x9b\xb3\xaa\xcaKO*J\xa5"2\x92\xb1J\xa6\x94\xb1\xcd\xb0\x035f\xc3:\x8eu^u\x19\'-\x96N\xe5\xa2\xcdR\xac"\xa6D)\xaf-\xf3\xbe\xe4sIerT&\xf1g\xd1M\xe9e\xc4f\xac\xd6#*&\xcb\x91\x19\xb5\x02\xe9dF\xc4WdQ\xdc\xc4v\x16I\x91$\x92\xb2)E#\x81\xdb9\xfe\x97\xc8\xd0\xe7r[34\x9aM$H\x9a6ZJ\x9a2V;\x99\r\x97L\x0b\x12\xddKt\xba\xae\xd5\xb2\x9e\xe5\xe5\xb5mOK\x0b-\xb6\xa7S\xb1\x88\x8c\x02\x14 "\x8aT\x8a#\x0e\x94y\x1d\xbamz=K\xf7X@\x0b"\x11\x0cU\x0b5+\x9a\x14\x80b\x95\x8eRiA)\x9a\xc1L\x98\xb3a\x9b\x0cj\xbcmK+\x1eB\x19\xb1\x95db\x91\xe4\xfc\x1f~S3\xb9\x83UN\x8d9\xefNV\xae\x99\xdb9\xca\xca\xb3\xb2\xc2\x86k\xb2\x9b+A)\xaa\xf4\xd1\x9a\xe6\xa1U\xdc\xbb&\xcd\x81cf\xc6d\x96\\\x96g9\xbd\x1c\x1f\xa3\xf3:[\xf2\xcc\x9b3I$\xe5\xd1s\xaa\xb4k7\xeah\xd3F\xa5\xf6]\xb9u\x97U\xfbYe\xb5n\x97i*$\x8a@\xa62\xad\x11J\xd1\x14\xcbI\x9aZ\x0c\xa6E\xceg\x96\x95\xcf\x19W)A\x95q\xaeS%g.\xaf{\x8e_Jr\xf5\x1df\xad\x98\xe9JS\x90\x01\xb5\x0c\xb9\xfc,\xa5\xbbI\xab\x1b`\x04\x00\xa2\xbc\xa5*#\x9dC5\xc4\x95\xc3\tPd\xb3a\x9dC\x1a\x8elsIV\x11\xe7c\x8dy\x7f\x17\xdc\x84\xda\x8bn \xd2Q1\xbb\xe5\xb6\xc8\xabR\x16\x16i\x86\xc9sM\x95\xdc\xd6e\xb3\x07\\\xe4\xe9\x8e\x87;\xaf\x1a\xd7\x8dA]\x80\xacrZ\xcb$\x92B\xe7&\xe7\xcf>\x8f\x9c\xf4y;8\xcf\xa4\xdf.\xe7\xa7\x9d\xdaX\x90\xb7<\xb5E\x12\xe72\xcb\xcf\xba\x8af\x8a\x0c\xa6#\rd1\xd6\x1dg\x15\x99S=\x94U\x15JU\xa9M\xcdu\rJ\xca\xb5**\xb25\x12\x12\xa2D\xe1\xad\x91ay\xed3\xcf\xec\x13\x9f\xd8\xf1=\x0e\xd6X)N\x00\x05t@\x04%\xab\x9d\xcf\xca\xc6$\xb3\xb6\xcbd\x03\x05\x02V\xae%(\x12\xc6if\x91!\xc2\x00\x83&(Y\xab69\xb1\xc6\xa1\x8b\xe2\xbeO\xe9\xads\x83U\xcd\xc6\xd9\xb3D\xe8"Zm\x8e\xf3]\x91\xb3\x9f\xd3*\xe2"\x8a\x82\xe36\xa6\x8c\xb0\xeed\xeb\xcf\xe8]\xfc>\x8b\xaf\x9bD\xb1\xa9\xeb2\xb2\xcdg\x87\xe5\xf5\xf8?\x9f\xf5ef\x99\x90\xa6\xbcW\xab\x9f\xcc>\x87\x9b\xcf\xf6\xe3\xcb\xef\xcb7nu\xeb\x10\xdf(k\x99\x0c%d\xa5kd\x0bdL%\x99nm\x85\xb9\xbb\xf1ve~m\xd1t\xb7f\xeb\xcasZ\xe3f\x16\xc6\xac\xb4%\x84\xaa\xe8\xd3\x94\xe5t\xd2\xdb:Z\xcf\xa6\xef\xc3\xd8\xfaxu\xbbb\xcd\np\x00\x00\x00J\x8a\xe36g7\x9ep\xafoz\xe8j\xc7\x16\xbcZ\xf3T\xd4\x89\x12\xa6;X+\x89M\nCW+\x80R\x88A\x04\xa6c\x10\xb3H!K\xf3\xcf\x81\xfa\xfa\'K\xaf;\x9c\xe2\xb9\xddl\xb8\x83Q\xb2\xc4\xa6\xdc{\xc1\xbc\x99\xbc\x0fG\x1c\xdd2\xa2\xa8\xc3\xa9fe;\x97\xcc\xfd/\xdb\xf3=\xaf_+\xb9t\xac\x07\\\xee\x1d\xbc\x0f\xc7\xfby&\xea#\xa8\xec\ne\xc3\xbc\xf2:Lz\xc9e\xd1\xaaM\x88fh5I\xb6bU\x8a\xea\xeb\x9d36\\\x92\xcd\x08E\xa9;\x1a4\xd1\x89m\xc1#\xb0\xb2\xc4)\xa4*w*\xcbl\xb5\x1d\x1b\xcd\xddq\xb3\xb6v\xf7\xc6\xefF4t\x93\xd0\x00\x00\x00\x021Nf\\9\xbc\xb7\x1ez\xdf\xd36\xeeN\xa7V\xea\xce\xc0%\x8eu\x1cX\xe6\x92\xa8k!\x80\xd4\x9bcW,\xa1\x80\xed G\x00A\x04)VFJ_\x9a~\x7f\xf6\x92\x93;\xa5\xfa\xe5{\x11\x9a\xcftk\n\xcat\xbaNo~Y\xf5/\xc5\xcds\xe7}\\\xab\x88\xc9\x8fLz\xce\xcb\x9f\xb5z>_\xa5\xeb\xe7\x19)\xd8Ps\xb1\xbf\x89y~\x9f\x9f\xd5\xf4\xbe{\xe9\xbc\x9d\xb4T%\x80\x95,\x99\xd0\xcd\x97:\xdc\xe5e\x8c\xb2\xfds\x9d\x82;\x1d\x95\xcak;/9\x15\xaaI\xea\x10\xech\xe8\xa9\\\xaai\x02{\xcc\xf5\x98\x98\xbc\xfd\'e\x9d3w\\j\xed\x8d\xbd\xf3\xa7\xbe.\xd9\xd8\x0e\x88\x02\x80\x80\x89VY\xb0\xe5\xf2\xbc.[\xf3\xb3\xaelo\xbd\xcez\xde\xbc\xb6t\xcd\xbb\x93\xda\xcdIS\xa6 V\x19\xa4\xb1\xce\x94\x12\x90\x82Q\xb2Bj*\xe2k"c\x86\x001\x84\x84)VD|\x9f\xf3\x9f\xba\xd2\xc4\x93\x1bw\xeb\x9d\x88\xd2\xbb\'\xbc\xc7(\xeaf\xe9\x8c\x9b\xc5Uv\'\x9c\xf5q\xe6u\x99\xec\x84\x9d]c\xec]\xbeg{\xa7\x03YCB\x9dC/\x9by>\x87\x9a\x9dx\xdd\xb3V\xb3\xeaq\x8f\xb1\xfa>{!*\x96$\x14IX\xec\x9d\x8d%\xa8\xd1\xd8\xf4h\xeaV;\x1d;\x04(G@\xe8\x1d0\xa6\x8e\x80\x02\x8eZ\x95\x93\xdaV0\x00\x00\x01\x88\x84U\x99\x93._;\xc6\xe5\xd3\x8b\xcb\xaf/\x1b\xc0\xd77\xab\x97\xd7^\xdb\xcb\x8fexv:gn\xe5\x9a)A\x12\xab4\x9dJ\xa5R\xa7\x02\xb5\x1a\x8c\x8b%)*\x95M)\\\xb2\x1a\xca\x18\xe6\x81\xc3Ga\x90\x01\x06_\x18\xfc\xf7\xeet\x9a\xf3\x02\xab-\xb9W5X#\xd6f\x179w\x9c\x1dq\x9bX\xa68~\x8eT\xf4\x9e\xe2y\xbe\x91\xdf\xc1\xbb\xaf(\xb2S\xa394\x9e\x92J\xf3P\x99t&\x8e\xb9v\x03\xa7@\xaeX!L5\x18!@\x80\x04\x80\xd1\x8a\x81\x80\xe8\x01\x850\x00\x00\x00\x00\x11\x19+\x8a\xe4\xcf\x97;\x17\x8f\x8e\x9c|t\xe4\xe3\xa6\x1ct\xa2jr\xc0R\xc6\xa99\x9b\xb5\xef\x19:\xe7\xad\x9cz\xccs\xf4\xb3\x9fm7j\xce\xa40\x9au:\x9dN\xa7M]1\xd2\x82U\x04\xaajSR\x96@\x12\xc3;Y\xa1$hC\x00\x87\'\xc7??\xfb|\xf6Yf\xcc\xac\x92\x01\xbc\xab\x9a\xd1Xk2dJ70\xf5\xc6\x1d\xe2\xbdg\xd8\xf4\xf1\xfb\x1e\xfe\x0bu\x85c\xb1\xd4\x99u=K\xacv\nX\xd9,c\xa4\x80RB\x8b$2@\x1a\x84\x14\x84$\x05\x05\x8ch\xe9\xd3\x1d\x00\x80Q\x055H\xa5I^P\x96\x19\xb4\xe6\xe5\xc6\xb2cx3\xbcx\xe9\x8b;\xab\x168W\x9d[\x9b8k8\x96d\xc9\x8e!P#\x11\xaa\xab.\x9c\xfe\xb3\x9d\xdf\'^}\x17>\xbd\xe7\xdd\xcez\xa6\xcd/\xb6d\x94$\xb2\xa9\x8fI\x8e\xa4\xa2;I\xa3:\x9c\xb2\x18\x96\xbc\xea\x19\xd9+\x1c\x8e\x00G#>=\xf0?g"\x8b\x95\xa9\xa2-\xc2\xaa\x8e\xb3\x1df\xb4\x8d\x91\xd6lD\x95o\x18:g\x99\xd7\x11\xeb\xce\x8e\xbc\xea\xe9\x8d\x12Y%\xa9\xb3\x05\xd3\x16k\x9e\xbb\x96i\xca\xab\x95N\xe6\xe6n\x8a\xaa\xfcZ\xc6\x92\x85\xac\xe9\xcbn/G\x95\xd5\x8d2+\ta,e\x88\xc7$\xaaI;\x97d\xee];,\xb1\xa4V\xaa\xadf\x97\xc8\xc5\x11\xcd\xa7;\xaf:\x84\xaaU(\xadQ\x18\x8dE"4\x95\xc8\x8d\x00#\x00\x86D\x88\x95\xa2XV{p\xf4\x9c\xee\x93\x1fXt\xc6\xdb\xcf\xb13\xd8g\xa4\x9b*\xdbfL\x95IekV:\x92\xb9gl\x89UR\xe5\x9a\xcf7)\xa9\xcd[%\xb9X\xcc\xee@\x8f\x87\xfc\x0f\xd9]s"\x8df\xc2\xc4\xbf\x15YV\xf1\x0b!ez\xcbD\xcdVWf]\xe7\x9f\xd38\xf5\x9c[\xce}\xe6\xcc\xda\xd3Nn}\xcc\xdb\xce\x1d\xe6+\xd3\xca)\x9fR\xca\x96\xf1\xd3\xc2\x9e\x98\xe9a\xd0\xc2Z\xcd\xf2\x1a\xce\x89\x97f\x9c:\\oC\x96\xb6\xf3\xd5\x99\xd3\x12\xa9\nu$i+\x99\xa4\x86\x80T\xd2\xc4#-\xb1]\tc.\x98\xd9*2\xc5k\x96*\x80tBX\x95-v\xd7asb9\x1c\x8aX) Hh\x11\xb5\x11\x18\x96\xb5\xcb\xa9\x8bs\'I\r-\xd6v\xdc\xf4X\xe8\xdc\xf4\x13V\x97[j\xca\x98\xd5\xac\xa2v\xd9Ed\xb3\x93\xdb8\xf7\xad\x1c\xf5v5n:m\xe7\xadx]p\r>\x1f\xf0\x7fbk\x17\xc5\x1a\xccl\xb1-4f\xd5f~\x99\xa6\xe26+\x97s\x19!A\x97Y\xe5\xf5\xc6}\xe6\x9b \x02K`\xb2\xbb2\xee*\xdb\x94,\x86\x90\xde:\x12h\x91jt1\'a\xac\xc3Y\x9d\x97%\xb9\x89.:\\5\xd0\xe5v\xf3\xb7\xe6\xceWjA\x04*I$\x92L\x00e\x89R\xc5oD\x91\xab"w%DM(Ef{h\xd2\xad"9\\U\xa5:S\xab\x12\xec\xb5an$\xe4\x94\x84\xa2Hh\xe9\x88J\x11\x96\x0b\x04\x82\xc1k\xac\xfa\xb9\xf6\x86\xf3v\xb3\xaa\xe7\xa1q\xba\xe3]\x9aV\xc2mMl\xabiY\x87s\xcez\xe77\xb6\x8aU\xd1\xf3\xeb\xd2x\xb5\xd4\xe7\xbd\x043\xa8\xcb\xf1o\x8b\xfa\x95\xa9s1\xb2\x9b\rK"\xf8\xbb6\x8dg/LSs\x1dA\x95b\x04I\x9bS\x0fLf\xdc\xaa\xc4\x8a\xc8\x97E\xd2B\xa9\xd4\xb6-\x15\x91\xb2{\xc6\xfcB\xac\xb3D\x8e\xca\xb5\x98\xef6%\xf9\x82X_\x85\x92\xda\x9by\xcd\xbc\xed\xd3L\x98C\xa9H\xd6I(`I$ &@\x85Y\n\xa1\xa3I\xc4\n\xad\xad\xaan\xaa\xb2\xadeY8\x9c\x90\xaa\xf4\x80\xa6\xac\xce\xf4cR\x87\x13\x99\x9a9\x04V2l\xb0\x94\x12\xc6\x05\x8c\xb1\x95\x8a\xd8\xdb]Qm\x15N\xd1\xdel\xd6u\xdc\xed\x93Lk]\x96_c\xd4\xcb\xa7?\xab>\xedzU\xa5\xd9\xbd\xaf6\xba\xdc\xee\x85\x867\x1c\xeb\xe2\xff\x003\xf4m,f\xdaVUae\xb1\xab\x06g\xde2\xef4k5\xeaE#s\x14\x90\x15\\\xe6\xdes\xef0\xaa5#a%\xa5\xf2\x80\x93\xa7s8\x9d\x9a&l$\x9abHY\rd\xd4\xb2fd\x99\xb2,\xca:CY\xb2\xcb\xf3,["\xdc\xdb\xa5\xd1\x95\xf8\xb6A(\xad$\x8c\x90#\x12\xc1jk6\xd9\xf7\x1d\x96I]Qu)n\xcd\xbf\x9a\xf9-\xb8\x92\x04B\xa2K:K\x19b\xb1X\xacQ\x82\x08\\\xc4$\x16I"Y9EB\nDm\x82\xd7u\x15\xadk\xaa\xea\xbd,\xadz\x9b\xa4\xd2\xce\x8b\x15U\xab\n\xafHitt\xf0\xdf\x94\xf3\xa8\xce\x92\x8f\x8f|\xef\xbe\xeeD\xb4\xb4\x85\x94\xeb%\xcd\xb2]\x9b\x1a\xa3Y\xcb\xbc\xe6\xd6k\xb2\t\x1dfQa2)\x97Y\xcb\xd35jUr\x87V\xcb\xaa,\x91\xd9\x1b\x9bcB]-\xb32IU\x92J\x8b\x1b\x0c,,\x92NFU\xb9\rEb\xb9*I\xb3\x17\xa5\xc7[\xf9\xebF\x13QD`\x92\x05\x00\xaaZ\xae\xe9\xb6\xad\xe2\x1a\x88\x88\xaaR\xd9\x9d_\x86\x99\x9b\x99\xb1$\x02\tP\x8a\xd6+\x19kj\x02\x12\xa1Y\x11"\x04"Q(\x9c1\xc1HU\x1bR\xc5cu\x10j\x15\x9a\xdau\x16\xeb\xab\xe3\\\x9a\x8b\x92\xc8*u\xaaM\x105\x19\xa9\xc7\xca\xbc?l\xd4\x94\x8e\xa6\x8c\x8e\xa57\x05\x92K%\x82Q\xa9\x9bY\xa7R\xbb\x95cIE\x84\xd2\x06}g>\xe45\x9a\xb4\x12\xd9tI\xab+$5\x99\x96\xc5\xd2M%M\x0b\n\x95\x96L\x88\xa9X\xaeec\x88\xd4u"\x85\x8a\xc2\xc9\xa6\xeew\xa1\xcbZ\xf9\xdb\xe5\xb6-\x89\x85%\x88\x04D\x8a\xa5T\x90\x05\x10R\x05\x9aI&\x92$2 )P\x80\xadjj*\x0c\x08\x10X\x82\x04a(9\'\x00\x00\x02\x8d+R\x82)\xb7&\xae-o6\xac*\xd2\xfa\xbe4I\xa0\xd1%\xf1i)\xa7,\x8f\x9e\xf9>\xa9b\xb1\x85\x92\x1b1J\xf7#p\x16\xe6\xa2\x8df\xa4Z\x91\xb0\xb2H$\xd2P\xac\xaa\xcc\xfb\x90\xd4\x8d\x8c\xb6-\x93Fe\xab4\x95\x96I4\x07RF\x8bRD\x99\x124X"\xd6J\x11Q`\x89\x15\x85\x97F\xbez\xd9\x8b\xab\x9bL\xb7E\x92\xc9@\x02"\x10\r@AZ"*\x862i!\xaaD\xa8%i\x15\xa5\xaaV#&\x80\x88+$\x05k\\\xb0T\xa8!\x8cd\xa0\x05q "\xd5-e\xd6\xb2\xb5F\x95\x11\xd6\x90\xeavN\xad[\x0b%\x92\xce_9\xe2\xf7\xab\x1a+\x1d\t&dB\xc8k0\xb0f\xc9Q]\x91\xb2W)\x15\x16\td\x96K\x1b!\xa9]\x8bR\xbb\x16\xb39,\xca\xd9l$\x93F\x85I$\x93\x18\xec\x91)\x96-Ear\x91h\xach\t\x0b#E\x92,\x8b\xf0\xd7\x8b\xaf\x16\xec\xdb%\xb2Y\x93\x18\x84\xa9\x12\xa9AZ#\x04\x00cF\xa0\xa0\n\x15K\x05\xa9\xaa\x16\x16\x896B*\xa2D\xd2A\x11\x9a\xad\xa8\xd2X\x80@1\x92\xcaK \x12\xa9\xa8\xdb\t\xa8\xad+F\xad\x16\xd3T\xdb]F\x92\x96\xaasP\xf1z\xe3`\x85\x0c\xba\x12hY\x0b#s\x1b\np$.]\x80X#\xb2qlH\x126F\xca\xaa\x9d\xe1j2q8\x9cM\x1d\x82;&Li2\xcc\xa6\x92F\x8a\x8dB\xe4\xb1\x11EL,V\x04l\x00\x0b#Fm\xf8\xbap\xd1\x95\xb3S&La\tb\xa0\x95,B\xc6\x08\x00\x94\x94\x10\x95\x11Z\xc8,-\x88*D\xa0\xd1\xc9!\x84\xac%J\x84 \x05d\xa1\x8ePj\x94T&\xa2\xb0\x96\xbb`\xd5\x0bE\xb9\xaa\x9a\xa6\xda\x96+o\x9b\xd0TR56D*I4dnc\xa4R7*\xe5\x06\xa0\x8d\x1cLq+\'\x12\x12+#ez\xcdu^\xe2\xb1\xa5\x99[\x13\x89XX\xc9\xd4\x92D\xe4\xb2I\xc9!\xd3B\xc2\xc1#J\x921\x08V\x16F\xa1I\x15In\xcbNZ9\xdd\x19\xb7f\xdb\x16\x92$N\x05K\x15\x8a\xa2"\xa4\x89R\xc6\x01\x89B D\x89\x15\x83P\xb6\x02@h\xd6P\xc7+\x86\x03\x10ZC\x86\n+Pr\x82\x13PX\x91\xb62\xc1\xa8\xadkL\xb4[\x99`\xb99\xf5t"\xa1&1\\\xcd,\x87dR:\x91\xb9\x8d\x90\xb1P\x8d\x99,\xd2y\x14\xaar9\x18Y\x0b+\xb2\x1a\x95\xeaCR\xc9,\x96\xc9,$\x92\rGR\x8939$L\x928\x90\xd1X\xacAJ\x92DB\xd0\x15\x90\xb2\x14\x82\x9cY\x1a3ua\xa7+\xf2\xb76\xc5\xb6\'\x12V)SQ\xa8\x10X\x88K\x12"T\x004\x05,-K\x12$HRI,\xa2K(\x06!(\x03\x89MHj\xc0\x15\x11T\xd4H,\x16+\x115\x01KZ\xd75\x13\xcf:](4ad\x99`\x93&\x8c\x86\xa2\xb8Dj7*\xc6\x92Y$\xf2\x05QI\x16HQs\x1b+\xb2\x15\rejN,\x92e\xb1!\xd8S\xb9\x94\x92$\t"D\x89C\x81\x0b\x04T\xaa6DB\xd25\x1b"\xb1\xb9T\x86H\xb2.\xcbNZ1o\xca\xfc\xdb\xb3l&9X\xc5,Z\x89\x026\xc6X\xd4V\x02\x01\x00\x00B\xa4"*\x84\n\xc9\x04\xa8U\x15!\x8eYK%\x91 \x1a\xa15\x15\x81\x05\x83P"+\xa8Dm\x84\xb0P\xf2\xcd\xdf\x16\xcd\x0c\xbar:i!\xa4\xc9"\xb2\x17(VF\xe4\xb0$\xb2\x92A"\xb1+I\x16 \x8a\xc8\xd4,\x8d\x0c\x9a\x85\x92I\x16,\xd2C\xb9\x11\x8d$\x03\xa9C%\x13\x91\xc0\x8a\xc5\xa2\x15$D4\x8dF\x90\xacB\xb1\xc3$H\xb2.\xcd\xd1\x86\x8c[\xb2\xba[e\x9cHj@\xa4\xa8\x8d\xb0\x88\xd4V"X\x88T\x84\x00\x02"\n\x0c\x04\xb1X\x91RVJ$\xaeVHj\xc1P\x9a\x89\x05\xae\xd8\x11X\xddF+\xb6\n\xa5,\xf23W\xc5\xf2\xd82H\xc0\x92H\x11\xdc\xb0HRB\xe5\x06\xa2%\x12\xb1\xc8\x00\x12IY8b\xb0HQr\xaa:\xca\xa9$\xaa\xc2rJIXC\xb1\x80\xc2\x82I(\x92O&\x8a\x95*AQ"\x90\xa8\xe8\x82\x90\x86\x8c`\x88\x99vW\xe6\xdd\x9b\xa3\x0b\xf3g\rg,\x96P\xd0RTF#j \xb1\xa8\x91X\xd4@J\x91(4\x00\x8bQ"\xb1RP\x91(\x94IZ\xb5\x00J,J\xf5\xa8\x90X\xacn\xa2VV\xd2\x04\xf1\x96\xe9\xcd\xb6.\x96\xc8\x92X\x01M%2\xe9\x82$\x8d\x89\n,\x88X\xd2D\xb2t#%d\x89HP\x82+\x15\x16+\x16\xa3\xa9\xa4\x92q<\xc9\xa1h\x8cv\x01B\x04\xe2RN\x18\x08T\xa8\x11\x1a\x8dDV%\x11\x05\x85\x00\x91\xb5$\x8b%\xbb+\xb3n\xc2\xdc\xdbb\xc8\x9a\xce$\xacp\xe5P* B\xd8\x95\xdd@\x85\xb1 \x14AN\x18\x84!(\xa2\xb1\xca\xe1\x92\x95\xa8%B\xba\x85\xb1\xa8,*\x16\xa9b\xb0\x88Z\xaa5\xe1\x97FZb\xec\xdb\xe2\xc9ed\xe0Gc\x1c;\x18\x92,\x94\x82\xc0V$,u8i"D\x91\x8d\x18\x90\xb0\x0b\x1d\x80\xf5\rfRH\x94NF1\xd0\x08\x05\x8d\x1d9d\x8f)\x0e\x00\x15\n\x90\xa4F\xa3Q\xb0\x01\n\x95!Y\x11Z\xd2qfm\xf9]\x9bl\x96el\xb3\x8b\tJ\xd6Q(JDV%v\xd4\xdc*$HTD\x03\x01\x08`IZ\x84\xa5p*\x82\xd4E\xa5QXj\xc5amd-\x8a\xc6!ll\x8e\xa7\x85\x9a\xbf7Dj\xca\xe8\xba\'\x13$2R:\x01\x1a\x08\x91R\xa8\xd9\x1b\x1aF\x9b2%$\x96d\x89#\x04\x92\x04\xa9\xcc\xba,,v+\x18\xd1\x93\x89\x0chX\x02\x14\xc7\x0e\x9eL\x90\xe1\x82\x80\xa0H\xaa6*V*\x8d\x04H\xd9\x126\x82\xb1\n\xc9D\xe5\xbb+b\xe8\xb36\xdc\xae\xcak)f\xa48%K\x19\xa8T\n\xee\xa1H\x89\x10\xa4\x89P\x80\tT\xa5\x90\xd5\xc0%\x8a\xa9al-\x8dB\xe9,\n\xed\x85@\x89]\xb5\xeaB\xbc2\xe8\xcd\xbaM\x19\xbar\xba[\xf2\x9cI&IZ4\x01$4B\xb2)\rEM\x12\x16Hd\xe2D\x89#I\x13I\r%M\x0b\x15\x89\x15+\x192C\x92C@\x10\x18\xe9\xc3\x00\x19)e\x0c\x10RB\xd1\nDl\x8e\x8a\xa3Q"DU\x14T\xaa(\xa8\'\x16E\xb2\xdd\x95\xb9\xb6\xe5nm\x91`\xf3e4J\x96""F\xd8\xacT\x10R"\x90\xb6!L\x942Ci\x11"\xb1X\xdb\x05\x85V\xd4-\x89\n\x82\xc3H-UMS\xb9\xe2\xb3n\x92\xf9n\x8dX\xba2\xb8\xbb+r\x910FHI"h*Es\n\x8d\x8a\xc7`\x03\x198\x95\x92\x92\xc4\x91$\x992H\xd0\x15\x91\xb1Ti\\\xba\x98\xd2YId\x89\x05hPH \x01\x92\x89+\x87\x05\x03@\x05QH\xd2\xd2\x14\x88\xd4D\x88\x85\xb1\xb9\x8dF\xd4\xc9S\x96\xd8\xbb\x1a\xb4\xb3\x0br\xbb6\xd8\x9c\xd3\x95@\xb1\x00\x08-\x04\x04ZU\x11\x11\xa8\xa8\x8dA*\xa8\xaaTEamk\x0bk\xb6\xb2\x1bV\xb0\xa8\x14\xdb\x9bJl\xff\xc4\x001\x10\x00\x02\x01\x04\x02\x01\x03\x03\x04\x02\x03\x00\x03\x01\x01\x00\x00\x01\x02\x03\x04\x11\x12\x05\x13\x10\x14 !\x06\x150"1@P\x07\x16#2A\x17$3`4\xff\xda\x00\x08\x01\x01\x00\x01\x05\x02\xaf\xf3+h\xfe\xaaQ\xf8ER_\xbcD/\x0c\x7f\xb8\x84/c$M\x95_\xce~P\xbc/\xda\x88\x86U\x7f\x17\x0f\xf4VeVT?\xf6\x91jP(x\xac\\\x7f\xdb\x8f,\x88\x91\xfe\xcfl\x0e\xb6\t\xdc\x93\xb9%Y\xc8\xfd\xc5\xe1\x1b$N\xee1+\xf2z\xab\x9e]\xc8\xa9^u<1\xf9\xc7\x86c-\x1c-.\xdb\xc1\xae\xcb\x9a\xdf\t\x8d\x0cc^\'\xf3;TC\xc5F7\xf3\x11y\x97\x98\x91\xf2\xfc2d\xca\x9f\xba\xfd\xd0\xbc/\xda\x87\x892\xb3\xf8\xb8\x97\xe8\xaa\xca\x84\xcf\xfd\xa6Z\x94\n>+~\xd7?\xf6\xe3\xcb\x16D\x8f\xf6R\x9e\t\xd6\'\\\x95\\\x9f\xb8\xbc\xee\x91;\xa4\x8a\xfc\x82\x89[\x93r%RS2g\xc3\xf71"(\xfaz\x97\xe98\xd8v\xf2U~f\xc61\x8c\xc0\xabf\xa5\xb5B5\x89W*\\\x1d\xff\x001\xaew\n\xb1\xdc:\xc7h\xaa\x11\xaaF\xa1\xd8)\x9b\x9b\x0eD\xe4ND\xdf\xea\x8b\x10\xbc\x7f\xe5\x0f\x13+2\xe5\xfe\x89\xbc\x95\t\x9f\xfbH\xb5-\xca>+\x17?\xbf\x1eX\xfe\xd1#\xfd\x8c\x9e\n\xb5\n\x95O\xdf\xceGU"\xa5\xdaEnE"\xb7#)\x8enFL\x8d\x993\xeeg\xfe\xfe\xe2G\x11K\xaa\xcc\xe0\xa1\xfa\x061\xa1\x8f\xc5\x1b\x8f\xd5B\xe4\xf5d\xefI^\n\xe8\x8d\xd0\xae\x8fV;\xb3\xd5\x91\xba\xf9\xf5D.\x85vz\xa1]\x1e\xab\xe7\xd4\x92\xb9\'rJ\xe0\x95\xc7\xcck\x8a\xb9\x1a\xe7y\xdf\xf1F\xb7\xc7q:\xe5j\xc8\xbb\xad\xfa\'T\x9c\xc9L\xcf\xcd"\xd5\x94\x1a(\xc8\xff\x00\xca\xcf\xe2\xeb\xf7\xe3\xd9b\xc8\x11\xfe\xc6\xa3+O\xcb\x92D\xae\x12*\xde\xe0\xaf\xc9\xa4U\xe4%3v\xc4\xcc\x993\xe3>\xfc\x88\x89J.r\xa7\x1e\xbau\x9b\x8d+\n}6\x03\x18\xc6?\x14\xa9\xb2\x9ah\xc3$\x99\xd6\xc5M\x8a\x93:\xd9\xa3\x1d6u\xc8P\x91\xac\x88\xa9\t\xc8r\x90\xaaHU\xa4w2U\xe4J\xbb%]\x9d\xcf1\xae\xc5\\\x8d\xc1\xea~}IJ\xeb\x0b\xd6\x13\xbb+]\x9779\x8c\xab\x12\xaaJ\xa1\xb9Jx-\xeb\x14n>(\xdc\x1e\xa3\xe2\xbd\xcf\xc5\xc5\xc7\xcf\x19W%\x83\xca\x81\x11\x7f^\xca\xcc\xad/\x97Q"w)\x15op\\rX*\xdfJ\xa1\xb6D\xc4\xc5\xf82d\xc9\x93""qT{n\xd9Uo<b\x98\xc61\x8f\xc4l\x05dz#\xd03\xed\xc2\xe3\x8f\xb7\x9fn>\xdc}\xb8\xfbi\xf6\xd3\xed\xa7\xdbO\xb7\x0f\x8e>\xdc}\xb8|x\xf8\xe1\xf1\xa4\xb8\xc3\xedl\\[>\xd8\xcf\xb6\xb3\xed\xec\xf4\x0c\x8d\x94\x87i"VreK9\xe6\xad\x94\xc7c2V3%c3\xd1L\x8d\xb4\xd1N\x94\xd1\r\xd1JrC\xad,U\xad"\xadG\x9e&O<k\xf8\x83 /\xeb\xe4U+\x97W\x1dn\xbf%\x82\xa5\xdc\xea\x193\xe11\x0b\xf0d\xc8\xd9\x9f\x10 \xbe8\n?\xf2\x16p\xee\xe4\'\xf3/\x0cc\x1f\x85\xc7\xa1X#\xd0#\xd0\x1e\x80\xf4\x07\xa1=\x01\xe8\x0f@z\x03\xd0\x1e\x84\xf4\'\xa1=\x11\xe8\x8fDz\x13\xd0\x9e\x80\xfby\xf6\xe3\xed\xe8\xfbr>\xde}\xb9\x1fn>\xdc\x8f\xb7\x0f\x8dC\xe2\xd0\xf8\x9c\x8f\x88\x1f\x0e\x89p\xa3\xe1Q\xf6S\xec\xe7\xda\x8f\xb6\xe0|yS\x8e*qm\xbe7\x8d\xd4\xb3\xa1\xa2\x81\x11\x7f_6T+\x9c\xdd\\O&L\x88B\x10\xbf\x13\xf0\x88\xa2\x9cN\x16\x96\xb6\xa7\t\r\xaayc\x18\xfc+QZ\x9e\x95\x1e\x99\x1e\x99\x1e\x9d\x1e\x9d\x1d\x08\xe8GB:Q\xd2\x8e\x94t\xa3\xa1\x1d\x08\xf4\xe8\xf4\xc8\xf4\xc8\xf4\xa8\xf4\xa8\xf4\xa8\xf4\xa7\xa4="=!\xe8\xcfFzC\xd2\x1e\x90\xf4\x83\xb4=!\xe8\xcfF;#\xd1\x1e\x88\xf4C\xb2\x1d\x88\xec\x07\xc7\x14-\x14\x08D\x8a#\xfd\x85FTe\xcc\xbe9Z\xbd\x97\x992!\x08B\xfcLlD\x08\x11\xf9v\x90\xeb\xb6\xa9-)\xf1T\xbal<\xb1\x8c~\x121\xe3\x06\x0cy\xc1\x83\x06\x0c\x180`\xc1\x83\x06\xa6\xa6\xa6\xa6\xa6\x86\x86\x86\x86\xa6\xa6\xa6\xa6\xa6\xa6\xa6\xa6\xa6\xa6\x86\x88\xd0p44\x14\x05\x11!\x7faQ\x95Y}=cZ{\xd6l\xc8\x84DB\xf3\x93>\xe6\xcc\x91!\xfbA\x16T\xbbn\x11s\xfa\xa3\x08\xe9C\xd8\xc6?\x0b\xf9Y\xf6`\xc1\x83\x06\x0c\x180`\xc1\xa9\xa9\xa9\xa9\xa9\xa9\x8f\xec\x19Q\x95\x99\xccW\xeb\xa1\x91\xb3"\x11\x11~,\x8f\xc4Jh\xa6\xb0p\x94\xf7\xb9)C\xba\xfa\x7f\xbf\xb1\xf8~\x17\xf1\xb2l9\x8e\xa1\xb8\xa4\'\xfc\x0c\x7fe"l\xaf#\xea:\xf8\xa7\x9f(DE\xed\xc9\x93>_\x84E\x14\xd1\x14pt\xb1H\xe2#\xd9v\xff\x00\x7fs\xf0\xbf\x85\x93&\xc6\xc3\x99*\xb8\'t\x91;\xf4\x8aw\xc9\x94\xea\xecF_\xff\x00\x05Q\x95\x19q/\x8ez\xb6\xd7/\xc2\x11\x12"\xf6d\xc9\x9fc\xf0\x88\x90"q\xd0\xeb\xb4o\x0b\x85\xa7\xa5\xa7\xb9\x8f\xf89666\x1c\x89UH\x9d\xd2EK\xf4\x8a\xdc\x9aE\xcf0\xa2\xaf~\xa3\xeb|o\xd4]\xf2\xe3\xaf7P\x91\x17\xff\x00\xf05\x19Y\x97s\xc4o\xea\xf6]\xbf(\x89\x11x\xcf\x8c\xf8\xcf\x9c\x8f\xc4H"\x05\xbcw\xab\x05\xacn?\xfcm\xe1\xd7k\xf8W\xe5r777\x1dD\x89\xdc\xa8\x95o\x92+\xf2i\x17\x1c\xd2\x89s\xf5\x02+ss\xa8U\xb9\xa9T\xaa\x8bK\x8fO[\x81\xbf\xde6\xb5w\x84X\x9f\xf7\xec\xa8\xca\xcc\xe5+iFS\xdaNFL\x91"#>27\xe7>\xd4D\x81\x03\x87\x86\xf7h\xd7\xb2\xea\x7f\x1f\x87\x1f\x95\xb2R%S\x04\xae\x92*_\x15y\x14W\xe5\x92.\xf9\xddK\x8ej\xa5B\xa5\xcdJ\x86L\x99*~\xd2\xf8\x7fOr\x1a\xcf\x8b\xba\xde1\x91\x17\xfd\xfc\x8a\x8c\xae\xcf\xa8\xab\xe9m\xe1\x08\x89\x11\x192d\xc9\x93&}\xa8\x89\x11~\xdc\r?\x84q\x91\xed\xe4d\xf3/{\xf0\xbc/\xc2\xc92L\xbe\xba\xebU\xf9\x84\x8b\x8eu\x159y\xcc\x9d\xcc\xe6M\x8c~\xc92\xaa,\xee==n\x03\x91\xde6\xd5w\x8cX\x9f\xf7\xd3*2\xe6_\x1fRW\xcc\xf3\xe1\x11"/92d\xcf\xb5\x88DDD\xe2i\xf5\xd9\x9c\x0c\x7f\xe3\xfc\x8b\xf0\xb2e_\xdb\x96\xd9\xc6\xf3uQ\xb3c#05\xe5\x8c\x99/\x83\xe9\xdeGIqW{\xc6/\xe2/\xfb\xea\x8c\xaa\xcb\xb9~\x9ef\xafm\xf7\x88\x91\x17\xb3&|d\xcf\x9c\xf8B "\x92\xcc\xa8C\xae\x9dw\x8a64\xfal\x7f\x1a\xfcsD\xe2_\xdb\xe4\xe5\xec\x89\xc7\x06\x04\x8c\r\r\rxc\x1a\'\x12\xda\xb7E_\xa7\xb9\x1d\xe3kWxE\x89\xff\x00{U\x95\x99\xc8\xd4\xd6\x15\xe7\xd9[>\x11\x12>3\xe3&L\x99\xf6\xa1\x08\x89\x13\x8b\xa5\xd9v\x8a\xdf\xaamiO\xf1\xaf\xc7"e\xdc2\xb9;}\x95\xe5\r&\xe3\xe3\x03$?\x0cc$\x89,?\xa7\xaf\xba\xaaq7\x9b\xc22"\xff\x00\xbceFV\x91\xcfW\xeb\xb6l\xc8\x88\x88F~2d\xc9\x93>r7\xf0"$D@\xe0)\xe6\xa2,\xe3\xdd\xc9Uy\xa9\xf8\xd7\xe3d\xca\xd1\xccoid\xe4m\x89\xd3\x1cq\xe1\x8f\xf7h\xc1!\x8ceD[U\xe8\xad\xc0r\x19\x8d\xa5m\xe0\xa4\'\xfd\xdc\xd9Q\x97\x12>\xa6\xb8\xfd\x0f\xc2"D_\x81y_\xb9\x11\t\x10\xf88:ZZ\x9c\x14w\xab\x9c\xbf\xc6\xbf$\x89"\xee\x05\xf5\x0c\x9745u 5\xe1\xa1\xaf\x0cc\x19!\x9c\x07!\xd7>"\xf7x\xa9\x11\x7f\xdd\xd4eV]\xcf\x0b\xea\x1b\x8d\xef7\xf0\x88\x88\xc9\x93&L\x992/?\xf9\x11\x11\x11\x16Ad\xb2\xa7\xd7oV]t\xb8\x9a}<\x7f\xf2\x18\xcb\x98d\xb9\xa4^\xdb\x95!\x82q\xf0\xcc\x12D\x91"C$H\xa1[\xa6\xaf\xd3\xfc\x8e\xca\xd2\xbfd"\xc8\xbf\xeeYU\x95\x99\xc8\xd4\xc4y+\x8e\xcb\xd5P\x8c\xc8L\x8b\x11\x9f\x192g\xca\xf1\x91\x08DDE,X\xd3\xec\xba\x89s\xfa\xa0\xa3\xd5k\xfcv1\x95#\x95qH\xbb\xa3\x92\xf2\x96\xae\xa2\x1f\x96I\x12D\x89\x0c\x92&p7\xddU8{\xdd\xa3\x19eE\xff\x00s"\xab+3\x9b\xab\xa5\n\xd4\xdc\xa4\xe2\xd1\x19\x10\x99\n\x84dg\xda\x84#>\x10\xbcD_\xbc\x0e\x06\x9e\xf7H\x84;\xaf\xeb\xbf\xd7\xfc\x861\xa2\xbd2\xe2\x91\x7f@\xad\x1c9{$\x89"D\x862h\xa3Q\xd2\xa9\xf4\xf7!\x95e_\xb2\x11b\x7f\xdcH\xa8\xca\xcc\xfa\x82\x7f\xf1N\x81R\x81:G\xccHT!P\x8dCs>\xd5\xe6$E\xe2$\x19\xf4\xed,P8X\xf6\xdf\xce[K\xf9,d\xe3\x95qL\xbd\xa3\x95}K\x0e^\xc9\x12&H~$\x87\xfb\xf0\x97\xbdS\xe1\xef\xb6\x8d9\xec\xa2\xc4\xff\x00\xb7\xa8\xca\xac\xae\xfe9\x8f\xd7Vt\x8a\x94\x89\xd2%D\x95<\x1f(\x8dB5\x05P\xdc\xd8\xcf\x8c\xf8DD/\x11\x17\xc9\xc5\xd2\xe9\xb2rP\x8f\x05\x07J\xcf\xf9LcEzy.\xa9\x9c\x85\x12\xaa\xd6^2H\x99!\x92\xf0\xc9\xa2\x95GN|\x0f#\x95aq\xbc#"/\xfbz\x8c\xaa\xcb\x9f\xfa\xde-\xebN\x99:D\xe9\x12\xa4N\x91*$\xa9\x1f\xf5;p*\xc4j\x11\x98\xa5\xe6"\xf0\x99\xfb\x91-a\xbdzq\xd27o\x14(C\xa7\x8f\xfeS\x18\xc9\xc7*\xea\x99}D\xbf\xa3\xabl\xc9\x91\xb2l\x90\xc9y\x98\xce\x1a\xf3\xaa\xaf\r}\xb2\xa7Se\t\x7fl\xca\x8c\xa8\xcb\xc9b3Yr\x81*d\xa9\x92\xa4J\x91*D\xe9\x13\xa6J\x88\xd3\x88\xaa`\x85b\x15\x05<\x99 /(\x81\xc0R\xec\xbeD\xd7e\xdd\xc7\xe9\xfec\x18\xd1qO%\xe5#\x90\xa0W\x8e\x93\xc9\x91\xb1\xb2llcfF\xc9\x94\xa7\xa4\xf8\x1e@\xe3\xeew\x8c\x19\x17\xfd\xac\x8a\x8c\x9b9\t\xfe\x861\xa1\xc0\x94\tS%H\x9d"tIQ*Q\'D\xd5\xc5\xf6`\x85b5rR\xa9\xfac/\x19 \xc8\xfe\xdfK\xd2\xf8G\x17O\xbb\x96\xac\xf6\xab\xfc\xb61\x93YWT\x8b\xea\x1f\x1c\x8d\x0c\x1926I\x92c\x1b21\x8cg\x13w\xd3W\x85\xbd\xca\xa5Sh\xc2F\x7f\xb4\x9b*2\xa39\t\xe5\xb1\xf9q\x1c\x07L\x95"T\x89Q\'D\x9d\x02T\n\x94\x8f\xfa\x90\x99J\xaf\xc4*\x11\x9eL\x90"pTz\xb8\xf4}8\xbf\xe3\xfek\x19"\xe2\x9eU\xdd\x13\x92\xb7.!\xd7S#d\x99&6?,c!=%\xc0\xf2\x07\x1du\xbca"2\xfe\xd2\xa3*2\xb4\xbe.\xe5\xb5Q\xfbu\x1c\tS%H\x95"t\x89R*Q*Q%O\x04g\xab\xa7\\\x85aT)T\xf8\xa3\xfa\xea[S\xea\xa1s=-\xf8\xea~\x9f\x8c\xfek\x18\xc9\xac\x97T\x8b\xfa\x07\'n1\xb1\xb1\x8cc\xf6?\x1c]\xd7M^\x1a\xfb*\x85]\xe3\t\t\xff\x00gU\x95Ys,)\xbc\xcb\xdf\x81\xc4p%L\x952T\x89\xd2*R+\xc4\x99\x16F\xa3\x8a\x85\x7f\x9aUO\xa7\xe1\xeao\xd1q\xfa\xe5Qu\xd1\xfes\x19$W\x86U\xed\x13\x93\xb7.\xe9\xf5\xcd\xb1\xb1\xb1\xb1\x8f\xda\xc8\xcbW\xc1\xdf\x9ce\xd6\xd1\x84\x88K\xfb&UeF^\xcf\x11\xf3\x9f\xc1$k\x92P*S+D\xb9\x1a!L\xeb\xf8q\xc1N\xa3\x8b\xfa*\x8ef\x8bJ~\xa3\x95\xb9\x96k\x7f9\x8cd\x91wH\xe4(\x1c\x9d\xb1/\x86dc\x1f\x97\xec\xe3nzj\xf0\xb7\xd9V\xf5w\x8d9\x11\x7f\xd8\xcc\xa8\xca\x8c\xbf\x9f\x97\xe1{\xb0L\x8f\xed"\xa1p\xca\xc7NH[\x8e\x87\xc5J%*;\xd4\xfab\xdb\xa2\xc5\x1fN\xc3{\xa9Oillllllllnlnno\xfc&1\x92+\xc3*\xfa\x89\xc9[\xe5_Q\xd2y\x1b\xf0\xfd\xec\x8b\xc3\xe1/\x8e.\xebh\xd3\x91\x07\xfd\x8dFTeW\xf1y<\xd4\xcf\xe3\x99\x17\xf19\x95j\x15\xead\x97\xc9N\x9eHQ\'H\x95"\x95,K\x8d\xa5\xd3eV\xa7U\x1e\x1a\x1e\x97\x88\xdc\xec7;\x0e\xc3\xb0\xec;\x0e\xc3\xb0\xec7;\x0e\xcf\xe1\xb1\x8c\x92.\xe9e_\xdb\xfcrv\xa5E\xa4\x9f\x861\xfb_\x8e>\xe3\xaa\xaf\x0b{\xf1k[xS\x90\x9f\xf6\x15YU\x97\x12\xf8\xad-\xa7\xf8\xe4\xc9\xcf\x05Z\xa5j\xc4\xeae\xd3[:\x14\x88\xd3\x1c\x07H\xb0\xb6\xee\xbbK\x05\xeb\xff\x00\x8e\xe5\xab~?\xb0\xec;\x0e\xc3\xb0\xec;\x0e\xc3\xb0\xec;\x0e\xc3\xb0\xec\xfe#\x19$V\x86U\xf5\x03\x92\xb6\xc9\xc8P\xd6^\x1f\xe1\x8b\xc3\xe1o\x8e.\xefeJd$/\xeb\x99U\x95YyS\x11o?\x8b$\xa6T\xaaU\xacU\xaeV\xacC2v\xf4\x8a0\x14G\x13S\xe9\xfb}\xaf\x8d{\xf9.n\xbaW]\xa7i\xdav\x9d\xa7a\xd8v\x1d\x87a\xd8v\x1d\x87g\xf1\x18\xc9\x12E\xdd,\xaeB\xdc\xe4\xed\x8a\xb0\xeb\x98\xfc\xb1\xfb\xack\xf4\xd5\xe1\xaf\x8bJ\xdb\xc2\x9c\x88\xbf\xeb\xa4TeY\x1c\x8d_\x8d\xcd\x8d\x8c\x993\xec\xc9)\x95*\x95+\x15\xab\x95\xab\x8b5\x1d\xbd\x12\x84\x08/-\x1fN\xd2\xd6\x99\xc1\xc3\xbb\x95\xbe\xb8\xee\xbb\xdc\xdc\xdc\xdc\xdc\xd8\xd8\xd8\xd8\xd8\xd8\xc9\x93?\xc5c$\x8a\xb1\xca\xbf\xa0rV\xf99\x1b}|\xbf\xc2\x8e\x1a\xf4\xe2\xaf6T\xa6S\x97\xf5\xd3eVW\x9f\xc7!W57766\x14\x84\xcc\xf8r%P\xa9T\xab\\\xabX\xabXI\xcd\xd0\xa2Q\xa4R\x89\x04c\xcf\x17K\xaa\xcaR\xd2<\x1bv\xdcVM\x8d\x8c\x992d\xcf\xf3\x18\xc6M\x17t\xb6\\\x85\x03\x92\xb7+\xc3\xae\x7f\x8e\xce\xbfM^\x1e\xf8\xb1\xaf\xbciH\x8b\xfe\xb6\xa3+2\xeex\x8d\xd5]\xaa\xeenl)\t\x89\x99\x1c\xc9\xd5*V*\xd7*\xd7\'W$`\xe4Q\xa0R\xa5\x82\x9c\x08D^i\xc3z\x94\xe3\xd7N\xfez\xda_\x7f\xf58\x0c\x992d\xcf\x84/\xc5\x93&}\xb93\xef\xc9\x93>\x18\xc9"\xacr\xb9\n\x07%nr4\x06?\xc7\xc4^j\xf8\x8b\xcc\xaa\x152\xa1#&L\x992d\xc9\x93>2d\xcf\xf3\xd9U\x95\xd9\xc8\xd5\xd62\x9ee\xb1\xb0\x98\x84ds\'T\xa9X\xab\\\xabX\x9c\xf6)\xd2\xc9J\x89N\x91\x08\x10\x89\x13>x\x9a}\xb7\xa5\xcf\xfc\x97?R\xd4\xd6f}\x88B\x17\xbf&M\x8d\x8d\x8d\x8d\x8d\x8d\x8d\x8d\xcd\xcd\xcd\xcd\x8c\x99\x1b2d\xcf\x862h\xbb\xa5\xb2\xe4-\x8eF\xdc\xb9\xa7\xd7?\xc7oS\xaa\xa7\r|X]m\x1as#3cccccccccccc&L\x992g\xf1d\xc9\x93&}\xd92g\xcc\x8a\xac\xaf#\x96\xab\xfa|!\x08\xc8\xe6J\xa9R\xb9R\xb1V\xb1\x977N\x8eJTJt\x88@\x8cH\xafo\x03O\xf5\x1cm?Q\xcd\xf3U\xbb\xb9/b\x10\x85\xf8Y\x93c\xb0\xed;N\xc3\xb0\xec;N\xd3\xb0\xec76269\x8af\xc6F1\x95\xff\x00nA\x1c\x8c\x0b\xeaCX\xfc\x9cU\xde\xaf\x8c\xbe-n\x94\x94*\x9d\x86\xe6L\x9b\x9d\x87a\xb9\xb9\xb9\xb9\xb9\xb9\xb9\xb1\xb1\xb1\xb1\x93&L\x99667777;\x0e\xd1T\x14\xcc\xfb%#qHO\xc4\xd9U\x973\xf8\xe5jfBB^29\x93\xaaN\xa9R\xa9:\x995r)Q)\xd1!L\x8c\x08\xc4K\xdd\xc3CK3\xe9\xcf\xd3Nrry\xf6\xa1\x0b\xf0\xe0h\x92&\xc7S\x02\xacw\x1d\xa3\xad\x83\xbc\xee;\x88\xd4\xc9\x19\t\x9b\x92\x91:\x98;\xd1\x1a\xd9#3c$\x99uSU{[%\xeb\xd8\xbc\x81R\x9f\xcb\x81\xa9\x83\x1e\xdc\x180Q\x9b\xa7>6\xf7\x05\x9f!\xf1F\xfd\x14\xeeT\x88\xd4\x15C\xb0u\x07TUN\xd3\xb4\xef;\xcfP*\xe2\xaa)\x9b\x1b\x192g\xdd\x83\x06\t2upz\xaf\x98W\xc9\n\x84d\'\xe1\xb2\xa4\x872\x13!/\x15\x19Y\x97s\xfd7\xb2\xde\xb2B^\x1c\x89L\x9dBuJ\x95G,\x91\x86JtJt\x88@\x8c\x08\xc4K\xc6L\xf9\x8f\xcb\xb6\x87]\x0b\xda\x8e\x8d\xaf\xff\x00\xe0\xfak>\xd4!\x0b\xf0jjhN\x04\xe9\x15i\x8f\xe1\xaf\x13fG#\xb4\xa1=\x88\xc8\xec%]#\xbfwZ\xe64\xc9\xde\xc2M\xdf\xba\x13\xa3\xc9&\x95\xecY\xea\x91+\x94\\\xd6SW\x94\xdb.a"\xe2,\xa9\x05\x99Dp\x1c\x0e\xb3\xad\x9dL\xd0\xd0\xd4\xd0\xd0\xd4\xb5\xac\xe0\xedod[\xdd\xcd\x96\xb7\x05;\x93\xd4\x9e\xa8\x95\xda%x+\xd3\xd6|;\xc1\xde\x8e\xfcW\xe5+\xad\x8aS\xc9\x0f\x91DQ555550`\xc1\x83\x04\x91Q\x15\xc9\xcb\xf5Q\x99I\x90#\xe1\x95I2\x9b)\x9f\xf9T\xaf"\xfexS\xfdSH\xc9)\x12\xa8N\xa9R\xb1:\xc6\xceE8\x14\xe9\x90\x81\x08\x11\x88\x90\xbc\xe7\xceK\n}\xb7G!\xfa\xcf\xa8\xaauZ\xe7\xda\x84!\x0b\xdf\xa9\xa9\xa8\xe0N\x99Z\x99R\x9f\xce02c\'2\x9d=\xcduN\xbe\xa4\xef0\\r\x18)_\xebF\xe7\x91\xf9\x97%\x99T\xba\xde\xd6\x1c\xdb\x89C\x9c\xc9O\x94s)\xd7\x94\xc8\xac\x95\xa9,]\xd2E\xdc>n!\xf3\x83\xaf\'@\xad\x8fJzc\xd2\x1e\x8c\xf4H\xf4(\xf4(\xf4(\x8d\x92E\x1a8),\x14j\xeaB\xe4\xf5?\x15.\xf0T\xbd%zF\xed\xb1]\xbc;\x99\x12\xb9\x99\xdf6R\x9c\xdc\xac\xe1"\xde\x0c\xa7\x11D\xd4\xc1\x8f\xc1\x82H\xa9\x02\xb5"\xa5\xb9F\x8e\nT\xc8@Q04VD\x97\xcd\x14SG\xfeV+\xb3\x92\x9f\xe9\x1c\x89T\'T\x9dRuI\xd4\xc8\xa3\xb1N\x89N\x89\nd F"^rg\xdb\xc1S\xda\xe0\xa5\x0fS\xcd\xfdE_\xb7\x93\xf6\xa4$!/\xc1\x8fd\xd1Y\x15\x17\xcc\x87,\x12\x91&\xd8\xa9\xbc\xc3\xf4\x95+|U\xb8+\xde\xa8\xab\xeeU\'G\x92\xda\xda\xb5}\xa4\xeb\xbd\xa7p\xd5\xbd:5j\x16\x96\xb3\x83\xb2\x86U(4\'\x82\xa4\xfe.\xbeK\xaae\xc52T\xfecHT\x85L\xeb:\xce\xb3\xa8\xe8g\xa6g\xa5\x90\xac\xa4+\t\x11\xe3\x99\x1b\t\x1e\x86dm\xa6\x85\x06\x8a\x94\xb2;Y\xb3\xed\xd2\x91O\x8c\x91\x1e2G\xda\xd8\xf8\x96\xc5\xc3\xb2\x97\x12\xe2\xed\xac\xb5)P\xc1\nB\x81\xa1\xa9\xa9\x81\x8d\x9b\x1b\x1b\x1b\x1b\x19\x1a%Lv\xf9#o\x824\x85\x03\x06\x06\x8a\xa8\x9cJH\x80\xff\x00j\xec\xac\xceK,\x94Z\',\x15*\x95+\x12\xac9d\x85<\x94\xe8\x91\xa6F\x04`E\t~.\n\x9e\xb6\xe7\xd3\x91\xed\xbe\xb8}\xf7\x1a\x1a\x1a\x1a\n"B\x88\x90\x91\x83\x06\x0c\x180k\xed\x91Q\x15bN\x04\xe28\x8a&0M\xe0\xab6\\I\x97\xf5\xd9:3\x91\xc7\xc1\xc1\xfd\xaal\xa5\xc2\xcaE\xc5\x8cd\xa8\xf1i\x10\xb2Q#KR\x95F\x85$\xc9\xb2\xe0\xb9*\xc3\'\xa6m\xc2\xd5\x91\xb3dl\x85b+\x02<y\x1e<\\x\xac\x08\xd8\x10\xe3\xc8q\xe8\x8f\x1f\x11q\xd1>\xde\x8f\xb7!\xf1\x91>\xd7\x11qh\\jB\xe3\xd0\xacEfz$z4+DF\x86\x08\xd3\x14L\x180`h\x92\x18\xfc\xe4O\xce\xa6\x86\x86=\x92*"p)\xc4\x897\xf1^d\xfeJ\xf47s\xb2+q\xe5\xc7\x1c\xca\xdc|\xc7gQ\x10\xa0\xd1N\x99\nb\x88\x97\x88?\xc1\x9f\x08\xb0\x87]\xa5j\xbd4xzn\xd3\xe9\xfa<s\xa8G\x87\x80\xf8DC\x8c\x84\x0f\xb6\xd3\x91\xf6zc\xe3 \x8f\xb5@\\tP\xf8\xe8\xb2<j=\x04E\xc7,\xbe=D|z>\xdb\xfa}\x0c|\xe4\xc9&M\x92Y\x1d2T2;Tzl\x0e\xdc\x9d\xa9R\xcc\xb9\xb3r\x1f\x0b\x93\xecq>\xcc\x8aVu(\x92\xb6\xa9UF\xc7S\xd2\x9d\x03\xa28\x93\xaa\xa0U\xbc\x1dy\xcd\xc2\xd1\xd4\x17\x11\xb1\xf6Qp\xf8\x17\x14.4\xfby\x1e<V\x02\xb2B\xb4= \xad\x88\xdb\x91\xa2F\x90\xa9\n\x91\xd2t\x9dH\xe9GI\xd2u\x1dGY\xd6hj(\x98\xf6`q\x1cG\x01\xc0\xd0\xd0\xd7\xceL\x992llldd\x87\x11G\xc5Y|\\O\xc3\x88\xe0\x89PL\xa9f\xa4O\x8cL\x9f\x12\x99. |V\x0f@\xe2zi#\xa9\xa3C\xf6i\xfcxl^\xcc\x96\xd0\xed\xae\x96\xa7)7\xe9\xf5T\xec-\xd4\x08[FG\xa4=.\xd1V\x92\x89\x1a\x0c\xa9h\xe6\xbd5L\xc6\xd7+\xd0\xc9\x11\xb5\x92%c\xb4\xbd\x19+^\xc8\xc6\xc9EF\xdfS\xd0\xd329\x1b\x1b\x92\x99)\x19\xf3\xa9\xa9\xa0\xe0:[\x0e\xd9\x1e\x96\'\xa6\x88\xe8!\xd0GJ\x1d"PEF\xa2T\xacOi\x8e\xdf\'\xa6E\x1bU\x9a6\xd1!I#\xa8\xea:\x8e\xa3\xa8\xea:\xcd\r\r\r\x05\x11D\x8cE\x1f\r\x8eh\xecB\x9a6F\xc8\xd8\xd8\xc9\x93?\x87\x03\x88\xe2jjj4?\x196677\x14\x85##\x1a02\xbc\x8a\xaf2\xf7`\xd1\x0e\x8cX\xed\xa2;4J\xc5\x13\xe3\xb2O\x8cc\xb3\x9c\x07NK\xf0p\xb4\xf7\xbb:\xfdO#?\xda\x9dF\xaaZ\xdc)EHS3\x9f\xcb\xb0\xdf\x86?\x0b\xc6=\xb8\x1a\x1a\x18\xc66NeI6J9\x1cI\x0csE:\xc9:W\x08\x85l\x9d\xa7a\xd8\x8e\xc4v\x1b\x9b\x9b\x9b\x192dLR\x14\xc7P\xa9X\xabw\x81^\x90\xbc#tz\x83\xd4\x1e\xa0\xef;\x8e\xe1U7777;\x0e\xc3\xb0\xec762d\xcf\x87\xec~2d\xd8\xdc\xdc\xd8\xd8\x93*S\xd8\xabn\xd3\xce<d\xcf\x8c\xf8\xc9\xbe\r\x8c\xf9\xc2\x1d(\xb2V\xb0\x91>6\x0c\x9f\x12T\xe3*"V\x95"8\xb5\xe7\x80\xa7\x88\x1c}=\xab\\\xc8HR\xea(\xdd\x91\xaa\xa4)\nf\x7f\x1e\xc6\xc6\xc6F`\xd4\xc7\x8c\x99\xf62L\x93\x1c\x891\xc8\x94\xc9L\x9c\xca\x95\xb0T\xba*^\xe0\xa9\xc8#\xee8t\xb9l\x10\xe6R\x173\x91r\xb9\x17$B\xf9\xb2\x17-\x91\xaa\xc5PR\x13\xf2\x85\xe3$\xe6W\xa8Vs\x9bP\xa8S\xd9\x11\x9b;Y\xda\xc5U\x8a\xb0\xab\n\xa8\xaa\x8a\xb1\xdc:\xa7i\xdav\x9d\xe7x\xab\x1d\xa7a\xdav\x9d\xa3\xaaw#\xb4u\x89WC\xb9G\xa9G\xa9\x1d\xd8\xefEzF\xed\n\xb9\x1a\x99\x17\xed],]\xbdd\xab\x1d\xa8\xd8\xc9\x93#&&\xc8?\xc2\xe2\x99+js*\xf1Tj\x158"\xc2\xdf\xd2\xdb\xe7\x0b\x8c\x86)\xcf\xf5J\x85\x179O\xff\x00\xd1\xa1Wp)]\xe4\x8dT\xc51LO\xf1d\xd8\xc9\x9fk\xf1\x93&\xc6\xc3c\xc9,\x92R%\x19\x12\x84\x89S\x91:3*Z\xcd\x93\xb0\x9b\'\xc5T\x91.\x16\xa3\x17\x052\x1c\x0c\x88pL\x87\x08G\x87\xc1\x1e-"<~\x08Z\xe0TELQ0c\xd9\x91\xc8\x93\'\x0c\x9d\'I\xd2u\x1dGY\xa35f\x19\x81du0J\xeb\x07\xad\x15\xd1\xeaI]\x8e\xf1\x8a\xf0\x8d\xd9\xeb\t_\x1e\xbcW\xe7\xad%z;\xf6}\xc0\xf5\xd9%v\xc9\\\xc8\xf5R\x15\xdb=I\xda\xd9\xdb$+\xa6\x88^\x94\xaf\xca|\x84\n\xb7\x91\x92\xab\xff\x00#\x9d\x12Qh\xechW\x02\xb8\x15D\xcd\xbcj#>3\xec\xc9\x9fu_\x98\xdb\xd9u\xd3\xf4E\xbc\x15\x15\xe9\x93\x94\xa8-enN\x84\x93\x8dY\xd3)\xde\x10\xb8LS\x15AL\xd8\xcf\xb7\xd4\x0e\xe0\xf5\x02\xacv\x9d\xc7i\xdav\x1d\x86\xe6\xe2y545\x1cG\x01\xd3C\xa4:GH\xe8#\xd3\xa3\xd3#\xd3#\xd3#\xd3\xa3\xa5\x1dH\xebGZ4F\x83FM\x8d\xce\xc3\xb5\x1d\xc8\xeeGy\xdew\x0e\xa1\xb1\x9f\xc5\x82q+\xc4\x94\xb4#_&\xe3\x99)\xb1\xd4b\xac\xd0\xaa\xecI6<\x9b1U\xc1\xba\x90\xe2494*\xa2\x92f\x99\x1c\x06\xb0o\x81TG\xc4\x87\x03\xe6\'\xa8\x94O^\xd1\x0eE27\x90\x91\xb4$:\nD\xed\tP\x923(\n\xe9\xc4\x85\xe2dk\xa6)\x192d\xc9\x9f\x19\xf3\x9ff\xfbr\x16\xb5\x9c\xcdG\x01\xc0i\xf8\xc4X\xe8\xc5\x92\xb4\x15\t@R\x94H\xd6#XUE3sc&H\x985\xf3\x93css\xb0uE[\xe6\x9c\xc53a\xc8\xd8\xd8\xd8\xd8\xd8\xd9\x1b#dn\x8d\xd1\xd8\x87U\x0e\xb2;\xd1\xde\x8fPz\x83\xd4\x15n\xb0T\xe4\x1a~\xb9\xb3\xd5\xc8\xf52;\xa4*\x8cRb\xc8\x930\xcdY\xa3:\xd9\xd6\xce\xb3\xac\xeb:\x8e\xb3\xac\xeb\x1cI/\x12\xa4\x99Z\xd4\xa9A\xc4\x84\x8dM\x07D\x95\x11\xc5\xc4\x8d\\\t\xa9\x8e\x91*M\x1f(\x8dmH\xd4R\x1c\x13\'Hi\xc4UZ#p~\x99\x92\xa1\x92t\x1a\x1eb*\xcd\x11\xac\xa4IE\x95)\x13\xa6\xe2)N/\xee\x13\x83\xa3\xcaj\xa8\xf2\xd1\x9bW\x14\xa6\x9d\nu\n\x9cyR\xc6Ht\xeaS\x15\xd4\xe0S\xe4\x11\x1b\x98\xc8S\xc9\x93&L\xf8\xcf\xb7\x8b\xff\x00\xec}Ai\x0f\xd6\xbc\xe0\xd0t\x87\x06\x8c\xb4v\x1f\xa5\x9di\x9dm\x1f(\xd9\x8a\xa8\xab\x8a\xb1\xdc/;\x1by\xc1\x81\xc4p4!-ET\xee\x1dc\xb4\xecgc7gc7f\xec\xdd\x8eL\xd9\x99cl\xf9\xf6\xb7\x82\xbc\x89,\xb4\x84\x8apLT\x91\x1ahT\xd0\xa9\xa1S\x154h\x8dQ\x83\x1e\xcc\x996624c\xc62T\xb7R+Z\xe0Rt\xdc$\xa6j\x8dQ*Qej\x08rt\xdd;\x9c\x99L\x94\x14\x89[\x92\x84\xa2*\xf2\x81\n\xeaB\x8a\x91;d\xc9[\xb4~\xb88\xdejF\xe6\x135\x8c\xc9\xdb\xc6C\xb5\x94W\xfc\x91\x94\xee\xfa\xce\xd52\xa3C\x81Y\xe5Q\xcc\x17\xdc&\xa7C\x94\x9d([\xf3\xff\x004\xf9\x1aU\x16\xb4\xab\x158\xe8\xc8\xab\xc4\x93\xe3\xebS;\xab\xd0t\xf9B\x9d\xec&)\xa6d\xc9\x91\x08^>\x93\x86\xea\xd1b)\xfb\xb08&:#\xa4|\xa3v\x8e\xc3\xe1\x98\xf1\x96l6E\xf8b\xfe.\x0c\x1a\x9a\x9a\x1a\x1a\x8e$\x91q\xf0n\xb3\x11\x8a\xbe\xae\x17%:\xf9!P\x8c\x8d\x8d\x8d\x8d\x8c\x99\xfcLhO\xc3\x8aek5"\xe2\x85Z\x05>E\xe7\xbfd\xea\xc8\xdeL\xd1H\x9d\xb6N\xc9\xd0t\xee\xe3P\xc8\xf0\xc9\xd0\x8c\x8a\x94$\x85Z\xad\xb9O\x90\x8dAKa\xa8\xb2v\xc9\x95-\xa7\x12\x15+\xd2)r1\x94\xbbT\x86\xa0W\xb7\xa5"\xbd\x0f\xd1N\xda\xbaun\x92\x9f\xef\x19K\xe3\x11\xda\xbdU5h\xf3:\xb7\xdf\xf2q\xf7\xac\x8f\xd4\x93\xa7+N~\x95r\x9d{z\xe4\xec\xd4\x8a\xdcM*\x84\xf8&\x89Z^[\xba5o\x11EU\xa8:2\x88\x96\x05\xe3\x93\xab\xd1a\xc1P\xf4\xfcU)8(\xd4\x13\xfc:\xa6:C\xa4u\x9a\xb3\xe7\xd9\x15\xe1\x8b\xd9\x93&}\x99\xfc,\xc8\xa4m\xe3\x1e\xcc\x12\x89wO1\xa8\xe7\x1a\xd4?\xeb\x82\xa4>i\xc4\xa6\x88\x91fL\x992d\xc9\xb1\xb1\xb1\xb1\xb1\xb1\xb1\xb1\x93&L{\'MH\xbc\xe2!\\\xab\x0b\x9e>V\xf7\x94\xeb\xc7U\x8a\xcd\xc5\xc6\xca\xe1\xc6\x95\x86j\xdd\xf14e\x1f\xfe\xd5\xa3\xa1s\x1b\x85\xd7#VJ\x8e\xe4\xec)J=\x17\xb6\xf2\xa7\xc8\xc1\xd4\xec\xddJK/\xaeD\xed\xad\xa6\xa7B\xe3kI\xdd\xcc\x9d9\xb2T\x1cUi2\xa5:2\x9d\xc4\xd3\xa2\xad\xaez-\xf4\xafZ\xa5\xb2\x90\xb8\xfa\xcc\xfb=\xc4\xc8\xf1W\xd0\xa3W\xe9\xab\xbaQ\xa7\xc2^J\xde\x1fO\xdd\xa7\xc5\xdb\xdd\xd9\xcb\xbc\x94\xb2/\n2\x159\xb2P/\'J\xda\x8d\x0eZ\xde\xb3\xe4\xaaF\xf2\xf6\x95\x83\xea\xdat\x9d:\xd1\x97\x85&\x85P\xce\x7f\x0e\r\x10\xe9\x9dgX\x84\xfc\xb3&L\xfe<\x992g\xce<\xa1\x1a\x8dy\xc9R\x1b*\xb6\x88\x8cp$8d\x8d<\x11X\x13666663\xfc&\x8a\xb4cR<\x8f\xd31)\xf2\xd5mj\xaa\x92\xac\xae\xd5\xd5{xZ\xdc\xd0\x1d\xbf#5O\x8f\xe4\x9d~K\xe9XV%y}\xc3T\xb7\xe5\xad.a.J\xdd\x1fp\xc8\xae\xeb\x95l\xa7\x7f^\xeb\x81\xe48\xf9\xc2\xc3\x94t\x97\x13\xc9\xb3\xecw\xec\xff\x00_\xb9g\xfa\xcbg\xfa\xbd\x01}3h\x85\xf4\xed\x91\x1f\xa7\xedE\xc0\xd3)\xf1U)\xc1p\xb5\xb3\x0e\n\xe2E\x1f\xa7\x92%\xc3\xd2\xeb|\x0f\xea\xab\xc4\xdb\xdbR\xa5\xf6\xda\x84l\xad\xe4\xfe\xddI\x14\xe8\xd2\xf5\x1e\x92\x94N[\x9d\x87\x11p\xfe\xb2\xb88\xfez\xf2\xf6\xb5\xc5*\x93%\xc7\xdcI\xf2\x1c\x1d\xdd\xcd\xb7\xfa\x15\xfb\x7fO}\x19q\xc5]ZE\xc6\x94\xa9\xa9\x12\xb4\x8b:e\x11g\xc7\xec)\nF\x7f\x1e\x86\xbe5\x1c\tC\x06pdlR\x19\x93&L\x99\xf1\x83\x06\rML\x180jc\xc2\x90\xa6|3\x03\xa6:c\xf8+\xcd/\t\t\t\t\x7f-\xc4\xbd\xe3i_\xd1\xb7\xfaB\xbd\xb5\xcb\xfasgS\xe9*\x15\xa1kj\xadm\xf0(\xb6N\xcaU\xe3K\x84\x8d%\x1e.\xa2>\xdbX\xfb]Qq2>\xd2}\xaa"\xe2\xe9\x1fm\xa0\x8fCn\x8fIE\n\xde\x92:\xe0\x8f\xaa?\xc8\xd4~\x99\xe4\xff\x00\xf9\x8au\x1f\x1f\xf5\x8f9\xca\xbb7\xc8\xd5T\xe8\xc8Q\xc7\x99\xd1\xd8\x8d\xa2\xc2\xa4\x91\x8444\x8db\xcdbk\x13X\x1f\xa7\xdb\x1f\xdf\xc6\rM\r\r\x0f\xd8\xd8\xdb\xf0g\xc2\x7f\x02\xf1\x92R\xc1&\x99\x9c\x1f\xb9\x8f\x91\xf8\xc1\x81\xa1\xfc\x1b\xb3\xb0\xd9\x1b\x1b\x9b\x9b\x1b\x8eBf|\xe3\xc6Y\xdd\xf2\xe6\x99\xc8\x7f\xf9\xd3\xfdQHB\xfe\x1a\x8bgEF+J\xec\\}\xc3\x17\x17p}\xa6\xb1\x1e\x1e\xaeW\x0e\xc5\xc4D\\M#\xed\x94\x10\xb8\xebqX\xd0B\xb7\xa2\x8e\xb8!$\x8c\x99\xfc\xb8/\xfe\x93\xb1\xe5/\xad>\x9a\xe3\xec\xc8P\x84=\xeex;M\x8c\xbf8\xf7\xe0\xc7\xe0q\x1c\rO\xd8\xd8\xd8\xd8\xcf\x9c\x99##"f\xc6\xff\x00.I\x95\x7fI\xd9\xa1\x0b\x84\xc4\xd3>=\x9b\x0ecf\xc6\xc4\xbe\x07q\xa1\x1a\x8ac\xf1\xf2`R2\x9f\x9c\xb3c#I\x92\xa6\x8b\x8a\x19\xa7e\x9e\xacx\xc9\x93"y#Jr#g]\x91\xe3\xaeX\xb8\x9b\xa6.\x16\xe5\x8b\x82\xac.\x06b\xe0E\xc1\xd3\x17\rA\x0b\x8a\xb6B\xe3m\x90\xac\xad\xd0\xad\xe9!$\xbd\x9b\xa4J\xe6\x94G\xc9\xdaD\xfb\xcd\x82\x1f=\xc7\xc4\x7fRq\x88\x7fTqh\x7fV\xf1H\x7fY\xf1H\x7f[\xf1\x88\x97\xd7\xbcr%\xfeB\xb1%\xfeD\xb5\x1f\xf9\x16\x88\xff\x00\xc8\xd0\x1f\xf9 \x97\xf9"\xa0\xff\x00\xc9\x17#\xff\x00$^\x13\xff\x00"_\xb2_\xe4.@\x97\xf9\x0b\x90%\xfe@\xbf\x1f\xd7\xb7\xa5\x0f\xab\xf9;\xd9q\xf6|\xf5\xf1c\xc3U\xa4\xa9\xdb\xa8\x18\xc7\xe1\x92%\x98\xb5P\xdb\xf2`\xc1\xf2\x8c\xfb\xf54450c\xd9\xa0\xfe\x05\xe7X\x8e\x19*RS\x15\x08\xd3\xf0\xe2\xd8\xddH\x11\xaclm\x839\x1e<NQd\xa2\xca\x94\x9c\x94\x1b\xa4\xe3y*j7\xb4\xe6\'\xb2\xd8\xc9\x93l\x1d\x87i\xba~>Q\xb9Vh\xbc\xbc\x9d\x8d\xcc>\xa8\xb7\x81G\xea\x9e1\x96\xff\x00S\xf0d~\xab\xe0\x11\xfe\xe5\xc2D\xff\x00y\xe2\xd0\xfe\xbd\xe3\x90\xff\x00\xc86#\xff\x00 \xda\x8f\xfc\x83H\x7f\xe4"\x7f\xe49"_\xe4j\xe7\xff\x00"\\\x92\xff\x00"]\x0f\xfc\x85vK\xfc\x83vO\xeb\xfb\xa6K\xeb\xda\xe4\xbe\xbb\xaaK\xeb\x89\x13\xfa\xdc\x97\xd6I\x92\xfa\xb2\x9b\x1f\xd54G\xf5E!\xfdQ\x11\xfdN?\xa9\xe6?\xa9j\x9f\xec\x95\x87\xf5\x15\xc1\xfe\xc1r>v\xe9\x8f\x99\xbac\xe5n\x99\xf7\x1b\xa2W\xf7S=E\xcc\x8d\xee\x99\xa5\xdb\x15\xad\xe4\xcfAx\xcf\xb4\xde\xb1pw\xd2T\xfe\x9c\xbf\xac\xf8\xff\x00\xf1\xaf+x\xf8\x8f\xf1E\xa5\xb9c\xc0Zq\xf0\x8c#\x1f\xc7\x9c\x1b\xa2Q\xd8\xeb1\x83"\x91\x93?\x8f\x06?\x16\rMMMN\xedM\x94\x87\x04\xcd57\x1b\xcar\xc1\xbeF\x9e\rL\xe0x\xa8\xa4\xe5LW?\x0e\xbe\x07r:\x93\x15n\xd2\xa5V\x9c%\xff\x00\rY\xa7N\x9a\xec8\xce\r5\x1e&\xd2\r\xd8P>\xdfnz\x1a\x07\xa2\xa0+j(\xe5j\xd3\xb5\xa5R\xa9\x0b\x92\x17[\x1d\xe8\x97\xed\xcb\xd0\x95R\xe6\x0e.\xaa\xc98\x8dT7\xac\x8e\xfb\x83\xbe\xe0\xef\xb9;\xaeM\xeeY\xff\x00\xdagE\xd3\x15\x95\xd4\x8f\xb6^\x0b\x8b\xbb\x91\xf6{\xc6}\x8e\xf9\x9fc\xbdg\xd8o\x90\xbe\x9d\xbeb\xfaj\xfd\x9f\xea\xf7\xd9\x87\xd2\x172K\xe8\x9a\xe2\xfa&\xa0\xbe\x89\xc8\xbe\x87X\x8f\xd1\x10#\xf45,G\xe8\x9a\x08\x87\xd1\xd6\xa9\xc3\xe8\xfb3\xfdJ\xd8_JZ\x8b\xe9[d\x7f\xac\xc3\x1f`\xd4\x8f\r\x11p\x92B\xe0\xe6}\x8ag\xd8\xea\x90\xe0\xea\x14~\x94\x9c\x9d\xaf\xd24b\xed\xf8\x9a\x16\xca4\xe3\x1f\xc7\xb0\xea\x13\xaf\x82\xa5\xd3;\xeb9P\xa8\xda08\x98\xf1\x93&L\xff\x00!\xb3\xf6p\xa8e2G\xfdE<\x8d\x8a\xa3M\xfe\xa2D\x88K\xf5Md\x9c\xb0\xfb0\xe3[\xf5T\x9e\x83\xac:\xea\xaci^:R\xad\t\xd78>\x0b\xd2C\xddy{\x0bHVu+T\x96\x11\xd5\x19\x12\xa6\xf2\xa1,\xa8`\x9d\r\xca\x9c\\j\x15~\x9fS?\xd6VW\xd2\xf0\x90\xbe\x99\x8aT\xbe\x9e\x8e\x7f\xd5\xed\xe6\x97\xd3\t\x11\xe0\'\x15\x0e#\x04x\x8ad\xf88MO\x80\x89K\x88\x8a>\xc9Jg\xd8\xd2>\xc9\x03\xec\xb1g\xd9\xa1\x9f\xb2D\xfbD1\xf6x\x1ff\xa4}\x96(\x8d\x86\xa7\xa1\xa6z(\xa1Y\xc4Vk>\x9d\x1e\x9d\x1d(\xe8H\xd4\xeb\x89\x18\xe0\xc4Y\xd7\x13\xd3&+:\x848\xfc\x90\xe3\xe2\x88\xdbF"\x82_\x8bd\x87Y"w\x91\x89.R\x04n\xddB9\x91\xd4t\xa3\xa5\n\t\x18\xf6`\xc1\x8fvL\x992g\xf8\x19\x1aM\x7f\xd0\x85U#a\xb4\xcf\xfa\x9b\xe4\xd8\xdfW\xff\x00h\xb9\xb4\xdc\xb2\xe3<\xab\x98\xb6O\xe2R\x9a\x1c\x95H\xc9,e*\x94l\xea\xde\xd6\xe1\xf8\x88\xf1\xf4\xbd\xd7\xd7\xb0\xb2\xa3\xc8r\x12\xe4*\xfd\xce\xee\xd0\xb2\xfa\x8a\x8dr\x12\xa5Xt&8\xb3Fh\xcf\x91\x11y\x14Vp\x8e\xb4(\x98\x136?L\x8e\xb8\x9a\x1dB\xa6\xc5\x13\x03\xa6~\xa4i\x93Vj\xcd\x19\xd7#\xaeg\\\xce\x99\x1d\x13==C\xd3\xd4=$\xc7g<j\xe2u6zY1YI\x91\xb0Dm"\x85J(\xd5/\xc5\xb2\x1dT\x89]$V\xe4\xe1\x02\xe3\x9b\xc2|\xcdj\xaeu\xaaU,,\x8aTt\x11\xb1\xb9\xb9\xb1\xb1\x9fn\x0c\x181\xef\xc9\x93&L\xfeHM\nG\xc3$\x92q\x9eL\x99\x1f\xe9\x7f\x0ci4\x998|J?\x10\x9e\t\xbc\xc6\xb1\x9f\x8e\xdd\x1ee9Zq\x15o\xaaq\x9c];\n^\xea\x92\xd6<\xa5\xad\xd5\xfdJ\x9c\x15\xc1W\xe9\xcb\xb6\xa1\xf4\xd5\xc9\xc5q\xb5\xadn\xe1F.>\x9a\x07\xa5\xa6z:g\xa1\xa6}\xbe\x91\xf6\xfaG\xa1\xa6z*g\xa3\xa6zJg\xa5\x81\xe9\xa0zx\x1e\x9e\x07D\x0e\x98\x9dQ:\xe2i\x13H\x9aD\xd2&\x915F\xa8\xc25F\x0c{\xdd\x18\xb6\xa9$j\xbf\x16M\xd0\xeb\xa4N\xf21+r\xf4\xa9\x95y\xe8\x95y\xc9\xc8\xa9\xc8Jd\xef0U\xe4>#\xc8\xe2V\x15aQP\xbb\xa7\x05N\xe62\x14\x93\xf1\x8f\x1b\nF\xc6\xc6L\x99\xf7c\xdb\x83\x1e\xdc\x99\xfc/\xf4\x91\xaa)d\x92\xc9\xfb\ncf\xc6\xe7a\xfb\xf8\x940LuZ*GuZ\x8bE;I\xd7|o\x00[\xdaF\x84}\xc8\xc6N\xb8\x9dQ:`t\xc0\xe8\x81\xfb\x7f\x0f\x06?\x8b\x93dv#\xb9\x0e\xe6(\x95\xecQW\x95\xa7\x02\xaf?M\x15~\xa0\x9b\'\xcb\\\xd4%Z\xbdC\xaaGD\x87l\xcfJ\xcfE\x92\\v\xc5N\x1cV\xf7\x14#\xdfyJV\xfc\xddzE\xb7\xd4E\x0en\x9c\xcaw\xf0\x98\xab&n\x85\xe7&\xc6\xc6\xc6\xc6L\xff\x00\x07&L\x99\xf2\xd0\xe2\xc8M\xa1O\'\xee~\xc6|~\xc6M\xf0v\x8ey0T\x88\xe5\xa9\xb2\x93\xe3c\x08\xa8W\x84\x17\xabG\xaaG\xa9\x89\xea\x11\xde\x8e\xf8\x8a\xaa;\x11\xd8\x8d\xd1\xd8\x8d\xd1\xd8\x8d\xd1\xba7Gb;\x11\xda\x8e\xe4w#\xb5\x1d\x88\xdd\x1b\xa3tv#\xb1\x1d\xa8\xedGr;\x8e\xe3\xb8\xee;N\xd4v#\xb1\x1b\xa3tnv#\xb1\x1d\x88\xecGa\xd8\x8e\xd3\xb8\xef=J\x1d\xd0\xef\x12%\xc8E\x12\xe4\xd1>U\x92\xe4\xeb2W\xd72;n$:s\x99\xe8\xc5d\x8fF\x8fH\x85j\x8fN\x8e\x84t\xa3\xa0t\x0e\x83\xa0\xf4\xe8vqd\xf8\xbar\'\xc4$O\x8f\x9c\x08\xba\xf4\x8a\\\xa5je.p\xa5\xcb\xc2D/\xa3"5\xd3;\x11\x95\xe3&M\x8d\x8d\x8d\x8c\x99\xfc\x19\x1c\x8d\x8d\x8c\xfb\xb2)\xa661L\x8dC|\x996\x1b2d\xc9\xb9\xb9\'\x92\xa2\'\x98\x8a\xf6\xe2\x9a\x97-}\x13\xef\xb7\xd1#\xf5\x05\xe1\xfe\xc3vC\xea;\x9c\xff\x00\xb1WG\xfb=X\x91\xfa\xb7\x02\xfa\xc2\x91\xfe\xe1H_USd\xbe\xad\xa6\x85\xf5u6\x7f\xb6\xd2!\xf5e)\x1f\xed4\xcf\xf6\xa8\x0b\xea5%/\xa8dG\x9e\x9c\x87\xcdT\x175T\x8f3P\x87.\xc8r-\x8a\xf5\xb3\xd5\xb3\xd5H\xf5r=T\xcfS3\xd4L\xef\x99\xdd3\xbaGl\x8e\xe9\x1d\xd3;\xe4z\x89\x1e\xa6G\xa8\x91\xdf#\xbeC\xb8\x99\xea\xa6F\xeaG|\x8e\xe9\x1d\xb2\x1c\x9b\x1eG\x13C\xad\x1aD\xd2\'\\N\xb8\x9dH\xeb45\xf6\xe3\xceL\xf9\xc7\xb1\xc52T#"v1d\xec\x07j\xe2\'V\x99O\x90\xa9\x02\x8f,S\xe4\xa3"\x17\x91dk\xa6v\x1b\x192d\xc9\x93ccc&D\xcc\x8eD\xa6v\x1d\x87`\xa6){rFy\x1b\x1b\x14\x8d\x84\xf3\xe38\x1b\x1b2d\xc8\xd8\xfeIG$\x96\xa4\x9eI\xa1e?\xdc\xf9\x13\xcai\xe6t\xb2J\x90\xa2SEH\x1a`q!\xfb\xe3)\xc3\x0e\x830C\xe0l\xd8R7!q(\x90\xbc!s\x91U\xc9\x9f\x18\xf6g\xc6L\xf8\xcf\x9c\x89\x8d\x12BB^3\xed\xc1\x8f92d\xc9\x91\x997;\x0e\xc3s>\xcc\x99\xf7\xe0pL\x95\xbcY+A\xdb`\xebq#Rp!{(\x90\xe4\x08_&F\xe91W\x15Sscc&E#a1\xc8\x9c\xf0W\xbaPQ\xbcR\x15t*\xc8\x8dL\x91\x91\x17\xecd\x7fq\x89\xe0LR\xc1\x9c\x92\x1b\x1b2llg\xc3\'\x1c\x95)\x98\x1c|c\xc7\xee$N\x8eIR"\xb5z\xec\xba\xce\xb3L\x14\x97\xc6\x99\x14uq\xf9^S\xc0\xbcd\x84\xda!]\xa2\x17\x04j\x8af}\xf93\xe3>2db29\x1b\nFL\x992d\xc8\xc7!\xd4;N\xe3\xb8\xed\x1dQ\xd5\x1dS\xb8\x8dV)\x9b\x19\xfc\x18\xf3\x8f\x18\x1cM\x07E2V\xe3\xa0\xd1\xac\x91\x1a\xb2\x89\x1b\xc6\x88_\x11\xbb\x15\xc8\xab\x9d\xc7`\xa6n)\x12\x919\x17\x94\xf7:\xb0=\x91\xdd8\x96\xf7-\x94\xaa\xe4\x8b\xf1\x93c&D\xc6?1\xf1(\x92^\x19\x9f9\x19(\x93\xa64k\xecO&\x07\x01\xd3 \x8dMGL\xa7\x1c5\x11\xc4\x84MM28\x18#\xe3\x02\x10\x88\xd4h\x85r5rnnlld\xcf\x8c\x992g\xc6}\x8f\xc6M\xce\xc3\xb0\xdcu\x07P\xec\x1b\x1f\xc9\xa1\xd4*GP\xe9\x1d\'A\xd0*B\x81\xaf\x8c\x89\xfb2d\xc9\x9ff\x0cy\xc1\xa8\xe0:Ht\x87O\x07\xeaB\xad(\x91\xbbdn\xc8\xdc\xe4\x8dqU\x15A\xcc\x94\x89\xfc\x98\x1a5L\xa7\x04R)\xb3a\xbfb\xf0\xd1\x8f\x11bc$\x89/\x1f\xb1\x93&\xc2\x90\xc6\xb2J\x99\xa8\xe2c\xccdd\xc1\x83>0jD\xc0\x90\x8c\x1a\x9a\x1a\x89\x180/b\xa8\xd0\xab\x9d\xc7p\xaa\x8a\xa0\x98\x8c~6I\x9b\ng`\xea\x1b\xb1HLB\x88\xa9\x9dgY\xd4u\x9dGY\xa1\xa9\x83\x06<\xe7\xd9\x93&\xc6\xc6\x7f\x06\x0c\r\x0e\x07X\xe9\x8e8"\xf0B\xae\x08\xd7\x15qU\xc8\xdeL\x0e&\xa6\x08"\x99\x16llm\xe5\x0b\xc3\xf1\x91H\xd8c$3&M\x8c\x89\xf9\x9a\x18\xfeF\xbc\xc5\x88\xd4\xd4\xd4HH\xd4\xc1\x83\x1ep`\xc7\x95\xe1\xfb2l*\x8c\x84\xc8H\x8c\x84\xfc`\xc1\x8fs\x18\xd0\xe2hhu\x9a\x1a\n"DL\x99\xf7\xe0\xc1\x81\xaf\x180`\xc7\xbb&L\xfe\x0c\x180`q\x1a3\x83\xb7\x07y\x1b\x927"\xb8\x15T\xcd\x93\xf0\x88\xb3sss\x7f9\xf1\x93#\xf1\x93|\x1b\xe4c%\xeeF2jJ\x98\xe2`q\x12\x14H\xfc\x08\xc1\xa9\xa8\x90\x91\x83\x06\x0c~lxR\xc1\n\xa4*\nb\x98\xa4g\xc6\x0c{pjhhhhu\x9df\x86?+\xf6\xe0\xc1\x83\x06=\x992llld\xcf\xbb\x04\xa2J$\x90\xcc\x8ab\xaa*\xc2\xaeF\xe0W\x02\xaew\x9d\xc7q\xdag\xc6L\x993\xedL\xc8\xc6`\xd4\xd4\xd7\xdb\xa8\xe08\x1a\x9a\t`\xc0\x85\xe3\x1f\x8f\x1eq\xed\xc1\x83\x06\x04Fm\x11\xacF\xa8\xaa\x11\x98\xa4)\x19\xfcy3\xf8rg\xd8\xc6\xcd\x8c\x99\xf3\x93>p4c\xd9\x93&L\x99\xf7\xb8\x92\xa6J\x90\xe9\x1a\x18\xf1\xb1\xb9\xda*\xc2\xaew\x9e\xa0\xf5\x1e\xf4\xfd\x8d\x1921\xaff<\xa3\x06\xa6\x86\x86\xa3\x89\x81\x08^\xcc\x993\xef\xc1\x83\x06\x0c\x181\xe3\x06\x0c\x18\xf2\xa5\x825\x08\xd6\x15ALS763\xf9\xf2d\xc9\x93&L\x9b\r\x8d\x8c\xc9\x93&\xc6\xc6L\x9b\x1b\x193\xec\xc7\xe5\xc0\xe0:c\xa4:C\x80\xd7\x9d\x8d\xcd\xce\xcf\xc9\x8f\xc6\x8c\x180`q\x1c}\x99\xf1\x9fb~W\xb7\x1e0`\xc1\x83\x06\x0c\x181\xec\xc8\xaa4*\xc2\xaa*\x82\x99\xb1\xb1\xb1\x9ff\x0c\x18\xf7d\xc9\x93>2g\xcb\xf6d\xc9\x9f\x192d\xcf\xf1\xb08\x8e\x99*C\xa68\x8d\r\x18\xfc\x19\xf6\xe3\xf1\xe7\xdb\x81\xc7\xd8\x9f\xe1\xcf\xf1T\x85P\x8daU\x15ALR\x14\x8d\x8c\xfb0c\xdb\x93&L\x992g\xf0\xe4\xc9\x93&L\xf8\xc9\x9f\xe348\x92\xa6:gY\x93>\xf5\xfc\x0c\xfb\x99\x8f\x08F\x7f\x9d\x91T\x15R5\x08\xd4\x14\xc5!HR2g\xce\x0c\x18\xfcY3\xed\xc1\x83\x06<g\xdf\x93&\x7f\x8b\x81?\xc3\x9f\xe0g\xd8\xd0\xfc5\xf9\xb2d\xc9\x9f\xe1\xa9\n\xa1\x1a\xa2\xa8*\x82\x99\xb1\x93c&}\x980c\xf881\xee\xcf\xb3&\x7f\x80\xfc\xa6\'\xfc\xdc\x180`\xc7\xb3?\x8f?\x8f\x1e\xdc{S\x14\xc51T\x15ALS62d\xc9\x9ff\x0c\x180`\xc7\xf0\xb3\xfc\x84\xc4\xc4\xff\x00\x9b\x83\x06<c\xd8\xbd\xb80c\xf0\xe0\xc7\x8c\x180`\xc1\x8f81\xeeR\x14\xc51T\x15AL\xd8\xd8\xc9\x93>\xcc\x180`\xc1\x83\x06=\xf9\xfe|X\x98\x98\x9f\xf4X\xfe\x1e\x0c\x18\xf1\x83\x06\x0c\x1a\x980`\xc1\x8f81\xe3"\x90\xa6)\x8ab\x99\xb1\x93c&}\xb80`\xc1\x81\xfe\x0c\x993\xfc\\\x99\xf3\x9f\x11b\x91\x19\t\x89\xff\x00?\x1e0`\xc7\xf11\xe7\x06\x0c\x180`\xc7\x8c{\xf2l)\x8ab\x98\xa6)\x8aF\xc6L\x99\xf7\xb3\x1e\xdc\x7f\'>rd\xc8\x98\x99\x16&dO\xc6\x7f\x06?\x8b\x83\x1e1\xfc\xac\x180`\xc1\x83\x06?\x06E!LS\x14\xc51HR2d\xc9\x9fv\x0c\x18\xf6`\xc7\xf0rd\xc9\x9ffF\xc6\xcc\x8aBb\x91\x19\nBb~3\xfc5\xf8\xb0c\xf9\xf81\xf92ln)\x8ab\x98\xa6n)\x193\xef\xc1\x83\x06\x0c\x180`\xc1\x8f\xca\xfcd\xc9\x93&L\x8d\x8eF\xde"\xc4E\x88Bb\x17\xe3\x7f\x9d\x7ff\x98\x99\x93&D\xc4\xcc\xfeL\x7f\t\xfb3\xe1\x99$\xcc\x9f\xff\xc4\x00.\x11\x00\x02\x02\x01\x03\x02\x07\x00\x02\x02\x03\x01\x01\x01\x00\x00\x00\x01\x02\x11\x12\x03\x10\x13 0\x04\x14!1@PQ"A\x05`#ap2q\x80\xff\xda\x00\x08\x01\x03\x01\x01?\x01\x9f\xb9\x04{!\x9a\x84\x84\x85\xd0\xbb\x08C$\xfa\xd8\x892o\xd0\x91!\xed\x03H\x81\x1d\x99\xa9\xb7\x88$?\xb3\xa1i\xd9\x1d\x12:$t\xd2=\x87\xb3)\xb2>\x1eR!\xe1"\xbd\xc5\x18\xc3\xd8\xbd\xdfR\x11\xa8\xea/i<`\xd9\xa7\xebr\x10\x85\xb2\xd9\xfa\xb2\x03\xdalb\x16\xcfe\xd8B\x19.\xcc\x99\xa8Hc\xda\x06\x99\x02;3So\x11\xecH\x7fd\xa3dt\x88\xe9\x0bN\xbaql\x8e\x8d\x91\xd2H\xf4^\xc3}\xb4\x84\x8f\x10\xfd\x12\xdb\xc6K\x1d\x13O\xd2"\x10\x84"\xcc\xed\x9ar\x1c\xc9L\x9c\xcc\x85####!H\xc8\xc8\xb2\xf6\xa2\x84\x8fa\xb1\xbf^\xcc\xcdA\x92\x18\x88\x1ad\x08\xec\xcdM\xb5\xfd\x89\x0f\xecR4\xe0CL\xf6\xe8PlZb\x8aE\xfew\x96\xde!\xdc\xabo\xf22\xf5P\xd9\x08]\x10\xd4\xf5!\xaa=RZ\xc4\xb5\x051L\xcc\xccs\x16\xa0\xb5\x0eAL\xe43\x16\xa0\xb5\x0531\xea\x0fPs\x14\xcc\xc533!Hlr\'#R^\x83ccb i\x90\x13\xd9\x9a\x9bk{\x12\x1f\xd8\xc1\x1aQ\xde\x85\x01D\xaa/\xf3{\xed\xa1\x0bi<\xa4\xd8\xbd\xcf\x13,\xf5\xde\xc8B\x10\xb6\x8cD2H\xc0P001\x1cY\x83\x14YL\xa9\x1e\xa7\xa8\x9b\x14\x98\xa6\xcc\xd8\xe6\xc736)\x99\x8ag!\xc8-A\xea\x0fP\x9e\xa19\x0eCcbd\x19\xa7"2##"S5&&j{\x12%\xf6:h\xd3E\t\t\x1e\xc5\xfc\x04!\x1a\xaf\x186"\xf1M\x8b\xd6M\xee\x84!l\xb4\x8c\x0c\x0e3\x88\xe28\xce3\x8c\xe38\xcc\x0c\x0c\x0c\x0c\x0c\x0c\x0cL\x07\x01\xe9\x9cG\x1a8\xcc\x0c\x0c\x0cG\x11\xc0\x94\ti\xb1\xe93\x85\x9c,\xe2b\x83#d[#&fJd\xa4A\x92\xf6$\x89}\x82 DE\xa4_E\xed}\xc4!\x1e.U\n\xdb\xc4\xcf\r\x16C\xdb\xa9m\x9cNX\x9c\xd19\xd1\xce\x8f0\x8f2\x8f2\x8f2\x8f4y\xa3\xcd\x1eh\xf3G\x99<\xc9\xe6O0\x8f0\x8f0\x8ets#\x9a\',NX\x9c\xa8\xe4\x89\x9cL\xe2e\x12\xd1\xe8b\x8cQ\x81\x81\xc6\x8e3\x03\x12\xb6h\x94\x04\xa8\x9b$K\xec"@_\x11\x08B<\\\xbf\x92[\x7f\x90\x95E@[\xad\x90\xb6z\xe3\xd79\xd9\xce\xcefs3\x95\x9c\xac\xe5g#9\x0eFr3\x91\x9c\xac\xe5g+9\x99\xcc\xcevs\xb3\x9d\x9c\xec\xf3\x0c\xf3\x0c\xf3\x07\x98<\xc1\xe6\x0f0y\x83\xcc\x1e`\xf3\x07\x989\xces\x99\x1c\xc8\xe5G"9\x11\x99\x90\xe4I\x8d\x8f\xec \x88\x08~\xfdW\xddDE\xb6\xb4\xb2\xd4l^\xac\xf1\x92\xcfZ\xbaP\xbe\r\x96Ye\x96Ye\x99\x19\x19\x19\x19\x19\x19\x16Ye\x96YfFFFFFL\xc8\xc8lo\xec`@\x8f\xc3B""o\x15{G\xd3\xd4\x93\xcbQ\xbf\xa3\xae\xab,\xb2\xcb,\xb2\xcb,\xc8\xc8\xc8\xbf\xb1DQ\x11z\t\xfc\x0b\xd9\x11"#\xc4\xca\xb4\xf6\xd5\x96\x1aM\x90\xf6\xec\xbf\x8dE\n&\x06#\x88\xd7\xfa\x14H\xa1\x1f\xd7j\xfb(\x88\xb6\xf1r\xf6\x8e\xde>X\xe9(\x8b\xad|Z(\xc4Q\x14,\x8e\x83d|)?\n\xd18Q%\xfe\x85\x12"%\xde\xbe\x84$DKo\x10\xefQ\x88\xf1\xf2\xbdE\x0f\x93E\x14P\xa2(2:\r\x90\xf0\xa4|:^\xe5F$\xf5\xd4Hk)\x9e#I5h\x92\x1a\xff\x00A\x80\x84\x7f}\x86\xfbQ"DC$\xed\xd9\x1fsVY\xeb7\xf1\xe8\xc4\xc4\xc4\xc1\x91\xd1l\x87\x85d|2^\xe5B\x04\xb5\xa2\x87\xe2/\xd8\x94\xdb$Bx2/8\x9a\xf0\xc5\x8d\r}\x05\xf7l\xb2\xfe\x02"""\xebo\xae\xfa"D\x88\x8dgPc\x1b\xc6\x0eD}m\xfcd\x88\xc4P\xb2:\r\x90\xf0\xa4|*B\xd3\x84Ij(\x93\xd7\x7f\xd0\xe7\'\xd0\xc6xmK\xf4<D2V45\xf6V_q\x08G\xf4/\x82\x88\x91B\x11\xe2_\xa2C<d\xb1\xd0\xa2*\x97\xc6\x89\x14x}\x1b\xf5eF#\xd5Hz\xc3\x9bcc\xe9d\xfdM)\xe1"-I\x1a\xd0\xc5\x92C_i}\xa8\x8bi|$D\x88\xb6\xf1\x0f\xf9\xed\xfeF^\xb1\x87\xc7\x89\x03K\xff\x00\x8fCR\xf6\xbe\x87\xd0\xc9\x0c\xf0\xda\x97\xe8j\xc74I\r}\xb5\xf6"!\x0f\xdfu\xd0\xfa\x9e\xd7\xbcH\x91\x10\xc9\xbbv/s\xc4\xcb=\x7f\x8f\x16E\x9e\x1bS\xfa5cc\xe9\xad\xde\xcc\x92!,\x1d\x9ar\xc9\x1a\xd0\xa645\xf5\xf7\xd8\xbe\xa8\x88]\xf7\xd1\x14DB5\x1dE\xb1\x9e\xc9\xb1\x7f)J_\x1d\x114%L_\xca$\xe3]/\xaaC<6\xa7\xf4N9!\xa1\xaf\x97\x7f\x1a\xfb\x88]\xf7\xb3\xd9\x10"\x84#]\xff\x00\x1d\xbcD\xb0\xd1l\xd3_\xc7\xb8\xfbh\x89\xa6\xe9\x9a\x12\xb4M\r\x0fw\xbb\x18\xc6I\x10x\xc8\x84\xad\x1a\xd0\xa7cC_"\xfe\x86\xf7B\x1f\xb7v\xfa\x10\x88\x91\x10\x8dw\xeb[\x7f\x90\x97\xf0P*\xbeB\x13<<\x8frHk\xb4\xc6xmO\xe9\x92\xfeHh\x92\xfb\xb4!\r\xfa\xf6\xaff\xfaQ\x12"\x16\xda\xae\xe4\xf6\xf1\x8f=u\x1f\xcf\x92\x84hJ\x8d9Z$\x86\x87\xd0\xc7\xb3\x18\xc6FX\xbb4\xe5\x92\'\x1f\xechk\xbe\xfe}\xf5\xdfJ\x16\xce^\xa2\x91e\xefe\x89\xede\x8d\xf4\xa2$D!\xba\x18\x8b\xcfVR\xf9(D\x1d3Jg\xb9$>\xa61\x8cc<>\xa7\xf4{\xa1\xa2K\xea\xaf\xbb{!t\xa6&Y}V7\xd0\x88\x91\x10\x84j?\xe23RXi\xb9\x1a+\xf8\xdf\xc9[#Jf\x9c\xac\x90\xfa\xd8\xc7\xb3"\xf1viN\xd1$45\xf5\xb7\xdc[>\x8b\x132,\xbe\xca"DB\xdbU\xed\xe3\xa5\x8e\x95\x11U\x14\xbeR\x11\x17F\x8c\xcftMu1\x8c{1\x9a\x13\xfe\x8ft45\xf7\x0bw\xd5e\x96&Ye\xee\xc4D\x88\x84-\xb5=^\xde9\xe5\xa9\x18|\xc4#JTi\xbbD\x90\xfaX\xc6=\xd9\x17N\xcd)\xda\x18\xd0\xd7}\xfdB\x17b\xb7\xc8L\xbe\x94D\x88\xb6[K\xd7i\xbc\xfcC\x7f\x9f5\x11t\xcd\t\x9e\xe4\xd7K\xdd\xee\xc6hO\xfa\x13\xb1\x8f\xec\xaf\xa5v\xe8\xad\xb22\x13/dDB\x10\x862N\x95\x9a?\xca\xe5\xfb\xf3P\x8d\x19\x10v\x89\xa2^\x9d,c\xdd\x8cN\x99\xa5;C\x18\xfe\xd9wZ\x1a\xda\xc4\xc4\xc8\xb2"\x10\x84K\xd8g\x8b\x9e:L\xd2U\x05\xf3P\x88\xba4&3R=\x0c{=\xde\xfa3\xa7D]\xec\xfe\xd5w\xa8\xa3\x11\xad\x93"\xc8\xb1\x08[M\xed\xe3\xdd\xe3\x0f\xa0F\x8c\xa8\x8b\xb2h\x92\xa7\xd0\xc7\xd6\xbd\r9\xde\xef\xaa\xfa\x1f\xd5!|\x06\x87\x12\x88\x90dX\x98\x9e\xd3{k\xbc\xfcE~|\xe4!\x11f\x8c\xc6jGv\xc7\xb3\xeb\xd1\x9d22\xd9\xf4\xbe\xdd\xfd\x05\xf4!|\x16\x86Y\x06)\x11\x90\x98\x9f\xa9!\xb2\x0f=IO\xe7\xa1\x08\xd2\x951;D\xd1\xa9\xe8_C\xeabf\x94\xedl\xfa_\xd2\xdfil\xbe\x03%\xb4P\x84\xc8\xcc\x8b\xf4\x19\xad, \xd9\xa0\xaa\x1f@\x84E\x9aR\xb1\x9a\x91\x1f\xa7m\x9aR\xa6E\xec\xfe\x96\xfb\xcbe\xf0\x18\xc4\x84\x8a\xda>\xe7\xf5\xb7\x8d\x95i\xd7\xe9\x18\xd2\xa3\x12\x8cLLLLLLLLLL~\x1a\x10\x8d9Qv\x89\xa3V;_e\x89\xd34\xa7\xb3\xfb\x0b\xd9\x0be\xf0\xa8[\xc4\xfe\x86k\x7f\xc9\xaf\x08\x18\x98\x18\x98\x18\x18\x18\x18\x18\x98\x18\x18\x98\x18|4!\x11f\x9c\xad\x0c\xd4\x88\xd5>\xb7\xbb\xdbJ~\xa4^\xef\xec\x17\xc2l\xb1\x0b\xa2\x1e\xe3\x19\xe1\xd7/\x88\x9c\xbf\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c>"\x11\x13NT{\x93F\xac\x7f\xbe\xb7\xd0\xc5\xe8i\xcf\xd0\xbd\x9f\xd9.\xed\xedcb"\x85\xd1\r\xa4\xe9Y\xfe2\x17\x0c\xdf\xf6```q\x9cf\x06\x06\x06\x06\x06\x06\x06\x06\x1f\x11\x08DY\xa7"F\xa2$\xa9\xf5=\xd8\xf6\xd2\x95\x11{?\xb5]\x8b,\xb2\xc6\xcfr(]1\xf6\xdb\xc4\xca\xb4\xd9\xe0\xf4\xf0\xd2K\xaa\x8cLJ(\xa2\x8a+\xe2\xa1\t\x90{MY\xab\x1e\xee\x9c\xad\t\xfd-\xf7\x97f\xfa,l\xf7"\xba\xff\x00\xa1\x9a\xab=H@\xd3\xf6\xfaD",\x83\x194IS\xe9}zr\xa6E\xfd\x9a\xeeX\xd8\xbdE\x11u-\x99\xa0\xb3\xf1W\xf8/n\xab,\xbe\xcd\x15\xde\xae\x84!2\x0fi#V=\xdd9\x0bg\xd0\xfe\x8a\xc6\xcb/\xa9v\xac\xb2\xcb\xb1!.\xb4D\xbd\xbf\xc7G\'-O\xdf\x81E\x14QE\x14bbbbbbbQ[\xd1[\xa1\x11bc&\x89\xaa}\xc8:d^\xcf\xe7Y}\x86\xcb\x13\x17J\xec^\xd6Y\xee$%\xd9\x8e\xda\x8e\xa0\xd9\xe0c\x8e\x9a\xf8TQ\x81\xc6````````bQBB\x88\xe2QB\x10\x842F\xa2\xee\xe9\xc8_K{2L\xc8\x8b#\xd2\xbbi\tv\xff\x00\xad\xb5\x7f\x95G\xf4\xd2U\x1f\x83e\x89\x91B\x85\x8fH\xe30\x16\x99\xc4q\x9cc\x80\xd0\xd1\x89\x18\x91\x88\xe08\x0e&%\x08C$I\r\r\x14QEmE\x14QD}\x08\xb2\xfeU\xf7\x19\xa8\xcc\x8d6G\xa5v\xd7b\xf7[6Ag\xac\xbf\xe8^\xdf\x02\xcb2#"3!1z\x8fh\xa2\x8a0F\xa4R$\x8c\x05\xa6b\x91\xeb\xb3c\xe8\xb1\x8ccC\x1e\xd5\xb5m[Q[&&_z\xcb/k,\xbf\x83#Pl\xd1#\xdaE\xee\xbb\xb1\xd9\x9e\re7/\x83\x91fB\x91\x19\x9as!?B\xefh\x96drP\xe5f(kor\x86\xc9\xfb\x19\x99\x89\x96^\xec\x96\xd4bbbbbb``bbc\xdell\xc8\xb2\xf7\xb2\xcb,\xb2\xcb,\xbe\xd4\x8dA\xb3E\x90\xee\xd0\xba\x17f;7^\xa7\x82\x8dF\xfe,Y\xa6\xc82"El\xc6"\xc6\xc9L\x84\xae#e\x93\x97\xf1e6$\xc8\xf4\xb1\xa2\x8a+z\xde\x8a\xd9\xf7\x98\xfbVY\x91\x90\xa4\'\xda\x91\xa8H\xd1!\xd0\xba\xd2\xec.\xc2\xf6\xda^\xc6\x8a\xc6;\xd9h\xb2\xd1e\x96Ye\x96Ye\xf4\xa2\x0c\x84\x88\xc8\x8b,}2cL\xd2x\xfa3\x13\x12~\xbe\x88\xe30\x14J(\xad\x98\xca(\xa2\x8a(\xa2\xb7\xae\xab,o{\xe9e\x15\xd5]HB\xec\xb3Q\x0e&\x9a!\xd0\xbah\xaf\x80\xb6bW(\xa3<P\xf5\xc5\xe2\x07\xaes\xb4y\xb1x\xab<\xd0\xfcS<\xdb\x1f\x8cg\x9a\x91\xe7\x19\xe7\x1b\xf6\x17\x8cg\x9d\xf5\xa3\xcdKz\xd9"$]\nb\xd5\x16\xbb9\xceQj"\xecf&&%mE\x14QEoF%\x14QEm]O\xa2\xcb\xda\xfb4QE\x14QE\x14Q\x89\x89BB]4QE\r\x12\x88\xe0F\x04P\xbeJ\xd9\x91\xff\x00\xea\xc9\xb6KQ\xa3\x98\xe7\xa6s\xc4z\xa8\x86\xba\x89\xcd\x02Z\xf4\xfd\x0f5\x16K]2>*\x95\x1edZ\xf8;C\xf1M\xb2Z\xd9\x1ekP\xa2\x8cLE\x11D\xad\xec\xc8\xc8R\x16\xa5\x1c\xa7!\x91}4QE\x15\xbb\xef1\xfcZ\xda\x8a(\xa1.\x9b\xeahq1\xdd|\x88\xec\xbd\xc8\x98\xfa\x1a\xbacC\x8f{\x12\xb6B\xd9\xf5\xde\xcbtQ[\xd9e\x96Ye\xf7\x99E\x14Q\x89\x89E\x14QEv\xdf]\x96YfFFE\x97\xd5\x7f!{m\x1fcM\x7fd\x99\xeeOJ\xfd\x87\x06\x86\x87\x1e\xe5\x14QB,\xb2\xf6\xa2\xbaR\x12\x12\x16\xf6Y\x91\x91\x91\x99\x99\x99\x99\x91\x91\x91e\x97\xb5\x96Ye\x96^\xf8\x98\x98\x94bQ\x89\x89\x89F%\x15\xf1\xac\xb2\xcb\xe9_\x1a\xba!\xe8\x8dI\x11\xf6,\xc1H\x9e\x81(48\x8e%v\xa8\xa2\x8a\xec\xd1BB\xda\xcb,\xb1\xb1\xbf\x8c\x84\xcb222,\xb3"\xcb,\xbe\x8b/k\xe9\xa2\x8a(\xa2\x8a\xeb\xae\x8a+\xe5e\xeas\x1a\x8f1jR\xa1M\xd9\x1dAM1\xe9\xc6d\xfc7\xe1-&\x87\x11\xc4q+\xab\x88ZG\x10\xf4\x8e3\x8c\xe38\xcc\x0c\x0cLG\xe8ddY\x91\x91e\xf4\xd1E\x14QE\x14Q]\x17\xd8\xb3####"\xcb,\xb2\xcb,\xb2\xfb\xd7\xf1\xaf\xb4\xba\xef\xd4h\xb3#"\xd6\xde\xa8Z\x8d\x0b\\z\xb1\x90\xd4X\xf4\xc7\xa6=3\x13\x12\x8a(be\xefE\x18\x98\x98\n\x08zd\xe28\x94$QE\x14Q\x89\x89\x89\x8b111000010$\x89z\x16^\xd6Y{^\xf6^\xf6^\xf6_\xc2}U\xdb\xaf\x8d\x17\xee\xc6\xfd:rb\xd4\x14\x93)3\x13\xf9#6\x8c\xcfFb=1\xe9\x1cL\xe3c\xde\x8a\xde\xcb,R2$\xaczg\x11\xc6``\x8c\x11\x8a1F(\xc5\x14QE\x15\xd7"^\xfb\xd9e\xf4_\xc2\xbe\xc5w\xef\xa9\x16-\xab\xb1}\x95\xff\x00\xc9>\xc2\x93\x16\xa1\x99\xe8\xccQ\x89\xea^\xd4\x8a\x12$\x85\xf2/\xb1"kw\xf4U\xd5],\xae\xe2\x19]\xd9?M\xa5\xea\xfby\nb\xd43-t\xb7\xb2\xe9\xaf\x94\xd14=\x9fi\xfc\x1b\xde\xc7\xbd\xf5z\x96\x8a\xe8\xb6/Oq\xed{^\xde\x83\x13,\xb3\xdc\xb1\xb2\xcfN\xbb2\xa1H_\xcat9Qw\xdf\xc9\x99\x99\x99\x8cktQE|k\xea\xd5^\x9fAe~l\xa8l\xbd\x94\x8a\xbfa\xba,\xbd\x95\x8a\x9f\xbf]\xed\xeaz\x9e\xbd>\x85\x9e\xbf\x85\xbf\xc2\xd9l\xb6[~\xc5HQ\x11h~\xbbB\xa2O\xdfk/\xa6\xbb\x99\x17\xb5\x8aB\x91VP\x90\xd7f\xcb,\xbd\xef\xa5\xa3\xd4\xb3"\xf6\x9a\xfe#\xfa\x17\xea\xb6^\x9b\xd3\x12g\xa9L\xa2\x8a(\xa2\xba\xad\xb2\x99O\xb1\x7f\n\xc4\xcb\xde\xbbOf{\xec\x90\x93[{vo\xaa\xbb>\x85l\xfd\x8dOI|ze\x14QE\x14Q_\x1a\xbe}\x96^\xd4bQ]2[4Q\x88\x93D}v\xa3\xd4\xf5\xec\xd9\x95\x19\'\xdd\xb2\xcduR\xed\xd9e\x97\xdc\xbd\xf1\x7f\x862\xfc1\x97\xe1\x84\xbf\x0c\'\xf8q\xcf\xf0\xe3\x99\xc7#\x8aG\x14\x8e\x17\xfap\xbf\xd3\x87\xfe\xce\x1f\xfb8W\xe9\xc2\xbfN(\x9cP0\x81\x86\x99\x8e\x98\xde\x9a\xf6C\xaf\xcf\xa4\xb3#"\xcb\xe9\xc8^\xa3\xde\xd8\xa5B\x97M\x97\xd3{\xfb\x16\xcc\xcbO\xb5E\x1a\x91\xb3\x8d\x0fLzr\xfe\x8e-C\x87P\xe0\xd4<\xbc\xcf-3\xcbH\xf2\xcf\xf4\xf2\xdf\xf6yo\xfb<\xb2\xfd<\xbc\x7fN\x08~\x9c\x1a\x7f\xa7\x16\x91\xc7\xa4c\xa2\x7f\xc2^\x89\x96\x91\x9e\x99\xc9\x03\x96\'29\x91\xcc\x8ec\x98\xe6g+9Y\xc9#9\x99L\xb9\x9f\xcc\xff\x00\x90\xadC\rC\t\x9cs8\xa4qH\xe2\x7f\xa3I\x7fe\xfe\x1f\xfe\xf7o\xe7Ye\x99\x1cw\xecb\xd0\xa4\xd1\x95\x98\xa3\xdbj\xafT_U\xf6uu\xff\x00\xa8\x1c\xf3\xfd<\xc6\xa7\xe9\xe65\x7fO1\xa9\xfasj~\x9c\xb3\xfd<2\x9e\xa3\xb6\xfd:\xa4\xachhhi\x8dHkP\xff\x00\x90\xff\x00\x90\xadC\x1dS\rS\x8bT\xe1\xd485\x0f/\xa8yy\x9e^g\x96\x99\xe5\xa4yfyg\xfayc\x81\x1c18bqD\xe2\x89\xc5\x1f\xc3\x8e?\x87\x1a\xfc0_\x86%v=\x0fB\xd0\xf5"K[\xf0ro\xbd{V\xd6_\xd0\xca\x051\x1e\xe5l\xd0\xb6{\xbd\xaf\xa6O\xd2\xcdMW/E\xd7\xa7\xa7\xc8\xc8\xa8\xc5R\xeb\xa3\x14`\x8c\x11\x821E#\xd0\xfe%#\xd0\xb4\\X\xe8\xc9\x19D\xc9\x19D\xc9\x19#$d\x8c\x91\x94KFE\x99\x19\x19\x19\x19\x19\x16^\xde\xbbY\x91\xc8f\xcb\xef(\xb6bW\xd2\xd1\xea{\x8e%\tv_T\xa5J\xcdMW>\xb8\xc77Db\xa2\xa8\xb6\xbd\x85\xab\xfaf\x8c\xd1h\xb2\xcb/k-\x99\x17\xd1l\xc8\xc8\xccr,\xb3$Z2-\x19#$d\x8c\xa2d\x8c\xd1\x9cL\xe2f\x8c\xd1\x9a\xda\xcc\xd1\xc8r1\xc9\xbe\xfe-\x8bM\x8bI\x18\xa49\x17\xf1W\xc1em\xef\xd0\xfa\x1fC\xda\xf6\x9c\x94MMG>\xc6\x9b\x84Q\x9cL\x91i\x9a\x92J>\x86l\xe4g,\x8eY\x1c\xd29\xa6sH\xe6\x91\xcd#\x96G,\x8eI\x1c\x923g#3fl\xc9\x993&Yl\xb2\xcb/\xb7}\xdb/d\x9b\x16\x9b\x16\x9a\x14R\xe8\x91\xeb\xf3k\xbc\xfb/v\x8b\'\xaa\x97\xb1)\xb9vl\xb3#&_\xd6\xd9{Sb\xd3\x93\x16\x8b\x16\x8a0E\x14QE\x14P\xe1g\x18\xe0`W\xce\xa2\x8a\xeb\xbd\xdfi\x9a\x8d\x8c\xa2\x8a(\xaf\x87[QEmE\x14QE\x14Q[Wn\x99L\xc5\x983\x8aG\x97\x91\xe5\x98\xbc)\xe5Q\xe5\xe2q\xc5\x14Wz\x8cG\x03\x8c\xc0\xa7\xf0\x17R\xda\x8a\xea\xae\x9b\xd9\xf6^\xce\x16=$q\x1cG\x11\xc4\x8e\x14=\x13\x80\xe18N\x03\x81\x9c\x0c\xe08Y\xc0\xce\x13\x80\xe08N\x13\x89\x1cG\x128\x91\xc4\x8e$p\xa3\x85\x1c18bqD\xe2\x89\xc5\x13\x8a\'\x1cN8\x9cQ8\x91\xc4\x8e$q#\x89\x1cH\xe2G\n8\x91\xc6\x8c\x11\x820\x89\x8cJG\xa1e\x96Ye\x97\xf0o\xa2\x8cG\x03\x03\x02\xbe\x12b\xe8\xaf\x85}\xca\xf8VY{\xdf\xc3\xae\xfd\x14QE|\x1a1\x1c\x0e3\x03\x12\xbb\xad\x96Y\x90\x9f\xc8}\xe7\xde\xb2\xcb/\xe2\xd1]\xab,\xb2\xf6\xa2\x8a+\xe0\xd1F&\x06\x06\x06%\x15\xb5\x15\xb5\x14QE\x14Q]\x14Q}\xc7\xd6\xfb\xaf\xae\xbb6Ye\x97\xf1\xebj\xee\xd1_\x0e\x8a1\x1c\x0c\x0cLLJ(\xa2\x8a(\xa2\xba\x10\x97\xdaYe\xfc\n(\xaf\x81e\xf4\xd1E\x14W\xc2\xa2\x8a(\xa2\x8cJ(\xa2\x8a(\xad\x92\xee_\xfa+\xed\xdfr\x8a+\xbfE\x14Q\x89E\x14QE}k\xf9\x96_\xd0\xd6\xf4Wr\x8a(\xa2\x8a1(\xc4\xc4\xc4\xc4\xaf\xba\xb2\xfe\x82\xbe\x86\x8a\xde\x8a(\xa2\xbe\xe2\xbemmE\x15\xd8\xaf\xa1\xaf\xf4\xcb/\xe2\xd7\xfeS\x7f\xff\x00B\xaf\xf6;/\xff\x00\\_\xeaW\xfe\xa5\x7f\xf8\xbd\xff\x00\xe4\x9f\xff\xc4\x000\x11\x00\x02\x02\x01\x03\x03\x03\x04\x02\x01\x05\x01\x01\x01\x00\x00\x00\x01\x02\x11\x12\x03\x10\x13 !01@Q\x04\x14"PAa`\x05#2Rqp\x81B\xff\xda\x00\x08\x01\x02\x01\x01?\x01\xd3\xf45_boh\x08c\xddn\xc7\xd0\x84\xb6\x89\x05\xbb\xdd\xec\xc8\x9a~\xa4\x11\xa6\x88\x08\x99\xaeL{\xe9\x91\x10\x85\xfb;\x1c\xc9j\x0ec}Ni\x13\xfa\x8f\xe1\x15=OR:q\x8f\xa6\xeb{\xe9\xd4\xee\xd2\x11\x05l\xfa\xbf\xc7\r%\xfc!\xf5G\xb25Y-\xa2\xb6}\x0bv>\x85\xba"1\x8fv=\xa1\xeai.\xe4\r4Ci\x9a\xe4\xc7\xbe\x99\x01\x08^\xf2\xbd\xb3\x90\xe49\x0e]NtK[\xf8F2\x97\xfc\x85\x14\xbd\n\xf1\xb6z\xcfo\xa2\xd3\xe4\xd7\x8a>\xaaYj\xc8c\xe9p\xa4j\xc4p\x16\x99\x1d#\x8czg\x19\x81\x80\xb4\xcc\x0c\x07\x01\xc4\xc4\xa2\x85\xd8E\t\x11]\x861\xee\xfdG\xb4\x11\xa3\xeaG\xb1\x02;L\xd7$=\xf4\x91\x1d\x90\xbfb\xc91\xcb\xa9\xc8z\x97\xe8`\xe5\xff\x00!E/M\xab\xcb\xa7\xdf\xbe\xdf\xe9\x91\xa7-G\xfc!\xf7\xee1\xf4\xcfO\xb1\xa9\xa4p\x11\xd0\x16\x89\xc4=\x13\x84\xe18N\x11\xe8\x9c#\xd1\x1e\x89\xc2=\x13\x88\xe2\x16\x91\x1d!i\x0bO\xb0\xf4\xc7\xa6=3\x03\x02q\xa2\x9b\x14\x08@\xd1\x87r0!\x021(\x99\xacM\ro\xa6Gd/\xd8\xc8\x93\x1fC\x95\x16\xe5\xff\x00\x13\x8b\xfe\xc5W\xa1]5\xe1d\xdd"\n\x92[}:\xe3\xfa6\xfev{>\x89\xc8\x96\xc9\xa3$d\x8c\xcc\x91\x922FHrE\xa1\xb8\x9f\x88\x94Lba\x13\x04(!i\xa1i\xa3\x01\xe9\x8fLzg\x11\xc4OH\xe0#\xa2CD\xd2\xd2\xee-21\x14J&\x8dX\x13\x89(\x94(\xf74\xf4\xca\x18\x85\xfb\x19\x12\xdd\xba?)\xfa\x0bG\xfe\xc5|x\xeb\xa5\x8c\x97v\x90\x84k~\x1aZzc\x1e\xcf\xa1\xc8\xf5(\xa2\x8a(\xa1\xc4\xc4\xc4\xa2\x8cL\x0c\x0c\x0cLLJ\x11\x91\x91}\r2\x98\xbb\x11f\x9c\xa8Z\x88Z\x88Z\xa8\xe4C\x92\'L\x9cQ=3\x88\x86\x99\x08!\xa2B\x17\xbc\xafh\xc9\r\x0f\xb1\xf9K\xd0\x8e\x92^\xa5\x15\xb3\x1f\x86\xb6\xad\xd8\xc8\xfeS\x11\xf4\xba|\x9a\xaa\'\xd5K-V1\x8c}\x16_U\x14QE\x14QE\x15\xb5uY{_NB\x91\x98\xb5\x0eC\x90\xc8od\x84&JC\x10\xbf`\xc7\xb7\xab\xeac\xf1\xad\x98\xc93Ez\xb1\x1f\xe9\x90\xbd\\\xbe\tK&\xe5\xbb\xd9\xefF&&&&&&&&&&\x06\x06&\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06&%\x14WM\x96d_\xec\xd8\xf6\x8f\xce\xd5\xbb\x1f\x92\x86H\x90\xfbw4\x95Em\xf4K\x0f\xa6\x94\xfev{=\x9f\x8a\x8a(\xa2\x8a(\xa3\x13\x13\x13\x13\x13\x13\x03\x03\x03\x03\x03\x03\x03\x13\x12\x8a(\xa2\x8a(\xa2\x8a(\xa2\x8a+\xf6r\xd9\xfa\tv\xdd\x8cc\xf1\xad\x98\xc9\x12\xf8\x16\xcda\xf4\xd0\x87\xcfK\x18\xfd\xdd\xa3"\xca(\xa2\xb7\xa2\x8a(\xa2\x8a(\xa2\x8a+\xf6Oi\x14$P\xc6?3$H\x8a\xb9\xa1\x1aP\xcej\'\xd5?\xce\xbe:_\xba\xc8\xccz\x83\x99\x90\xa4\'\xfe\x04\xc7\xb2\xee\xca\xdd\xec\xfa\xab\xc0\xc9\x0c\xd1V\xdb\x11\xfe\x9b\x0c\xb5\xd3\xf85%\x94\xdc\xba\xdf\xb4\xb3!\xc8\xc8\xc8r\x1c\xcc\x8c\x85",O\xfc\x05\xef\x15\xbb\x18\xc7\xe5c$3E~;\x7f\xa7\xc7\r9\xea\xf8\x1f\xb0\xb3###"\xc7!\xcc\xcbe\x1b!\xa2\xd9-\x17\x1fS\xd1\x91d_\xf8\x0b\xdd.\x861\x8f\xc8\xc62~\x84U-\xa0\xb8\xfe\x92+\xe7\xa9\x8f\xcfc\x91\x91\x91\x91\x90\xe6dw1\xb2:M\x8bDPH\x898\xe4\x8dH\xd1\x06&\'\xfe\x00\xf7\xa2\x8a\xd9\x8fj\xf22C=d\x90\x88\xabt}O\xe3\x8e\x9f\xc7\xb6ll\xb3#-\xa8\x8e\x9bdt~H\xc1.\x88\x88\xd7\xd3=\x18\x98\x9f\xea\xeb\xda1\x88K\xbe\xecc\x1f]u1\x8cdU\xccG\xd1C=h\x9a\xf2\xcbQ\xbfj\xc61\xb3\x11i1i\x8a"\xeaDMH\xe5\x13R\x14&&/\xd8W\x99\xec\x88\xad\xd8\xc6=\xeb\xc4\xc61\x9a^\x97\xb7\xfatqr\xd4\x7f\xc2\xf6\xcc\x90\xc5\xeaB\x84WB\xe8B\x11\xf5\x1acT\xc4\'\xfb*\xf2=\x91\x1d\xd8\xc7\xe3\xad\xd9!\x93\xec\x88*B4V\x1fI\x7f>\x17\xe5d\x90\xd0\xd1\xa7!t\xae\x94"Q\xc9\x1a\xb0"&/\xde\xbd\x90\xb7c\x1fE\x14W[\x18\xc6K\xbd!\x08\xd6\xfc4\xe1\x0f\x0b\xddx\xe42DY\x16_B\xeaLG\xd4C\xf9$\xa9\x88_\xbd{%\xbb\x18\xc7\xe2\xad\xd8\xc6H]\xe7\xb6\x843\xd4\x8cO\xa9\x96Z\xaf\xdb\xb1\x92\xda\x0c\xbe\x95\xb2\xe8D\xd6H\xd5\x80\x84\xcb\xfd\xdb\xd9\tn\xc6?#\xd9\x8cd\xbb\x9a}\xed\xed\xf4\x11\xff\x00s\'\xfc\r\xdb\xbfp\xc612,O\xa9t!\x1a\xf0\xfeI\xaa{\'\xfb\xb7\xb4Q\x18\xf61\xd9\x8cem]\x15\xd1\xfc\x8cc\xd9\xa2N\x8d5HH\xfa\x7f\xc3Bs\xf9\xf6\xeff2HDX\x85\xd0\xb6B\xd9m(\xda5`U\x08_\xba{@\x8c{\x0e\x03\x88\xe21\xef[V\xef\xa1\xec\xf6o\xb9>\xfd\x84"k\r\x08G\xdc=\x98\xc6&A\x8b\xa5\x08[-\xf5\xa1\xfc\x9a\x91\xa1\x0b\xf7Om4.\xc2v4J$\xa24W\x89\x8ff2G\xff\x00\xd2\xdbN94\x8f\xaa\x7f\x9d|{\x861\x8d\rm\x16.\xa4!n\x86\xad\x1a\xd0\x1a\xa1~\xed\x1aK{=I@\x94\x07\x12\x8a\xe9{\xb1\xee\xc9"?\xf2{}\x1coU\x1a\x8f)7\xeeX\xc642,\x83\xeaB\x17N\xac\x7f\x93R;\'\xfb\xa4izt\xde\xce#\x88\xe2bWK\x1e\xcff>\xc4=6\xfao\xc23\x9f\x85\xfb\x16\x861\x92[A\x8b\xbfB\x10\xb6[\xa1\xab5`IV\xcb\xf6\xefh\x90\xf4\xe9{Y\xea`8\x0e\x03\x89[\xb1\xec\xf6d\xfd\x04D\xff\x00\x87\xd3\xa5\xf3\xee\xd8\xc642\x0c\x83\xde\x85\xb2\xd9t\xea\xc7\xf95a\xfb\x97\xb4P\xba\x99G\xa0\xa4]\x8e#\x81(\x8d\x14H{\xb1\x93\xfe\x16\xd1>\xa7\xb60\xf8\xf7l{4I\x08\x83#\xdf\xa5u!\xf75`N5\xb2\xfd\xc4\x17\x7f\x1at)\x96\x99\x85\x92\x80\xe0N\x1d\xc6\xb7\x90\xc9\x7f\xcbm\x08\xe58\xa3ZYM\xbfx\xf6d\x86E\x90}+\xc1\xa8\x8dX\xfe\xe1\x88\x87]\x97\xd3tFG\xa8\xe2N\x04\xa2I\x14Hb\xee\xf6\xfa_\xc6N_\x1e\xf9\x8cd\x90\x882.\xfc\x8c\xd4\x89\xa9\x1a\xfd\xc2"\xbby\xd4\x85+\x1cl\x96\x99-1\xc0\x9cI\xf6L\x8a"\xbb\x90\xfct\x1b\xf9\xf7\xccc$\x86A\x9ao\xcb\xa8\x8dX\x8dW\xed\xe2/\x15\xf5"#C\x8d\x92\xd3\'\x03]R\xa1\x115\x7f\x18F\x1e\xfd\x8cd\x91\x16A\x90w\xd2\xba\xe8\xd4\x89\xa9\x1f\xdb\xc5{\x14"R2.\xc9E3\xea\xbf\xe5[i\xc7*_&\xbb\xb9\xfb\xf61\x8fh3NB\xf2MY\xab\x11\xaa\xfd\xb4\x17\xb1E\x8d\x96FD\xb5*&\xa7ym\xa0\xbf?\xfc%+v^\xd6^\xf6Ye\x96Y~\xc9\x8ff2,\x834\xdf\x91\x93\x89\xa9\x1f\xda\xa2+\xb7\x91\x0c\xae\x86=\xe7\xdc\x97y\x11V\xc8\xba\x84\xa5\xbd\x96Ye\x96Ye\x96Y~\xcd\x8cc\xda\x0c\x84\x84\xef\xc94j\xc0\x92\xa7\xfb\'\xb4P\x97\x96\x8a\xdd\x8c{\xea:[@\xd5\xfct\xa2\x8b,\xb2\xcb/k,\xb2\xcb,\xbfh\xc61\x91d\x19\xa7/#\'\x13V?\xb2b \xbc\x94QE\x141\x8f\xa3]\xfe;Ev>\xa9\xd3\xaf\x82\xcc\x8c\x8c\x8c\x8c\x8c\x8b,\xc8\xc8\xc8\xc8\xc8\xa2\xb6\xaf`\xf6c\xda\x0c\x83\x13\xbf$\xd1\xa9\x12Q\xaf\xd9"\x0b\xc9E\x15\xb3\x1b\xea\xd7}\xebh.\xe9\x1fQ+}\x16Ye\x96^\xd6Y~\xd9\x8cc"\xc83N^Y\xc4\xd5\x88\xff\x00b\x91\x04V\xf5\xd5Et\xb61\x8fvj;\x90\x8fL\x99\xa9\xeb\xfa7\xb3\x1e\xd0d\x19\x17k\xc9%d\xe2N5\xfa\xf7\xb4\x10\x97\x82\x8a+\xa5\xbd\x98\xfa%\xe83Mw\'\xdbL~\xbe\xc2\xcb,\xb2\xcb,\xb2\xcb,\xbd\xdb\xde\xcb\xd9\xec\xc6A\x90d\x1f\x96H\xd5\x88\xff\x00QE\x15\xd2\x88/\rm^MWQ\xda>\x8d\x9a\xfd\x95y\xe8\xb3#########333#"\xcb\xf01\x10dH\xbb\xf2I\x13\x8d\x93\x8d~\xa1"\x86\x87\xd0\x8d5\xed\xf5\xde\xc9vH\xd7w\xbdy\x9e\xd6ddddddddddY{Ye\x97\xb3\x1e\xf0 A\xf9d\x89\xc0\x94}\xb5\xfb\x04E\x18\x8e$\xba"EuWS\xf1\xea\xf7\x96\xcf\xb35\x1f\x7fb\xd6\xcc{Y{Ye\x97\xba,o\xa1n\xc4\x88"$D\xc4\xcb/\xaa\xf7cD\xa0=3\x1e\x9a(\xa2\xb6\xa2\xbd\x95\x18\xf5D\x81\x894K\xa2\x02\xf6\xcc\x97wd\x15\xb1\xbfR^\xbe\xc1D\xc4\xc0\x94\x07\x11\xaf\x15\x96$\xd9\x1d#\x84\xe18\xda1(\xa1""\xd9l\xb6\xb2\xcb\xf044J#\x89\x89\x89\x89\x81\x81\x81\x81\x81\xc6q\x8e\x03\x89E\x14QE\x15\xe1E\x0f\xa6&\x98\x91\xa8Kti\xafo\xa8\xea;i\xff\x00,\x9fh\xfb\x15\xa6q\x9cd\xb4\xc9\xe9\x93\x8fUoF"\x81\xa5\xa4GHZC\xd2\xfeG\xa3d\xb4\th\xd0\xe3[&E\x88[Y\x91e\x96Ye\x96Ye\xee\xd1F"\x80\xa0bb\x8cJ(\xa4R$\x90\xd1E\x14QE\x14QE\x14Q]\x167\xd3\x13LF\xa1=\xd1\xa6\xbd\xbe\xbb\xed[z@\xd5\xf4\xf64V\xd4j#Q\x0f\xad!DQ#\x03F\x16\x85\x1a\x12%X\x99!\xb4j\xb2Ox\x89\x89\x96Ye\x97\xbd\x96YfFFfh\xcd\x19\x16)\x19\xa34r\x1c\x88\xe59Q\xccs\x0ev_]\x14QE\x14?\x12 #P\x98\xf6D=\xbe\xb7\xae\xd3\xedH\xd5\xf5\xda\x8a\x1a(\xad\xa8\xa2\x8a\xda\x8a(\xc7{,\xd45\x11%\xd1e\xec\x84E\t\x9az\xaa\x0c\xe6\x88\xf5\xd2%\xf5\x191\xeb\x0fY\x92\x9d\x8ft&Y\x91\x91\x99\x99\x99\x99\xc8r\x1c\x87!\xcar\x9c\xa7!\x99\x9b3fl\xe4fl\xc9\x992\xf6\xbf\r\xf8\x1f\x89\x10b\x916Lb\xd9H\xccS/\xdaM\xdc\x88\xabtj;\x93%\xdd\xedE\x14`bb``q\x98\x1cg\x19\xc6q\x18\r\x96ddND\xd8\xd1F&%o\x91\x19\x9c\x87)\xcar\x8fT\xe49\x0c\xcc\x8c\x8b\x16\xd9\xd0\xf5Nc\x98\xe69NS\x94\xe59\x0c\xcc\xcc\xd9\x91\x90\x9e\xf4V\xd4Q\x89\x89\x89Eoe\x96_M\x96Yccc{Ye\x96ddd)\x11\x98\xa69\x12{-\xec\xb1L\xe49\x0c\xd1\x91e\xf9g\xd9m\xa4\xbb\xd9\'\xb4ac\xd28\xbb\x1cLZl\x96\x93g\x14\x88\xe8\xb6}\xb4\x85\xa1$?\xa5l\xfbf}\xbb\x92\xa6}\xa0\xbe\x99\xa3\xec\xd0\xe49\x8ec\xd4%\xa89\x17\xd1E\x14Q]\x16Ye\x97\xbeFC\x90\xe4Y~T-\xec\xb2\xcb\xf6w\xb3\xf0\xd9bb\x91\x90\xf6^\x1b2339\x0eC$_\x83]\xfe;^0c,\xd3\x91b\x91\xdb\xa6\xfc\x0ec\x90\xdb\x18\xcb\xd9\x15\xbb\xe8}\x17\xd7F#\x88\xd1E\x14W\x86\xb6L\xb2\xfa,\xb2\xcb,\xb2\xcb/k,\xb2\xcb,\xbe\xba(\xa2\x8cJ\x1cG\x12\xba\x97\x86\x8a\xe9\xb6fr\x1c\x87"2]\x1a\xef\xbdm\xa8\xfb$1!\x11\x99vX\xa4^\xd6Y}y\x19\x17\xb3(\xc4\xa3\xb9e\xf4\xb1\xf5$P\xa0-1i\x1cc\xd3\x1e\x91\xc4q\x9cc\xd3\x1cJ+j(\xa2\xb6\xa2\xb7E\xae\xbb,\xb2\xcb\xf6tQ\x81\xc6`bWDQ\x89\x8fR\xd9\xf8\xb2g#G7\xc97\x93\xbd\xb5=FG|\xa8\x8c\xcb,R2\xf1\xd9}Ok,\xb2\xc6\xcb\xe8\xb113!LZ\x88Z\xa8\xe5C\xd5G)\xc8r\x1c\x86c~\xd2\x8a+|L\x0c\x0cE\x03\x03\x03\x12\x8cLLJ(\xc0\xc0\xc0\xc4\xc4\xc4\xc0\xc4\xa2\x8c\x07\xa68\x14\xf6]\x84\xf6\xa3\x13\x12\xbc\x95\xd4\x8a\xbe\xe7\x19\x08\xe2q\xf70\x1e\x98\xa3[Ye\x8aB\x91\x91e\x97\xbefffffffFFE\x97\xb5\x14QEuYe\x96Ye\xefe\x88\xa2\x8cLJ(\xa2\x8a(\xa2\x8a1(\xa2\x8a(\xad\xebdQ\x89[QE\x15\xd1EtV\xf7\xb5\x15\xd1\x8a8\xc7\xa6`\xcah\xb3"\xce\xcc\xc0p1\xda\xbc\xb5PlL\xa2\xbah\xa2\xb7\xb3##!H\xc8\xbe\xab,\xb2\xcb,\xb12\xcb/\xc7e\x96Ye\x96Y\x0e\xe4t\xce3\x03\x13\x12\x8a\xf1WEt\xa6)oe\x99\x1e\xa5\x1e\x85\x97\xb5\x15\xb5\xedF\'\xa1e\xedEl\x9e\xd48\xa1\xe9\x8fH\xc5\xa2\xda\x14\xc52\xd31Lzc\x8b+\xc7\xa9\xdbI/\x91.\xe5tQ[Ygb\x8a+|\x8c\xcc\xba/\xc3fFE\x96Ye\x97\xe6\xd3#\xbb\xf6\xf6)t\xd8\x99\xea8\xef\x96\xd5c[de\xb6&,\xf422;\x18\x95\xd1CC\xd3LzHzm\x1d\xd0\xb5\x18\xb5E4\xcaLzc\xd3h\xaf\x07\xd4\xfa\xa8\x90\xf0QEme\x9d\xb7\xa2\xb7\x7f\xa0\x81\x1d\xe8\xc4k\xdb\xa6E\xa7\xea=?\x83\x12\x8a,R)Hq\xde\xc5"\x930+e!I\x1f\x8b\x1c\n;\x89\xb12\xd7U\x0cq\xb1\xe8\xa2Z-z\x0e2\x88\xa4\xd0\xb5X\xb5\xbeL\xe0\xc6\xa0J\x91{=\xb4\x95\xcd\x1a\xd2\xb96G\xb1~*1+{,\xbf\xd1\xc5\x9al{&1\xfb\x98j4\'\x19\x8e\rm\x138\x8e}\xbb\x11\xd4g\xe3!\xc7\x12\xcb2\xa1M\x97\x19z\x8e\x1f\x05\x7fG\xff\x00\x87r\xe4d\xbf\x91\xe2&\x84\xff\x00\xa1\x7f\xe1\xdc\xa3?\xe0\xbd\xad|\x99G\xe4\xce\x0b\xf9\x16\xacNX\x8fZ\x06\xa4\xa3/DW\\\x13\x93\xa2Z2D\x7f\xdb\x83\x9b)\xc8\xa1m\xdc\xb2\xfcTQ_\xa4\xb3J{\xa6_\xbb\xb2\x1a\xdf\xc30R\xee\x8e\xd1\x16(N/\xd4\xbd$=M:\xecC^\xbdO\xc6~\x87\x1c\x8e)\x1c\x7f\xd9\x84\x7f\xece\x18.\xd2\x16\xb4d\xbf#=#\x97K\xe0\xe6\xd3\xff\x00\xa9\xcf\x1f\xfa\x9fq\xfd\x1fs/\x83\xee&}\xc4\xfeNi\xfc\x9c\x93\xf9;\x9f\x91\xdc\xc2G\x18\xd3\x12l\xc7\xfb+\xfb(qE\x11\xd2RWg\x0c\x7f\xecN\x11J\xd3\xdfNj/\xb9\xf7\x105\xf59;#M|\x8e#\x81Mu_\x8e\xba+\xcd^\xc7O\xd7\xf41\x93\x8b\xb4}\xc7\xf4}\xc7\xf4}\xcc\xbe\x06\xed\xde\xfd\xcf\xcd\x98\xc8\xc2G\x1c\x8e6q\xff\x00g\x1f\xf6q\xa3\x8d\x18D\xc6&+\xe0\xa4GJ\xd5\x9c_\xd9(\xe9\xc7\xd5\x9d\x9f\xfcP\xa2\xca\xdd\xc6\xc5\xa6`\x8aCHi\x14\x8cbR)\x14\xbc4bQ[\xdf\xb1^\xea\x8a!\xea/oL\xc6_\x07\x1c\xbe\x0e)\x1c28Y\xc2\xfeN\x1f\xec\xe1G\x14N8\x9cq\xf81\x8f\xc1K\xe3\xd8\xdc\xbf\x86S~\xacPK\xad\xb3#"\xfct>\xaa1\x1cJ\xda\xcb/\xa2\xcb\xde\xcb/k\xf0\xd1]\x18\xd8\xd3^[\x13"\xef\xae\x8cY\x84\xbe\x0e)\xfc\x1c38$p3\xed\xff\x00\xb3\x81|\x9c\x118bq@\xe3\x87\xc1\x84~\n]6Yh\xc9\x19#$g\x138\x99\xc4\xce&H\xc9\x19#####"\xd9o\xe0\xb9\x1f\x91R1\x91\x91S\x90\xa1\xe2c\xec_\x9a\xbc\x14Q\x89\x89E\x141\xae\x9a\xe8\xf4.\xf7\xecQEtQ\xff\x00\xa2g\xa8\xe0\x98\xf4\xdf\xf0Ux\xd1\xa2\xfb\x18\xdf\xa1\x84\xc8\xaf\x91a\xf0g\xa6r\xc5\x1c\xc8\xe7G9\xcf\xfd\x1c\xff\x00\xd1\xce\xfe\x0ei|\x1c\xb2\xf89&g\xa8e\xaa^\xa9\xfe\xe9\x8e\xb1\x86\xa9\xc5\xaap\xea\x1c\x13>\xdeG\xdb\xc8\xfbv}\xbf\xf6}\xb9\xf6\xeb\xe4\xfbtp#\x86\'\x0cN(\x1cq0\x82*\x07\xfbg\xfbfZfzg.\x99\xcd\x03\x9e\x074O\xb8\x89\xcb9z#\x16\xff\x00\xe4\xc4\x92\xf2\xb2\xb7\xb2\xfc\x94Q^\n(\xa3\x13\x13\x02\xfc\x9e\x87f`bb\x7f\xe9T$?^\xc2\xf5\x1a!\xa5\xff\x00c\x8a\x07\xdb\xe9\xfc\x1fo\xa7\xf0pi\xfc\x1c:\x7f\x07\x16\x9f\xc1\xaf\x84\x15%\xb5\x14V\xdaR\xa12\xc8\xb18\x9f\x81P*\x05@\xfc\x0b\xd32\xd394\xfeN]?\x93\x9bO\xe4\xe7\xd3\xf9>\xe3O\xe4\xfb\x8d?\x93\xeet\xfeO\xb9\xd3>\xea\x07\xdd@\xfb\xa8\x1fv\xbe\x0f\xbc\xfe\x8f\xbc>\xf1\x9fw#\xee\xe4}\xe4\x8f\xbb\x7f\'\xdd?\x91\xfdL\xbeO\xb8\xfe\xcew\xf2s\xfc\x9c\xe8\xe6\x89\xc8s\x1c\xc71\xccr7\xe8~o\xf8#\xa77\xea-\x15\xfc\x8a)x\xec\xb2\xcc\x8c\x84\xca1+\xa6\xcb\xf2W\xb6B+dP\xd7a+(\xaa\xf4\x1cl\x82\xefB\x8a\xf5\xeb\xd4\xd4\xc1\x12\x9b\x93\xb7\xb7q=\xecZ\x8c\xe69\xcevs\xb3\x98\xe7\x91\xcer\x9c\x8c\xe4\x91\xc9#\x9aC\xd4l\xe4\x91\x9c\x99\x9c\x8c\xe4g#9\x19\xc8\xcaFR.Gs\xb9\xdc\xeeQF%\x14V\xf4\x8a)\xb1i6/\xa7\x17\xd3\xa1i$b\x97\x8a\xcc\x871\xeaQ\xca\'{Q\x89]\x14Q_\xa4]\xcf\xe4\xad\x9a "\x8fM\xbf\x82?\xd9\x18\xa5\xd7)P\xec\xe2\x84\xff\x00\x82\x7fJ\xd7x\x98\xc9z\x94\xca\xf0V\xd5\xbd\x14QE\x14S1f,\xc5\x98\xb3\x06`\xcc%\xf0a#\t|\x1cR\xf88\xa5\xf0-\x19\x9c38&pL\xa1E\x8bJLZ\x12b\xfaah$-4\x8a^<\x87\xa8=S\x96\xc7#!\xfeB\x8e\xd6ddYe\xf4\xd1Ey/\xd8V\xe9\xed\xe9\xb2{1z\x91\xda\x93;\x08K\xad\xba\x1b\x10\xa4\x87\xa9^\x82\xa9\xfa\x8bN\'\x0cN\x18\x9c\x11>\xde\'\xdb\xc4\xfbx\x9fo\x13\xed\xe2}\xbcN\x08\x9c\x10>\xde\'\x04N\x18\x9c18bqD\xe3\x89\xc7\x13\x08\x98D\xc6&(\xc5\x18\xa3\x14R)\x15\xd7\xc7\x13\x04R\xf1\xd9\x92\x1c\xc71\xea\x0eL\xa6\xcc,Zf\x04\x93B\xecd_E\x96dYe\xf5Q_\xa2E\x0b\xb0\x9e\xdf\xf8F5\xe0\xab1F\x08\xc1\x18#\x05\xfa\xcb2FFg \xe6f9\x99\x99\x19\xa33\x90\xe59\x8eaj\xc5\xfa\x99\xc1\x8e1f\rz\x1f\x922/\xa6\xcb,\xb2\xcb,\xbfg}4W\x8d2\x84\xb6]\x8c\x8c\x8c\x8c\x8b,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb3####$d\x8c\x91\x922FH\xcd\x19\xa334f\x8c\xd1\x9a3FFFFH\xc9\x19#$d\x8c\x8c\x8c\x8c\xd1\x9a9\x11\xc8\x8eTs#\x9d\x1fp\x8f\xb8G\xdc#\x9c\xe79\x99\xcar3336d\xcbe\x96Ye\x96d\xc5\xa9$-vG\\\xcd3\xf1f\'tdY{\xd9e\x96Ye\x96Y~\xc6\xb6^*\xdd13%\xfc\x8ap\xf8.\x05\xc0\xb8\r\xc0\xb8\x8b\x1f\x92\x97\xc9\x8f\xf6c\xfd\x9f\xfe\x95\xfd\x95\xfd\x95\xfd\x95\xfd\x95\xfd\x95\xfd\x8cC,\xb2\xc7&=Fs3\x9d\x9c\xec\xe7g;9\xa4sH\xe5\x91\xcb#\x96G,\x8eY\x1c\xd29\xa4sH\xe6\x91\xcc\xcey\x1c\xf29\xd9\xcd#\x9aG4\x8ei\x1c\xb29$g#&[\xde\xbd\xbd\xb1M\xa1j\x8bT\xcd3\xb6\xf6Y}6Ye\x96_U{\x05\xe1L\xbb\xd92\xfa,R/f\'\xb2{\xa6K\xaa\x87\x14\xc7\xa68\x15\xedo\xd9QEy\xf2\xa1j\x0bP\xcc\xc9\x17\xb5\x96Ye\xede\x96^\xf7\xb4a\x90\xf4\xd9\x81\x88\xd7M\xef\xe9\xe7\xb1?\x02e\xefe\x89\x8c\xb2\xfc\x08hq\x1c\x0cJ\xf7\xb4bbbbQF&%\r{\x1b,\xcc\xcc\xcc\xb2\xf6\xb2\xcb,\xb2\xcb,\xb13Nx\x9c\x86H\xa8\xb2qC\xde\xcb\xf0=\x97\x85\t\xf8o\xa12\xcb/k,L\xb2\xcb,\xbd\xe8q1(\xa2\xbd\x95\x15\xbd\x15\xbd\x96Ye\x99\x19\x19\x19\x16_\xb5\xb3!H\xc8\xb2\xcb,\xb2\xcb,\xb1H\xc8\xc8\xccs\x1b\xde\xcb\xf1\xa1xS/\xa6\xba\xef\xaa\xcb,\xb2\xf7\xbd\xfdLLLLJ\xf3\xad\xebj\xd9\xf4^\xd6Y~\xf6\xcb2/\xa2\xcb2222\x1c\x8b/\xcb[\xaf\n\x17]\xf4\xdf\xb3\xa1\xa1\x8f\xcc\x99e\x96Yc\xfd\x85\x99\x16Ye\xed~:\xf2&_\x82\xcb/\xda^\xcd\r\x15\xfb\n\xf1Ye\x96Ye\xfe\x8d?\xd0P\xe2Q_\xbb\xb2\xcb,\xb2\xcb/\xa6\x8a\xf7W\xb5\xfb+\xe8\xbf\x13CE~\xf6\xcb/\xa2\xcb\xf7\xf7\xec\xaf\xc1}tQE\x15\xfb\xdb,\xbf\xd0\xdf\xe8\xe8\xa2\x8a\xfd\xfd\xff\x00\x82QE\x14W\xff\x00\x03\xa2\x8a(\xaf\xfe\x05E\x14Q_\xe6\xf7\xe4\xa2\x8a(\xaf\xf3\x0b\xf1_\x82\xb6\xa2\x8a\xff\x003\xb2\xcb\xf3QE\x14W\xec+\xaa\xbf\xc3(\xa2\x8a+\xf5\x8b\xa2\x8a+\xfc\n\xfc\xf5\xb5\x14W\xe9k\xff\x00\x81\xaf\x07\xff\xc4\x00K\x10\x00\x01\x02\x04\x00\t\x08\x06\x07\x04\x08\x07\x00\x00\x00\x00\x00\x01\x02\x03\x11!1\x04\x10\x12"2@PQ\x91 03Aaq\x81\xa1\x134BR`\x92\x05#b\x82\xd1\xe1\xf05\x93\xa2\xc1\x14CSpr\x83\xb1\xd2Ds\xa3\xb0\xb2\xe2\xf1\xff\xda\x00\x08\x01\x01\x00\x06?\x02\xd8\x0b\xcaNR\t\xf0\x05\xe4f\xd4\xcew6\x9b\x93\x14\x08}\xb3\x1a\xdd\xc9\xb1\xd7\x94\x9c\xa4\x13o\\\xcd*\xbc\xeb\xdf\xe1\x89W\xdcAv:\xf2\x90NJ\t\xb7.P\xaa\xf3\xed\xa5\xf1D\x8b\xbdg=\x83~u9H&\xda\xb9Bj\xba\x82 \xd6\xeeA\xd2\xbfP\xd4M\xa8\x82m{\x97(V\xba\x93\x13\x148~\xf3\xab\xdc1\xbc\xc5\x8bb\xb1b\xc5\x8b\x16,X\xb1b\xd8\xac[\x1d\x8b\x16,X\xb1b\xdc\xcd\x8b\x16\xe5\xa0\x9b_v\xaa\xf7\xeeLH\x9e\xe2s6,X\xb1b\xc5\x8bc\xb1b\xc5\x8b\x16,X\xb1b\xc5\x8b\x16,X\xb1b\xc5\x8b\x16,X\xb1b\xc5\x8b\x16-\x8e\xc5\xb6\xb25\x17WWo\\Qbv\xec\xbb\x16,X\xb1b\xd8\xed\xb5\xd7\xb3Vj\x10\xdb\xd89w \xde\xef\x8a\x94z\xf6\xea\xd0\xd3\xb7\x13Y\xef9\x10c~*~\xaf\x95\xee\xe2\x86\xde\xa6\xd5~*Q\x1b\xbfW{\xf7\xe2\x8a\xfe\xa4\xa2l;\x97\xf8\x1d\x1b\xbbWbx\x8a\xa2\xbf\xadv\x05\xcb\x974\xb1\'\xc0\xaaD^\xddY\xa8"n\x157\xd0bk\xd7.i\x14*\xe5\xc4\x8b\xd4%~\x05z\xf6\n\xba\xb3{1Agl\xc4M\xda\xdd\xcb\x973J\xbb\x94\x8dU\x13\xe0G&\xfaj\xef\x7f\x86\'/S(.\xb0\xa5\xcb\x94*\xeee\x14m~\x04c5v\xf6\xd7\x13\xe3{\xd5Med**\xf3\xa8\xd5\x13\xe0%\x1d\xd9\xab"\rn\xe4\x1d\xc0oT\xf5\x95\x15S\x9dG\r\xaf\xc0J=\xdb\xd7Vbb\x84\xcd\xee!\xb7\xb3ZQy\xdc\x99\x89\xf0\x0cE\xd5\xde\xfd\xd8\x9a\x9dMAu\xa5\x17\x9dG\r\xaf\xc0\n#7\xae\xaf?yqE\x8a\xbb\xc9\xec\x94j\xa8\x95\xdb\xead\xee\xd5\xe1\xb7\xb0s\xb7!>\xb5\xd7W\x9dG\t]\xbe\xa4E\xed\xd5{Hi\xdb\x89\xad\xf7\x9c\x84&\xf8\xec\xb4j\xa8\x95\xdb\xcf^\xc1WV\xca\xf7S\x14&\xee%\xbb]^y\x14mD\xdb\xaa\xdd\xfa\xbb\x9f\xbf\x14H\x9dID\x15vb4B{rZ\xb4\x88i\xe2+\x96\xc8>#\xa8\xe5\xd8\nK\x9cE\x1b]\xba\xba\xb3\x117\x88\x9b\x85Oz\x92!\xb7\xadv\x02\xf3\xc8\xd1*Om(\xba\xb3~\xcdq`\xec\xed\xca\x18\xcfu6\n\xf3\xa8\xa3k\xb6\xd7W\x89\x13\xc3\x12\xbb\xa9\xb2O\xe6;`\xa8\xab\xce\xc8J\x88\xbbfZ\xbb7\xba\xb8\xa2G_jk\xb0\xd7\x9dE\x12\xa2m\x95\xd5\x9a\xdd\xea1\x9b\x90z\xf5\xd9;\xc4N\xb7l5\x17\x9dD\xea\x12\xbbeuh{\x91qA\x87\xef8\x84\xce\xcd\x86\xa2\x8b\xce"\x89Q+\xb5\xd7W|]\xc9\x89\x89\xee\xa0\xbd\x9b\x11E%\xce\xa0\x9bZZ\x8a\xf2Z\x82\xac\xb4\x97\x14x\xcb\xbf\xf2\x15w\xecE\x14\x9f:\x95\x13\xe0\xc4\xdeAo\xd9\x98\xf7\xfb\xa91\xceZ\xb9i=\x8a\xa2\x8b\xce\xa6\xe1\x04\xda\xab\xabCgZ\xb8\x90\xd6&\x93\xde\x8dB\x044\xf6\xab\xb1\x94Qy\xd4\xa8\x9bQutw\xba\x98\xa0CN\xa4\x98\x90\xd3\xd8l\xb62\x8a).q\x04\xaf\xc1q\x1f\xbe\x98\xa3D\xf7i\xfa\xf1#?{\xb6:\x8b\xcf \x9bIIj\xec\xed\xa8\xae[!\x84a\x0bH\x92U\xf1]\x92\xa2\xf3\xa8%D\xdaK\xab5;F\xb7rHzu\xbb7\x89\x0e\x1a\x7fX\xef/\xd2l\x95\x14^u\x10J\xed\x15\x17Vgeq`\xd0\x92\xea\xb9F\x0f\x01=\x86O\xf5\xc3e(\xbc\xea(\x95\x13h.\xae\xf7\xf6b^\xbc\x84D\xfedu\xdc\xb9<6R\x8b\xcfHJ\xec\xf5%\xab\xcfz\xe2\xc2\xb0\xa5\xedp\xaa\xb7]\x94\xa2\xf3\xd3\x12\xa5\xcb\xec\xe5\xd5\xa4Cn\xe4"*iJI\xde+R\x8a\xfc\xdf\xd7\x9e\xc2\x92b\xad;P\x92\xad\xec\xa5\xcb\x97\xc7B\xc5\xb9v\xe6P\xbf*\xf8\xae\\\xb9}\x84\xba\xb46\xf6\xe2\x83\x07\xfbG\xd7\xb8\xc10t\xdd\x94\xbf\xae;\x06\xe4\xe7\xa4-I\x113\xb3\x99\x9c\\\xd2)\xa9X\xb1m\x9c\xba\xba\xbb\xddLPa\xfb\x8d\x9f\x11\xe8\x96b#v\x05\xc5DZ\x8cY\xf5o\'\x8b\x08_\xb3\x93\xfc\xb5;\x16\xe7lX\xb1m\x80\xba\xc3\x9d\xbdqaQ\xbe\xd2\xf9P\x89\x13\xder\xae\xc0\x92b\xc8t\xda\x8bgn-B\x89\xe26\x0c4\x9b\x1bUv\xf5,X\xa1^U\x8brlX\xb1b\xc5\x8b\x16,X\xb1b\xc5\x8b\x16-\x8e\xdb\x1e\xc5\xb5\x18i\xd91\xef\xf7RdW{Nl\xa7\xbf\xf52\xb4.QJ\xa1lV\xc5nMS\x14\xe5\xa8I\n\xa1cD\x93m\xb9I9i\xb8\xb7&\xe5\x0b\x16,X\xb1b\xc5\xb9\x16-\xb5\xacX\xb1n}\x8d\xde\xa4\x84\x86\x9aQ\x1c\x8d \xc1N\xf2X\xe5\xc8\xb5\t)|S\x9c\x8b\x92qr\xf4-\xa8X\xb7.\x9f\x06[\x1d\x8bs\x08\xbe\xedq@oS3\xd7\xf9\x19D\xfe\x01\xbe\xd7\xb6*\x14*\xd2\xd8\xe2?\xc3\x14G\xf8\x08\xdcI"\xbb&\xe5\xfe\x10\xb1V\x9b\x8c\xc7\xf1\x11\x8b|M\xe2)9SeX\xb1b\xdb&\xfa\x8dJk9)wPLR\'\x8e\x98\xab\xb0lX\xb1b\xc5\xb6e\xf6N\x0b\t;^\xbe\x1f\xfd2W\xe1\x1a\xebw$T\xb9R\x851\xd4\xa9~q\xfe\xec&#|n*\xfc%^]y5/\xc9\xa9t\xc5Ly\xd8\xe6I\t\x94RjT\xce)"\xc5\x0c\xd2\xa8g\x17/\xcca\x18WS\xdc\xaa\x84\xf6\xdd\xb5z\x13i\'P\xa6:\x94;\n\xac\x94\xbe<\xd2\xb6/%\xc7c4\xad\x89*\xc8\xd2/\x8aP\xeeg\n\xd3+\xa8\x94\xcb\x92E3\x96H*MQ\x05_H\xb2Cz\x08\x8fnOi\x9a\xf4,\x8aU\xb2>\xad\xe53\x8a\xc1U+\rP\xb7"3\xa7%\xc9\x92)\t\x9a3\x95\x04O\x84\xeaR\x8aU\xaa\xe6o4\x91\x14\xd2B\x8e\'\x95$3\xde\x8a\x86S\x1d\'\x15f[7\x99\xaa\x93\xdd\x8a\xe5T\xa2IO\xab\x94F\x8a\xc7=\x18\xe4\xdeO\xd3\xb2GM>\xe2\xafU4\x1d\xc0W`\xedTkz\x9d\xd6}d\x04giv!\x95\xe9\x98Mc\'\x13)W)Dc3\x11+A#z%\x89\t}\xa6\x99\x08\xd7*\xee\x91\xf5p\xde\x85!=|\x0fW\x7f\x01\xd0\xe1\xc0\x96WZ\x88\xb0\x9e\x91>\xca\x8d\xcar6,\xed:H\x9f\xa5D^\xf1\xde\x9a?\xa5gR\x15B\xd2\xc5cEM\x07p3\x9b.\xf1\xd1\x15e$\x98\x88\x8f\xe2`X\x03V~\x91\xf9oD\xf7S\xf5\xe47\'\xa8\xceM\xad=~NI\xa0\xb1peTzu\r\x83\x84\xe0\xea\x8b\xef(\x8a\xd63\'\xbcF#\xdb\r;\nE\xcb)a\x99NOG<\xe4=&\x0c\xefC\x17\xb2\xc6F\x1b\t]\x0f\xfbD\x1c\xe6\xbdU\x1bzX\xa2=|\x0c\xd81\x17\xc0\xcd\xc1b\xaf\x81\r\x91~\x8d~K\x96\xb17\t\xfd\x01\xad\x8d\t=\x87(\xc9\xc3\x84\xc7\xaagv\x1d$&\x95\xc2\x9a\x9d\xc8ga\xab\xe0\x86v\x19\x11L\xe8\xd1W\xc4\xf6\xd7\xc4\xe8\xd5|J`\xd3\xe2S\x02\xfe\x03%\x982\xb5\xbb\x91\xb2&\x90\x1a\x8b\xe0Y\xad\xf13\xdd3&HV7\xf0\x8e\x89\x17\x08Tcj\xab\x92f\xbf\t\x89\xdd\x01\xff\x00\xed3pl%\xdd\xe9#\xd4\xe2/\xeb\xbc\xf4k\x80=\x9fi\xd6\xff\x00S\xa1g\xca$&\xfd\x1f\x17\x08UnVT(t>\xaf\xe8\\)\xde\x12\xfeD6E\xfa6.\x0c\xd7\xf5\xb9\xd6\xf24UJBQ\xccHWB\x8c\xc9\xfb\xc4\\*&|UL\x96\xcdlI\xc9\\t+\xb4\xe5\xb0]\x0e*Qw\rsp\xf7z\x04^\x8eW+\x85<V\xbe4J\xee!\xc2EW#\x12H\xae\xc5D\x99\x92\xe8\n\xf6\xafR\xb4\x94<\t\xac\xeeb!H(\x9c\x0b\'\x12\xecO\x12\xb1\x1aV/\x91\xd2/\x02\xaey\xed/\x89\xa1\xe6tHtm\xe0Q\x8dO\xba.\x03\xfd\t\xf8DF\xb5\x1c\xaeG\xe4%I3\xe8\xa5U\xff\x00\x9d\xff\x00\xa8\x9e\x8b\xe8F\xc3j\xfbQ"\xaf\xe0"\xc7d\x06v6jgK\x93\x9d^M\x8bb\xb1b\xdbo):\x84]Z\xcatn\xe0tO\xe0tJh\xa2x\x97o\x11g\x11\xb2+\x158\x15\x8a\xbc\r\'\x9e\xd7\x13EW\xc4\xe8\x90\xe8\x99\xc0\xd0o\rEp\x98\xf0a\xc4z\xa2"\xe56j}^\x0b\x05\xab\xd8\xc4(\xd4\xd9\xf43\xa9\xceQL\xe2\x8b>r\xd8\x94\xc9_eU\xbc\xba1\xcb\xdc\x87B\xff\x00\x94\xe8\\t^hY\xa9\xf7\x8a\xbd\x88V+x\x15\x8d\xfc%b8\xbb\xd7\xc4\xd1^\'G\xe6tM\xe0R\x13>R\x88\x89\xc8\xaa\xa1X\xacN\xf7\x15\xc2\xa0\'\xf9\x88z\xe4\x0f\xde!\xeb\x90~c\xd7!\x9e\xb6\xde\nz\xd7\xf08\xe9\xdc\xbf\xe5\xa9\xa5\x15{\x98ha\x0b\xf7S\xf1)\x03\x08\xfe\x1f\xc4\xa6\x0b\x17\xc5P\xa6\x08\xef\x9c\xf5?\xfa\x9f\x91L\t?{\xf9\x14\xc1!\xf8\xbc\xa6\x0f\x83\xf9\xfe\'E\x82\xa7\xddw\xfb\x8f\xf8v\xf73\xf3:xi\xf7\x10\xf5\xa6\'\xdci\xeb\xa9\xc1\xa7\xed\x0f\xfcL\x988\\X\xab\xf6\x04X\x98dh-\xff\x00\x1dD\xf4\x98V\x11\x11~\xd4U:\xd7\xc7h[\x1c\x94\xa2b\xa3\xa4o*_\x93Z)E.IJ\xd5\n\xaeII)^kp\xec\x9c\xf6/Q\xf5\x8d{|&g=<Zg+~E=\x9f\xdd\x14\xf2\x84S\xd2|\x86\x8cU\xf0:\x18\xcb\xc3\xf1)\x83\xc5\xe2\x850U\xf1yL\x15\xbf\xbc\xfc\x8a`\xf0\xfer\x90\xa0\xf9\x9a0\x13\xc1\x7f\x12\xf0\x13\xee\x9d4\x14\xfb\xa7\xad\xc3O\xba\x87\xed\x04N\xe4o\xe0W\xe9%\xe2\x87\xed\x17\xfe\xf0\xf5\xf8\xbf\xbcS\xd7"\xaf\xdeq\xeb\x11W\xc5M7\xa9g/\x81F;\x81F8\xe8\xd4\xe8\xfc\xce\x8f\xcc\xd0N&\x8bK4\xea\xe0iy\x1a~F\x9a\xf0+\x11\xdc\r7\x97\x88Z)FES\xa2\x89\xc0\xe8bp:\x07\x12n\x0e\xe5Q2\xd1\xb0\x1b\xda#\xb0\x95\\!\xdd\xb6\x11\xb0\xa0\xb5\x89\xd8\x85\x13gV\x98\xe8\xb8\xf7\x12qJ\x94\xa6;\x1d\x98\xefBmq+;q"j*\xfb\xbdeVh$\\!\x9d\xd0\xff\x00\x12m\x82\x8d\xee:4:3\xa3C\xa2i\xd13\x81\x92\xc8L\xf4\x8e\xfb)D+\xe6J\xbf\xea/_\xf8T\xbd;hn2\x9a\xdc\xae\xef\xc8[\xa1\xbc\xdc]M\'\xf1:X\x9f2\x9d,O\x99N\x92\'\xcc\xa7I\x17\x8a\x9aQx\xa9x\xbcT\xd1\x89\xe6tq\x17\xc0\xe8"\xfc\xaat\x118\x1e\xaf\x13\xe5=Z\'\xcaz\xbb\xf8\x1e\xae\xfe\x07B\xa7B\xa4\x96\x14\xbcP\x9e[\x13\xc4\xe9Y\xe6gFO\x04:y\xfd\xd2\xb1\xdd\xf2\x15\x89\x13\xe5*\xb1\x14\xb4R\xb0\x9e\xef\x13\xd5\xdd\xc4\xa6\r?\x13\xd5\x1b/\x12m\xc1X\xee\xc2\x98,4\xefd\xcfV\x85\xe0\xd3A\x8d\xefd\x8b$\xbb\x8e\xa5N\xe3NF\x9f\x91)9S\xb0\x9c\xe4M\xf9\xc6k\x11\n\'=DS\xb0\xae\xc2\xa5\xf9\x15\xc7.\xa2v\xc5\xd8.\xecR\x92\xe2Z\t[\x9d\xa2\xce\xe7\xd9\xebC\xeaZ\xaa\xe7Q\x1a6.\x11\x9d\x1b\xa9\xbdM\xe5\xd5S)l\x82\xbd\xcb\x94\xaa,\xd0\xcd\'s\xf17\x7f\x84\xea_#\xfd\xc5Q\xbe-\x99\xa0\xd9wM\x0e\x8a\x1f\xdd%(s\xed\x86g\xc1\x87\xdf\x92tlE\xecB\x8a\x9c\n\xa2/r\x1f\x91u4\x8d"J\xaa\xa5x\x94^%S%w\xa1\xef\x14\x9a\x15I\x92,[\xc5\x0c\xd5\xe2U\x86\x89D\xe4u\x16(X\xb1ly\xa9.\xe3\x7fyR\xc5\xb9\xdb\x9aE\x13dO\x97,]\x98\xe6\xd2r&\x84\xee\xb8\xd1\xb0R\xe2+\x97./[\x97\x96\xafp\xb1\x1d~\xae\xc3\xa4\xcboi(\xc9\x92\xbd\xa4\xd8\xa6\x8a\x9a<\xabr\xacX\xa7*\xc5Re\x11J\xa1cD\xb1b\xc6\x89b\xc5\xb1\xd8\xb1b\xfa\x85\xcd#5\x15E\xf6J\xb9T\x9a\xecyc\x9f5,K\x8ebJ\x8d\xde"5+\xbf\x98\xfb\t\xd4Q\x10\xd1\xf3*\xc2\x1c\xd9\x99\xd6%\x0b\x16,X\xb1b\xc5\x8b\x16,X\xb1b\xc5\xb9\x16,X\xb1b\xda\xd5\xca\xbd\x0c\xd9\xa9J\x15z\xf2\x11I\x17\xd8\xd3\xd4d\xd4\x11bW\xb0\xa2s6,X\xb1m\x9fr\xaeB\x8a\xab\xdcf\xb1|M\xc6s\x95yV(f\xcc\xf6\x8c\xe38\xd2/\xb5\x13k\\\xb9|Tj\xa9F\x1dHU\xcaU\xce\xe5\xd8\xb7*\xc5\x8c\xdcTw\x12\xa5K\x97\xda\x19\x8e\x91\xa4\x87\xb2Y\xa6\x8bJ\xc3N\'G\xe6t^ft\'\x16qg\x16qg\x16qg\x1e\xd1\xed\x16qF\xa9\xa0\xa6\x8f\x99\xa3\xe6h\xf9\x9a>|\xcd\xcb\x97.\\\xb9~v\xe6\x91u\xc7b\xda\xbd\xb1\xf5\xa1E*W\x15\xff\x00\xb8:r/\xfd\xc4_\x9e\xaf\xfd\x8c\xaf\xff\xc4\x00*\x10\x00\x03\x00\x02\x01\x04\x01\x03\x04\x03\x01\x01\x00\x00\x00\x00\x00\x01\x11\x10!1 AQaq0\x81\x91\xa1\xb1\xc1\xd1@P\xf0\xe1\xf1\xff\xda\x00\x08\x01\x01\x00\x01?!Q\xaa\x12A"\x1bx8\x8b\xa1\x07\xc1\xcc\xd8!E8\x0b\xa2\xe6\xac\x05X\x1e\xfa;\t\xa1\xdb\x8b\xe2~ \xda\xcaQ\x86\xc7f%\xe1\x88%\xa3\x8b\x14>\xc3hq\xc1t\\\\^\xb7\x97\xfeZ\xca\x11\x01c\xd8{\x8e K\xb8\xd0C\x1d\xcb\x10\xeb\x92\xb7\xe9\x0c\x9ag\xec=\xac\xf8\x1b\x1b\x04A\x07\xdc\xe4 %e\xdb\xde\xd1\x13\xcd\xd6\x7f\x85\xff\x00\xd1%\x82\xe2A1B~\xf0\x96\xd1\xa4*\x15D\x07\xd1\xc0LoX>E\x82\x0b\x81as7=\x1c]\x10M0\xa6\x82"T,\xd9\xcd\x9c<\x0f\n\x04\xd2\x17gc\x9b\x13\x1a \xfa\xc1p7\xd0\xf0\xde/\xfa{0\xa3\xdc\xf6\x8d\xe2o\x91\xa0\x98\x98\xca\x87LH\xe9f\xd0y\\\xfd\x0f\x13tl\xac=\xb16Q\x8dP\x9bh$/\x9eHO\xd3\xe7\xf9\x1a\x9f\xb0\x82\n(\x98 \x13\xa1\nlJ\\\x89\xafd>B\x05\xaa\xd8\x8f$NE\x89\x1b\xe4M\xe4G\x91\x04\x88\x1aR\x05\x0b\x11E\xb0\xbb\xc8\xe9\xb3\x89\xd9\x0b\x81\xc0Cl\xd3\xce+s\r\xf0\\\x1c?f=\x8e#\xe30>\x90\xc2y\xb9o\xa5\xff\x00\xa5\x88\x90\xd6\xcd\xf2\x16\x84B\xc4\xa1\xe4\xba4\x1cG\xf5\xccP<\xc3\r\xe3\xb0\xb1\xa1-\nD\xe4\xd0v\x99\xbd\x1f\x04\xde\xef{<~\x83\xd8\x82bA\x081\xecFy\x17\xb9\xad\xec\xa3\xe4\xd9\xc9\xc3\xb3O"\xa5\xc9\xa7\x91\xed\xc9\xe5\x1aw\x13\xe4U\xe4\x99\xc9\xaf\x91#\xe4O\x917\x91w\x91q\xba#\x9b\x15y7r((\x9b\x12w\x0b\xee%\x1e\xc2.D\xf0\x11\x1c\x17\xe4SC\x90\xe8H\x89\x08\xf2T\xf9\n|\x86]\xf8\x1a\x83hq=t2\xf4^\x87\xfe\x8a\x93X\x96\xf7\x8e\xe8w\x91\x17\xbc\x0bF\xc7r\xb0\xac\x0cQ\x86\xf0\xb3T!\xa67s\x90\xe3op\x9bv\x91r\xc7S\xe4%Z&\xb5\xff\x00~F \x82\x8a&\x12\xd8\x91\n\x03\xff\x00\x03\xf0\x1c\xa1\x04 \x9f\x03#\xf6\x1eS<tG\xd9\xa6F"\xca{\x8b\xc6\xcf`\xb5\xec\x95\xe0(?{=\xd0\xbe\xe3\xb7d\r\x9c\xb96\xf2SI\x9az]=\x96E\x0edH\xd8\xb6jl]\xe4K\xdcml\xbf"\xcd\xb1\x86\xe0q\xb4\\\xb7\xf4\x1f\xf9\xab\xa9\xa24\xbc\x8d\xef\x02\x816\x19v/,\xa6\xac\xdb$\xe2e\x1b\x1b\x1b.\x84\xc48\x0c1\xb3\x1e\x89Z<\x00\x9dbn\x90\xef\xe8?\xf6\x0f\xd2\x10\xf9\x13\x04\x14B\x0fA\xe2\xdflD\xc3g\xf4\x16\xa8 A\xc0 [\xe1h8\xf1\x84\xd9hW\x81\xb7\x81\x81\xcd0\xf6\x1e \xc8*\x0fxz\xb4\xc4\x90\x9b\xe1\x8d\xae\xc6\xbb\x98\xe7\x92s\xc3\x13\xee6\x8e\xf0$h\x93\x81\xba\xe4\xf2\x83\x97\x91\x95\x1b\xa5\x1c\xf0L6\xb1K\xfe\xb1\xb45L\xe4\xca\xd5\x8a\xd1=\x8f\x1e\xe0\xdd\xd6\xef\xc8\x82x\x1ca2\x94ll\xa5\xc1\xe9\x85\x84 \x87\xc0\xb3\x9c\x7f\xd7\xf2J+\x96[>\xfd\xbf\x91\xe9\xebC\x1e\x08 \x84\xcc\x8a*J\x12\x14\x08\x90/A7\x8e\xa0\xa1\x93&L 4\r\x0ca\x18$2M\x10\r_\xfe\x07\x86\xe0X\xa5\x97\xbf\xf2)\x9b\xbf\xa8\xd1S\x0b\xff\x00\x02\x847\x07\xb5\xc1\xaf\x81 i\x88z\x13\x16\x1b/\xfa\xdd\x03i\x9cX\xe9Cc\xfb\x98\xf10\xdd\x191\xb2\x8d\x8d\x9c\x14\xa3pa1k\xc5M\xf0j\xc8\xcaDxF\xd5\xf8\xd0\xddm\xf9\x18\xc4\xc1\x04 \xbf\x02|\x0b\xc0/\x10\x89(^\x01x\x85\xe0\x17\x80\xf5\x1e\xa3\xd4z\x8fP\xfcG\xac\xf4\x0f\xc5\x83\xd0z\x89\'\x13_\x04x#\xc0\xfdO\x89\xf1\x1f\xa9\xe9>#\x06\x81\x01\xa0j\x1a\x04\x84x-\xd8Kab\xd1\x1cH.\x86\xff\x00\xd5SA\xa1\x93rG\xb0a\x86\xde;dE)F\xca<\xb44\x1c\xc4\xdd\x17\xbfr\xdc|\x1abK\xfc\xec\xf7\x08\xcf\x9ei\x86>\x80\x84\xc0\x82HHA\x04D]`I$\x92I\x04\x13\xf40\xb5$jA\x03Q\xa7\x81\xaf\x81\xaf\x81\xa7\x81\xf8\x06\x9e\x04\xf8\x1a\xf8\x1a\xf8\xc1,I\xf4o\xfaK\x87\xc6-L\xaa\xf0\xa9k\xef\x80\xf6\x1cn\x80\x99rR\x94\xa3\xe3\xa0\x11\x0e!\x9c\x8dA\xbbx\x11\xa2\xe7\xed\x1c\xff\x00\x07j\xb5\x861\xe4B`\x84!\x08_Yb\x13\r\xa4AH40\xc3\x0c2\xc3,\xb2\xcb\x0c2\xf1\xa0\xb2\xbf\xe9o\xd0x\x8d\x87)g\xdeE\xd3V\x18\xe2"\x89\x94\xa3\xc5\xc3\r\xbc!L\r\x8b\x84lC\xbb9\xf9\x9c_\xb3;~\x16X\xf0k\xa0B\x10\xb2\xb1:\xe1\x08LTj<\xc1\x1b\x94\xc3\xc3\x1fK\x1a!\x08L\'\xd1\x7f\xea\x1fY\x841\xed\xc7\xa8\xd9k\x1f6\xa2e\x1b/H\xb0j65\xc8IR\xd8\xb9E\x8e\xfc\xb6\xdf\x1c\xfe\xa3\xd6yc\x1a\x1e\x13\x04!\x0b\x08_B\x13&Xx\x89\xee\x14\xf24\x0eB\x17O\x12w\x0cxc\x1fC\xff\x00\x05\x97\xfc\xe8.\x9d\x04\x9177\x7f\x0b\x85\xce\x981J7\xd0.\xf1F\xc7<w/]\xcf%4\x14\xf3I*\xcb\x02\x9b~\xfd\x0cc\xe8\x10\x84,\xa1u\xdcXa\xe2\xf2\x0c\xee\xe5\xc1|\xb62\x86\xca~\x89)_\xb9mK$\xfa\x161\x8f/\xfd\xbb\xc5\xa5\xe2\x9fbC\x14L~\x89D\x1b\x18O\x04Q\x86\xa2\x14\xa0\x83\xb9z\xc4\xa0\xe1\x12\x1f\xec\x7fc\xe7\xf4;\x1fWK\x18\xc7\x92\x10\xbe\x8d\x84\x06\x1e.Q\x8b\xb9;\xa0\x85\xd3h\xafR\xa7\xe0~\xf7\xf9?f\x8265K\x94$)\x1b\xca>\x87\xd0\xf2\xff\x00\xd9\xf09\x8df\xe8\xe0{\x01\xd3g"\xdcW\x8b\r0O\r\x85.\t\x94ln\xe0\x87\x1c+\x9f\x1b\xe0\xdb\xb4\xed\xfe\x17\xeb\xfa\x1f\x0e\x9d\x0cc\x18\xf0B\x17J\xeb\xb4rg\x7f\x12\xbb\xc1kTV\xff\x00x\x8a\x97\xe9\x166_#\x9d\xff\x00\x0b\x0f\x90\xb4\x12\x87\xef\x8f\x94:)\xbaR3I~\x93\xfa\xcf\xfd3Ds\x13\xa6\xd4\xd9]\r\x8e~g3A\xb0Zt\x8e\xc2.\x86\xc4\xeenf\xb6M\xb5\xe9\x87\x87D\x9f<\xdf\xe3\x12\xb9xc\xe8\x16\x0b\xe9\xaf\x94pQ\x1b\x12\xfe\x0b\xfc=\xb2\xed\n\xb6\xed\x1e\xd2\x89H6Y\x14c\xab\xb4\xbb\x88\x01)\xde:\x0c}\x17\x14\xbf\xe0_\xf3o\xd0m\x1a\xc837g\xb1\x86\xf6jm\x96\x89\xe0\xcb\x1b\x1d\xc4&S\x96\x0c-\x1e\r\xa3\x84\xc6\xcc"\x8fq_\x03b}\x0f\x0cc\xc2\x16K\xe8\x9c\x98\xce\x9dm\x8dTb\xc4\xa3\xd4\xdc5\xb1\xfe1\xb9\xad\x89P\x949\x93h\xe7%\xd1\xac6\xe6\xf4^\x8b\xfe\xc7\xb1\xa8\xd4\xc9\x87\x9c-\x06\xf1\xa2\xce\x8b\x04\xeb\xc1\xec\\\x88o\x0b\x83\x9ac\xef\xb6z\x18G?\x95C^\xf4ION\x13\xe8c\x18\xf0\xb0B\x11:\x9e\n\x08]\t4\x06\r\x88\xe3\xa0\xd7\x82l]x\xe8\xd3\x94iw\x14\x02\xd5\xbc\xb3x\xa5/\xfa[\xd1~\xb3z\xc1\xa4\xaf\xf0\x9b75\xa8\xe8Ox\xf0\xc1\x0fb\xe8\xe1\xd1\xae\x1b\xd1M\x857\xc1M\x1d\xa4\xe9\xc4O\x1dF\xbc\xa5\xff\x00\xb0\xf5\x0e\xc2\xc5\xe8c\x1e\x16\x08B\xfa\x08&\x1d\x03n\xb16%\xbf\x18!\xc0_\x82w\x13x|\r|\x16F\xad\xb8\x1c\xc4\xb2O\r\xa3e\xcd\xc5/\xd1\xb8\xb9\xbf\xe4R\x97\xae\xf4<G9\xccy\xf2E\x81\x87\xcf\xa9\xa6C\xc4\x85\xd8\x98\x85Q\t\xef\x04\xc5\xf8\x14\xf5\xaa,;\xb57\xdd\xf3\xfaC\xe3Z\x13\x16.X\xc7\x85\x82\x10\xbe\x89\n\x04\x83sB/\x82\xc2\x7f\xc8F\xad7\xd8\xd9F\x13g\x13\x99\xbe\x16"r\nT![\xcd\xbe\x9b\xfe\xce\xe2\t\x9c\xc4P\x9d\xdb&\x1a\xda\x17\x8c4X>\nQ\x94\xa2xR\xb3p\x85\xa2\xb4~a\x07\x0f\xd8#\xb4\xe6\xd3\xe1i\x0e\x8f\'D.\xa6<,\x10\x85\xf4\x1b\x10\xb2g9\x1b\xd1GG!\x06L]\x81\xa1E9\x9a\x0bQ\xcc\x7f\x061\x03]\'\x8d;\x9b\xd1K\x9b\x9aQ\xbc\xdf\xf4\xf0D\x93\xc5\xa6\xd7\x11#\x13\xa4\xd1\x07\x16\x16Xv-\x84Y\t\xd4R\xaf\x9e\nh4e\x19B^Y\xe4\xc5g\xb4\xc7<\x9b\xf7\x02XB/S\xc2\x10\x84.\xb63lw\x8a\xa7\xac\x0b!\xbb\xc8\xd7\xe4Z=\x8f\xcah\x10\xe7\xbc6\x14b\xde\xcc\x8b\xf4\x14\xad\xef\x1e\x9c\xdc\xdc^\x8aR\x8f/\xfdH\xd6\xcao\x03\xdd\xbf\x03\xde]"\x8cP\xe7\x02\x8fa\xe0LN\x9d\xa2p\xd8cQ\xb1\xaaE\x9f`\xff\x002\x12!}\x18_\xbf\xf0{\x85`\x84.\x97\x8a$!\x08_A0R\xf9\xccD\xf4=\x87\xe1\x14hhJ\xbd\x14\xc4\xac\xe0z\x969\r\x80G\xacU!\xaci\xdc\xdc\\\xd2\xe2\xf4\xbf\xf2o\xd7m\x1bq\xed \xd0\xf2\xdd\x1e\x8fL\xd3\x83I\xb8\x9e\x8a6\\ xl&9\xbb\x17\x07\x01\xb8\x11*.\xba\xee\x08z\x97g\xb6\xe2\x7f\xa7\xea|R\xc1e\x17\xa1\xe5!\x08B\xfa\r\x08&+&h\xd0\xe4-\xae\xe8Q\xec\x83Xh/\xa1q\xdd\x1d\xd1M|1&+kyg\xd1K\x8a^\xab\xf5n/\xf9O\xa3\x9c\xe7\x1e\xd4{c\xd6zF\xa7\xc1~\xc1\xd9*\x8a\t\x04\xaci\xb1\t\xec\xa3\x14O>\xc5\x8cm\x8cZ)|\xbc\x10\xd6[g\xc0\x96\xbfs\xd8\xccX]O(B\x17\xd1cB\x0b\x8a\xe7(h\xbe\xc5\xd8\x9e\xfd\x8d\xef\xd0\xe8\x82\x9e\x1d\x84\xb8\xb3A\xa8\xb2?\x83\x90\x90\x13\xbe\x1a,\xd2\xf5\xdf\xf0)JR\xfdz^\xab\x88,\x1b\xa6\x97\x89\xea=%\xee/\x08\xa9$P\xf7\tV*\x98\x9d\xc1\xb6=4\xcb\xd9\x1a\xecv\xa8j(\xda\xa1\xe6E6\xc5\x9d\xdd\xfao\xfeB\x11p\xb3zVW\xd2hA0H\xcdoF\xbd\x0b\xc1\xbd\xb2\xaaG\xdcj9\xcc\xd5\x9f\xa8|\x9c0)<\xa7\x8a\x96\xa5pW\xa2\xe2\xf4_\xf0o\xf8\xd7\xabQ\xc84b\x87\xa3\xbfY\xe9=c96/\x93\x1c\xfd\x1a\xf9\x86\x84Q\x94m\x9c\xb1\\\x9a\x04\xe8\x88r\xfa\xa0\x84\xbc$5\x85l\xbd\xd5\xff\x00G\xdc\x87\xfe\xfb!a\x17\x0b\xa5\x94_V\x08 \x85#\x94\xba\xd0s\x1a\\\x1d\x83\x98\xf5\xc5\xa0}\xb1\xb9\x1a\x8d\xfb\x1b\xde\x1a\x8dp\xf5\xd8H\xc8B`N\x8c\xb8\xbf\xeboCk1]\xe8\xb6\xf7\xd7_\xbe\xa1\xfe\x076|h\xf0\x88\xb6@\xd4\xd9\xce<\xa9\xf6\x13-\xbd\x0cS=\xe0@w\xb4|\x7f\xf5\x89\xa8+\x0b\x0b\x17\xa9!t\xaf\xa0\xd0\x82`\x81\x95OF\xbd\x079b\xce\xf2\xeb,\xf8\x18\xe6\xc1\x8a\\h\xaa\x05-7\x87YqJ\\\xdf\xf5\xaf\xa3\x9b\x0c\xd5\xe7%\xf3~\xbc\x1e\x93\xd0sh\xbfa\x88H/\x03\xbc\x1cs)\\$\xc7\x07\xb0y\xe8Y\xb5\xe9\xff\x00}\xb1\xeeBR\xbfw\xfd\xe0\xa9\xf7\x04,\'\x85\xd2\xf0\x91>\xb2\x08!p\xe4)\xa0{\xf7\x07\x0f\xd8\xd6c\xd2l\x1bxXa\xae-\x18\xe4;\xd7l=(\xc0\xa8e/\xfb\x1dF\x86E2N\x04 \xd1L^\xbe\x83\xaaz\x0eq\x8bpi\xfc\x86\xadpk\x1e\xe3\xcc\x1f\x11\xb4KL\xb4j0<4\xb6\xff\x00\x05\xbd/\xc1\xcb\xde\xd8\xb0\xb3zYp\xbe\xb3\x13\x04,\x17L\xd6\xd0{5\x13;\xba@\x98llo\xc6W \xe52\x88\x94\x95\xc8\\\xdc_\xf5\xda\x9e(9\xf0\x81\xe5\x084<*b\xf5e}\'\xa4\xafj\x9d\xc8\x8f\xe4\xd7\xc9\xbcC\xfd\x82\xb4]\x8d\x1eBZ\xfb\x9b\xfaG\xdci~\xac\xf4\xb0\xbf\xef\xd7\x08]\x08\xa5\xc5\xfa\x13\xe910Rf\x8eM\x14Z\x13p\x87\x9az\xc5\xad\x8e0\xda\xf20\xd8\xfb\x94\xf8Q\xe8uH\xcf\x19Ixl\xba/\xf97\xe8\xdf\xa8\xde\x8d\x06\xc2\xe9a\x87\x98B\x0cS\xa2/Y\xcf\xa2{ j\x9b\xa4\xdf:\x10\x0bE7"*Z\x1e\x0b\x13oj\xf4\xbf\xad\x1e_V\xff\x00\xef\xcfB}\x08\xa5\xff\x00\x11\x88&\x0b\xc5\x96\x85\x16\x85\x82\xe3\xa7\x01\xb4{\r\xeccc\xe3\x07\xac\xec_\xcc-N\xect9\xff\x00&\xfd{\xf4^,\x1b\xb17\xb1\x8d\xe0\xba\x1a\x1a\x1a\x11\x07\x89\xd0I19\x1c\xdb\xd1{\xdc\xb5\xb2\xfb\x14\xf8}\x8d\xd2\x8ct\xbc\x0f\xfe\xf9\xc3\xbc\xe9\x7fj\xf7\xfc\x1fb\x91JR\x94\xa5)JR\x97\xfc\x07\x92\x8aYB\x89\x94Z\x1e\x0c\x15\xb9\x86\xf40\xc3!\xa0\xc6\xc6\x18\xc6=*\xe9\x9c\x84\xa8\xb8h\xb2\xbf\xd76\x8ec\x90\xfc\xc2\x8f.\x1d0c\x86\x08\x1e\x1aY\xb2\x0b\xb4)"\x1c\x0f\x02\xd8\xddF\xd8\xad\t\xfe\xcf\xff\x00p\x94;\xff\x00\x0bO\xd0\xa8r\xd4]w\xd7M>_\xe0<\x97\x14)\x1a\xf48\xc0\xe6D\x1e\x13o\x06\xc66R\xe4\xd5\xbf\x06\xbe\xf0\xb5\x1b\xe4\xe0*s\xfe\xc3F)\xb9\xaa\xf00\xd8\xde\x11JR\xe1\x9cH\t\x13\\\x9eH\x95\n\xb8\xd1\xa9k/\xa7\xad\x9cG\x9fa\xbe\xfb\x14\xedZ\xc2\xef\xa2\xa4\x87\xe4\xbf\xfd\xcd\xf3>]\x03\xe4|\x8f\x91\xf2\xc7\xe4|\xba\xa7\xd2xx \xba\xc5\xc6\x0bh7j5\x89\xf9\x18o\x06\xd8\xc3\x1e\x1e\x0c~\xf6\xc5v\x88b\xe0\xb7Z\xff\x00P\xcd\x07)\x17(\xc7\x86\xfe\x83\x14#\x17\x9fxw\x17\x01\xaf\x82E]\x83\xa0hAj\x93\x85\xa2\x7f\xae!\xcf\xf0\xcd\x0b?\xd1\xff\x00\x9a\xfa\x1f\xfe\x7f\xe3v\xc7\x86&u3V\x84\x9a\ry.9\x18\xf9\x1a\x8c|\x0cxc\x19\xb2%<\x91\xce\xf2\rWR\xff\x00P\xda\xc1\xb4\xfbP\xa9\x94\xa3\x17E(\xe0\x80\x95\xdc\xf7\x12\xbb(\xce\xd4jDM\x05\x98\xd6\n\xf3\x13\x10\x9f|\xb3\xaf\x15\xc4\xff\x00A\x8c\xe9\x7f\xcb\xf6\x87\xcc\xf9d\xf9c\xf3\x17\xbfT>x\x84&!\x08Bu1\xf4\x14L\xde\xa7\x02\x9cG0<\x18\xfaF<?b&\xcb\x14\xed\xe3\xb2\xff\x00\\\xf1\x1c\xe7!\x17^zU\x14)J9D\xc8\xd3\xderl\xe4\xd8\xa8\x10\x9a8I\xa1i\x13f\x82\xe8\xb7\x08\xce\xe5\xf1U\n\xfd%\xc7\xea\xfc\x8e\xa9k>;\x1f"\x84\xc5\x89\x84\xe5\x88\xac\x8b/\x15\xf5\xd8\xf2\xc5\x13\x15\\)\xb4*m.\x063\x90\xc61\xe1\x8ccGI\xb5oh\xe6E\xe6\xcd\x02\xda\xca\xfa\xb7\xfc\xddL\xd6A\x84J\xe8+1B\x92&{\xcd\x0fg.\xca]\x9e\x86q\xe8\x82Dq1\xdcd\x9f{a\\0\xacG\xf4u\xff\x00\xd7x9\xc8\x8a( \x82x\xa2e\xca\xfa\xb7\r\x8d\x94\xa3\xc1E\xc3t\xd7\xa1\xe1\rj\xec\xc6\xe8\xd8\xd8\xd8\xcb\x87\xd0\xc6,O\x1d\xca\xb0\xd9\x7f\xacf\xa3Yx\xa3\xbd\xf2.\x88\x88\xc5\x1e\xe2wg&\xce}\x8f\x0fvFh\x99\x10$jv;\x8cC\xcb\xe0%\x1f\n\x0eQ\xb8,\xf6\x9f\xa7?a\x976R\x7f\x0f\xfe?#\xc8A\x04\xc6\x18L]w\xa0R\x94\xb9)p\xd8\xd8\xd8\xf2-\x10L\x15\np4hM\xb2[Cm\xdd\x0c1\xb1\xe2\xf4\xa7\x18\xf6\x8fk\x15!\x0e\xe3T\xbe\x88\x05\xe8\x14\xa5)J\\_\xf0iK\x96\xd6^\x8f\xc2,0XN8\xa4\x81\x13\xde{\xcfh\xd6\xd0\xe7\xac\xe3\xd1"d\x84\x986&5\x1eSW\xd8Eo\xcc\xfd\xa9\x7f\xe8\x8f6\xdf}\x7f\xcfcxQ11\x86\x1b\x04\xc5\xfe\x1a>\x0c\xb2\xf0\x19Et\x1a\x17Mz\x1b\xf4\x18\xcf\x03c{\x1f\xd1j\x17\x82F\xe1\xad\x7f\x88\xff\x00\x86\x14\xa5)JR\x97\xa8\x14\xb9lxQO\r\xa3k9\xc9\xae\xf3\xa1\xbc \xb8\xa9\'\x8f\xdcr\x14\x1e\xa3\x1b\x83D;\x1ap\xc0\xa5(\x91\xc7\xb8\x84R\xd3\x83\x9fChU\xfc\'\xf06R\x89\x8d\xd0P\x85\xd2\xd8\xc3\x0c8>}.\xfd\x8f\x90\xb1*\xee*\xc2y\x04\xa2,>1bZ\tb\xf4sA\xf3\xd4\xfa,%3\xda5\xa8A\xd8\x9f"W\xdcT+\xc7N\x93\x94H\x94J/\xa2\xc8e\x86\xfd#\xf3#\xc9N\xf8\x15\x97\r\x92\x18\xde[\x12F\xb6@\'\xf4\r(9&{\x0f~]A\xb5\x1a\x8fY,\x92)J\x84F\xee\xb1b\x1f\xef=\xf8\xed\xf8Z\xfb\rj\xb2\xb7\xe5\xe1J&&0\xd8!\x0b7/\x03A>\x88\xb6\xc2lX\xbd\xcf(c\'\x82\xcf$^a\x1d\xc5qx\x97\x04rb\x1c\xe8\xeb\xd0\xdf\x0cn2\xdc\x83D\'@@LcX<\x90\xee\x82\xdfqcAD\xbb\x9e\xd3\xe4O\x91\xa2\xee|\xc5]\xcfaB\xa2+\x02\xc1K\x86\x86\x8a\xc1\x89\x1eH\xe2)\xe7\x15\xc3R\xe1\x91\xb8\xdcP\xa6\xb2i\x92c\xe2XfpC\x07\xb8\xf7\x1e\xd1\xec5\x8e\x02&\x92Y\x0e0a\xbd\x94I\xf76vf?\x93\xf9\xc7\x96\x97\xea\xd1\xe8\ro\xea\x18\xa5\x10\x86\xe8HXO4X\x18l\x1c1\x08\x14\xcb\x10\xc1\xb9\x149|\x8d\xf8\x0bHi\xe4\xee\',\xfb\x88\xbc\xfbj\xd2B\x11\x82\xcd\xcbo!\xb3a\x8a\x889\x1cv0m\x85\xdb\x1bU\xb1\x89TX\xbf\x03\xf0G\xa8h\x16\xbb\x15\xe3\xa28\x11\x90\xa4\xe4s\xb4\x1d\xaa\x17\x16\xc4\x89\rWrND\xf9\x11BG\xc8\x8e\t(l\r\x9d\x8f\xc6\xd1\x85\x15\xd3\xd6\xa3\xf5\xcf\xa0\xe6)Q\xe8=\xc2\xa3\xf4\x1cM\xa5\xb31\xa9\x95M\xc7\xb2\x03\x82$\x8fa\xef-\xdc\xa0\xa9\xc3\xac\xac\xf0\xa4(\xde\x14\xb83\xcc\n;\x9b\x94|\x13m\xfe\xdf\x91\x1a\x93Q\xaf\xfb\xd8b\xe1\x0b\x04\xe8\xcb\x0b\xa1c\x92\xc2\x04\x92( \x91\x92B$\x1a\xdb\x12\xea" \xe4\x8d\x84h\xaf-\xb4.\x9c\xc62\xaa\x18\x87\x82w\xde\xff\x00O\xd8z\x97\x13Ds\x86\xce]\x9d\xe3\xa3-\xa1\x14\xf4\x85TD\x18t\xf6@\x96 H#\x0f\xb1/\xb0\xfcC\xf1\x1e\xa1\x11\xad\x08\x91\xad\xacDy6\x1eI\xa7\x91\xf7\x93aN\xe0{\x82\x8b\xb8\xda\x15\x87e\x16\x83\xcdb\x0b\x14\xc6\x8dfatXcC\xa8\xc1\t\x82\x0b3K\xc4\xdb\x85\xa0\xdc\x9b\x19=\xfe\x8e\t"]\xceS\xdas\xe0=\xce\x1d\x10\xecz:\x1bJ\x17\x06)JS\xc2\xa0\x99,UP\xfcW\xfe\'\xf6\x12\xd5\xff\x00\xa9\xfeK\x84$%\x90L\t\t\x10\x84!0\x84\x1a4\x1aq\x96\x0e\x0fg\x04n\x18\xd3\xb1k\x90\xb5\xdcp\x16A\xf2;\xc9Q\xd9\xdcn\xd6\xbc>\x7f\xb1\xbf.\xff\x00\xd1\xbb\xb1C\xc3n\x0f&\x84\xc6\xeb\x12\x8e\xccX\x86(\xd6.\x8a65\xb64\xb9\x8e\xc6\x9c\xd7\xb0\x98O\xe0\xa7a4\'\x06;\x0f>\x0f\x15\x8avd8\xa7"\x98\xbf\x81\xcb\xdc{\xc3\x17d\xcf\x00\xf0\x05\x1c\x19HPb\x05\xa3\xc2!\xdb\xa7ND\x18\x85\x8d\x14\x12\r\x18\xb6XW`\xae\xc2]\x89\x0b?tl7\x0b\xa1\xe1\xd6\xcb\xb0\xa9\x8b\xc9\xda\x07r$r\xec\xb7q\xae=\xf6z\xc9\xf6\xe8\xc6\'\x05\x1b.\xca\\R\x9a\x17\xfe\xbf\xf4L\xf1\x8aE}\xa3\xff\x00\x03\xf9/\xd6],N&\x13\r\x1a3*\x8a\xe9\xedb\x94\xa7\x12\xcb\xa1\x94\tcT\x1f\xd8Hn\xcan\xdd\xbfC\xc6\xdd\xa3;\xd9Tr\xc3_\xbb\xf2\xfdxc\x9f\xb8\xfc=\xd1\x0c\x9a\xff\x00\x85\xc2&\xd8\xc1\xbbd4%&\x84\x8c\xa3\xd8\x9c\x8f\xad\x1b,Q\xae\xd8}lC|\x08a(\xa8\xa8\xa0\xa3\xa1\x18\x08\xcd\xf9\x8dO\x12\xa0T\x82|\x0b\xc0%\x04;\x0b\xec\x10\x84!d<\x81p\xa5\x10`\x99)\xbe)\x10\x94H\x98B\x88\xa1\x17\x8cX\xe643\xb3\x17\xba(\xb87\xe2\x15\xb11\xc0\xe5\x98\xf5\xf4Z\xb4U\xe2\xe1\x88o\xa1\xbb>\xed\x9fsS\xda\xc7\x9d\x08Ko\xdcY\xf7\x12\xb8G\x96\xd8A\xd6\xcf\x18\xa1v\x11Z\xa45\x906; \xb8&\xe2\t\xf6\xa3\xf0a\xbb 6%P\xa4|#e\xe9\x12\xe2\xe2{\x073\x144\x17\xd3\xa1n\xdd\x18\x90\xcc\x97\xf4\x15&i\xc2*E\xb0\xf5i\x0b-\x17\x03\xf4!\xd8R\xc5\x1b\xe4\xc9a\xc9\x89\xf6\x14\x8e\xc0H-\x14\xa1+\xb0\xa5\xd8K\xb0\x90\x90\'\xc1\x0e\xc7\xa7\n\xcfN\x11\xe0^!\x04\x90%\xf0$\xf0O\x81\xfab\xb3\x13\x13\xe8\x08xDH\xa8E\x04\x84\x92H\x94\x91\xc5\xb8\xa4\xc5\xa2LQ\x9d\x841\xae\xc7`;!k\x0e\xaf\xb0chxC\xedN\xe1\x0f\xd0en\x85\xc0l\xa2c\xd2\rS\xca\x10\x84I\xa4\xb4\x8b6&\xfe\xef\xf4L\xe2r\xe4\x97\xe9\xfc\x16\'\x9f\x02n\x07\x1clkr5\x08E\x1a\x86\x98\x910\x1e\xf4\x0b\x8bC\x9d\xef\x19\x13\xa0\x8f\xd5\x88\xcb\x7f#\xed}\x81\xb9\x97\x88\xcb\xc8v\xc3C\x0c\xbc\xbd\xe1\x0c\x10\x1e\x19\xe0\x10\xec!v\x12X\xeei>1\xdf\xec~#\xb1\x08Mc\xa4\x8c H$\xf0 \xb3\x96L\x91dHR\x12\x16\x0c\xb0\x10A#\xc1z.e\x1eb\xcb\x0f\x05\x18\xa8\x98\xa1\xb9E\r\xc8\xdb\x02\x1a\xa2)\xe4\x1b\x19JQ\xa3\xec6\xf6; \xc7a\x9e\xc3h+\xb0\xec\x16!\xce\xb0\xd3X\xe0y\xa7\x8f\x90Ss\xda\xdf\xc9\xff\x00\xc3\x1e\xb3iH\xbe\x042\x94h\xf2(I\x85\xc2\xd1K\xd6\xc3F\xd8\xccv60\x84"\x1c\x18\xd2 @\xa1\x11\x04\x89Dx;\x9c\x1e\xdb\xd9\x01\x12\x1d!C\x9e\x1a\x1b\x15\xdc$$\xf7\x0b\xc8$\x12\x89\x04\x9d\r\x06\x935\x93\xeeG\xb8\x97\xe4]\x08}\xc4>\xe4\xf9\x12\xf9\x12y\x12\xf9>g\xc8\xb0\x8b/\x1aC\xe5\xd2l\xb0\xc3hd7\x87\x83k\xc9\x02Q)#O$\x92U\x0f\xb2\xcct\x8co%\xc2\x8c0J\xc4.\x1b9B\x0e\x0e\xca;\x08\x97\xe0y\xd1\xcd\x83]\xb2\x1e4\x07\x8a\xc7\x91\x9bJhG\xcb<\x03Qy\x12I6\xc5\x1c\xe4\x95\xe2\x97\xa2\xf5\x87B\x0c\xa1f\xd0\xc3\r\x94L\x81\x19oi.\xe2|\x89\x12\x84\xf7\x08]\xc5w\x08\x07\xc6\n\x8d\x8b\x16\xc5y\x1e\xf0\xe7\x91\x96\x07\r\xc2\x98\x98\xc3\t\x8e\rCRc\xbc\xd2\x16v\xb1\x89%\x89`L*\\W\x93\xd8<\x9a/\xdc\x8f"\xf6=\x82\xf6>c\xf7\x1f\xb0\xc2<\x8c\x1a\xf9\x10\x8f(\xf2\x8fq\x1eD\xae\xe2S\xe4[\xee1\xdcK\xee#\xb8\x86*h\x8e\xd1\x15\xb18J\xfb\xf4f\xd0\xed\x89\rbe\xc5\xe9\xe5\x90\xe3\x965m+\xf47\x9f\xb0\x83f\x9d6\xe1\x0c~\x0bg\xcbW\xf2\xcd\xd0\x88\x94\x82\xf0\xf0^\x12\xa6\xd0\x98M\xec\xef\'\xbb\nYD\xfa\xa1}\xe2\x820Th\xd0\xda\x19\r\xa1\xa0\xf00\xe1\xf0\\\x1f\xc2tc\xc9\xe4\x8e\xc6\xce\xf0\xc0\x1b\x1d\xe8C\xc9.S\x15\x80(\xa4\xad\x08XT\x88%\xecB\xf9)\x0c-\x8b\x1e\t\xf1\x96\x8b\xcdz\x84\xc3 \xfc>\xdc\rey\x18\x84<\xa1\xbd\xc6\xbe\xe6\x9d\xc8\xf7\xc4\x97\xdct\xb4\xc6\xa1N\xe2\x7f%\xa7#\x9d\xcb\x06=\xc3\x1b\xb1\xe2\x1e\xe65>D&\xb6E\xb1\xba(\x8a\xec\xf0g\xdb\x17"\xdfs\xbe\t\x18\xd2d\x08\x90\x85\x10\xa5.D\xce\xe2e\x13+\xbe\t~\xe7\xd8IhK{\x8fq\xc8\xda\xc0\xcf\r\x90\xe1\x14\x81\xf6\xf6\x8b\xf8\x1d\xc4[\xef\x89\x0cI\x85\xe8\x86\xb0*\x1a\'\x13\x17\xe4\xf9\x1f1\xfb\x8f\xdcJ\xc5\r\xc6\x1a\x89\x11\xe3\x01\x1e\x04\xf8\x1ax\x18\r\x83\xd0=,$/Q\xe8\x17\x88\xf4b\x81\x08h\x86\x84y#\xc9\xec=\x87\xb8\x8f$y!\xf7,:\xc12\xe1f\x1a!\x06\xb3\xc2\x86\xb7\x07\x01\xad\x9f\x11\xd3CLG\x81\x97,zxx%B\x1d\xc60\xee\n\xadF=1\x8f\'\x9a\xe3\xda&\x87\xae\xc3\x05\xf2\xd9\xdd\x13\xbc\x86\xf6\x1b\xe2c\xee\xa8\xb9\xba\x15m\x9d\xc0\x97\x93\x8b\x19\xd9\x0eOh\xe6\x8eA\x9d\xccK\xee,\xe5\x82\xe1D\xc5XLC~\xea\x7f\x02\x14\xff\x00\x9d\x87\xde\x06%f\xd1\xa8Ho\xca\x1e\x06\xa9\xf00\xd3g47\xbe\x15>\xe7\xb4Ae6\x87x%\n\xd1e!\xb0\xd8l0r\xe4],O\x11\x86Z\x10@\xc3\xd8?0\xfc\x87\xbcb\x88\x88\xf0M\x06\x83\x10\xf2@,d\xe10N\xee3\xdct\xf90\x11!@\x81\x02q8\x8a\xc3\xf0\x10\x8a i\x8bJ]\x0cHh$kCW\xca+\xc0\xf5\xd8xpX\x8b\xb0\xb6\xb5\x8ch[\xcb\xf6\x13\xec\xe3\xc6\xae\x1a\xc4\x7f\xf0\xc5==\x8a\x1c\nMA\x81\xed\n\xf6r\xe9\x1c+EltI\xad\x1e5\x1e\xedM\xa34@C\x16\xb4\x10\xec\x8ay\x1cj\x1dj\x8ftc\x1a\xc2\x88\xe0\xc5\x92\x85\xc11\x08F\xfdm\xa7\xe5\xfd\x0fL\xa2\x1d\xc64hj\xd1\xeb\x1aa\xaf$Q|A\xf1\x08\tC\xd6\x04\xf9#\xc9\xa0\x98\xde\t\n\x9e\x18y\xa3.\x13C,ca\x83\x07\xe6\x1eH~C\xca\x1f\x90~c\xc8\x18\xd9\xb3x\x80\xaa\xfa1\xb1\x16\xc9\xc2^\x01x\x89 \x88\xd1Q$\x90H\xd5\x96\x1c\t\x8d\x02\x8d!\xce\xdaD\xc0E\xce\x06\x08\xbc\x0bW\xfb\x1a\xed\xfc\x88\xd3\xf7\t^\xd0]\xd9|\x16z\xd9\xc4(1\x08\xf6\x89\x89<\xfd\x84\x1a\xa8\xe3\x11<\x0f\x91\xba\xc8\xa0\x9a\x1b\xdf\xd8Y\xe5\xf094\x86\xbdS\x85\xfb\x04\xbd\xa4\xba\x16\xdbc\x90\x05a\x9bP\xd2\xb5!\x11\xff\x00\xa9D_\xacM\xa4\xaf\x91%Y\xb1d\xbb\xc0q\xb3g)\xc1KI\x05gz\x91\x8b\x02\x1b\x0cl]\x1d\xeaw\xf9W_\xb3\'\xb73\x02\xd9\x06v\xc4<\xe4\xc4C\\\xc2\x1f(l\x9a\xf6dhh,\x9b\xd1\xacoG,)K\x87\x86\x89\x8aR\xe1\x8c\x84 \xc6\xb3\xbc\xa7\x94\xd2%\x9c\x13a\x1aC \xe9^\xcc`1\xf6\x18&,\xb2\xbc\x97\xe7\nR\x94\xb9\xa5\x112d\x0eE\xbbB\x9d\x06\x0e\x90Cm\x8b\xa3R\xa1\xa8>(\xe5I\xcfl*\x9fd\'\xb5|\x1d\xc6\xc6\x17\x83\xbe\xbe\xc2\xeel*\x8d\xbc\x0c_u9\x95G\xbc\x90\xd3\x97\xd8q)\xa0\xddW\xd8\x94QZ~\xce\xf81\xae\xb6U\xd0\xc2G\x05\xeca\xf5\t\xaa\xedK\x80k6\x10 H\xec\x1a\xf9}\xc55\x14=1;16\x10\xb1\x9bvU\xf6\x1c\x8fo\xb5\x11\x92\xe6\xd0\xf9\xb7\'\xe1\x8d\xd0\xd1x?d\xa1b\xfb\x89\xcd\x06\xa6\xf5\x9cOi\xe07\xa5\xfb\x8a\x81H\x9f\xf3\xf2B\x9c\x17\xe7B|\xe5\x93\xa2T2)\xe3l\x86\x81\xc0\xee9\xc0\xca\xb8&Q\xbe\x81p\xde\x14\xbd\x0f\x0f\nO\x02\x1axLA\xd1\xa0\xb8\xd10\x93-\xa56D2=p"\xba\xb2\x8f\xa5\xf6h\xd8\xb1\x04:Qck\xf0\x8fp}\x82,\xf0\x0ci\xa0D\x90\x976\x0eS6\xfd\xf0\xa1\xda\x98\xaf\xd0kO\xb9\x9e\xcfb\x1f\x8c-\'\xe3\x1f>d\xd5\'\xb0r"\xe4\x82M+\xb24*\'\x05S\xf0\x98\x90\x93g\x87\xa4qx\x8dEN\xeec\xad\xfcTK\xb5vD\x97\xbd@\xa2\x9a\x05cM4<\rT\xff\x00\x02\xe9\x88\xdb\xd4?^\xc2\x9f\xa4\xe3\x9eA\xf7\x9a\xd9\xb1\xc2\xc3L\x1a\xbe\xcb\'\x10e\xda\x0f\x92\xf91\xb0\x11O\t\xe81<C\xe1J\xdf\x1f\x80\xc7\xf4\x1c{\x04\x16\xaf\xc6l\xd0\xb4\xd8\x9c)\xbf\x80\xb6\xee\xaf\xd5\x0f\xb8A\x9f\x00\xb6\xeb^Q\xdf\xa3\xf6-\xf0\xcfdy\x14\x12\xf7\x17\xe8C\x1b0\xbfS\xe24\xca\xd0\xd0Y\x94\xa5e.\x1a\x18\xcb\x91\xe0lj\x8c\xc8AD\x18\x8e,6\xc0SHJ\xc5\x81j?\t18\x98N\'(\xb2\xb2\x89\xf4/\xa7A\x81v\r=\xa3%ze\xd09\xc4\x90\xca\xde\xc6\xa8d\x11\xdd\xeb\x1c\xe8Ob\x0e\x89\xb8?UD"\x8b|\xdeAb\xf7\x17\t0\xf1\t\xf6\xf0$\xdd\x14\x9f\xa4K\x02\x14\xe3*\xeak\xe7\x82q\x14K_\xd4\xe2\xe2\rm\xe8\xe5\x7f\xed\xf0/\xf9\xb9\xf6\x17\x1d\x87\xed\xbdO\xe4DnK\xee\x94\xbfx\xe6\xb7\xef\xc2\xea!\xa19\x97\x80\x16\xf6j\xa3\x18m\x7fh\xff\x00a\xc2j\xf5Cl\x88\xd7\x81)\x94\x17i\xff\x00\xa1!\xb3\xc0/\xc8\x92\xd9x\xa8\xe8\x83\xd9\xff\x00*\x10k\xe40\xda\\\xaa\xb7~\x90\x96\xd7\xe21sh\xcb\xcdoW\xce\xbfa\xf7<}po\x9ci\xb8\xff\x00\x18)%\xf1\x87\xff\x00\xc96\xe2\x84l\xdb|\xd5"i|\xe8\x05H\x07,\x8d\xc2B\xe4\xa8\xc9\xc0\xe5\r\x07\xf9(/\xa4\xa2\n\x04\x88\x10\xc6\x0f0\x95\x9b\x8d\xe3\x0f\xa3\x1a\xa3L\x7fC\x95\xe8!\xc1\x01\x05\te\xc7!\x06\xc1\xdcK\xa4\x01!!\t\x08XY_\xe0W\x8d\x1a\x9a\xbc\xe8\xd0\x87j\xb6T\xf0\xf65\x8d\xc4\xfbO\xfd\x1f\x80\xb4n\x13\x15\xdf\xfc\xc3H\xd4\xe5\x0f\x82\x1a\xf4\xd1\xb6\xd3\x1e\x10\x9f*\xa1\xfa=\xc0\xbcw\xda\'s\xf3?\xf0vg\xe16(\xfe\x0f\xfd\x9eV\x0e\xed~\x17\xf0.\xc3\xe4+S\x7f\x97?\xb4\xd3\xfaL~\xc1\x90\x89\xa0\xa1\x11RZwCJ\xfc\xec\xef\xf6\x1e [\x90v\x01\xf2\x9f\xd6lE*\xfb\x10\x8e\x85\xd4w.\xfbn\x88\x84\xae\xc2\xa0\xdb\xb1RM\x84\xae\xc1\xa3\xb0\xd8\xecQ$\xec*\xec\x85\xf4l\xd9\\\xb10h\xc6\xa3\x0f\xd4\x8c&\xee$\x13L\x99e.T\r\x94\xc6\xe6\x08M\x9ch\xac&{\xa8\xb4ao\x04V\xd1\xb3LJ\x12w,4\x1eL\txZ\x95\t&/r5\xdci\x1b(hX\'\xb3\xb0\xc9Ouq!\x02bbb\x16h\xba\x17J8g|!p\x9b\xf7\x9c/\xe6\x9f\xcb\r/\xe4c\x9f\x90\xa2o)\t\xeen\x16\xf5\xfa\x1d\xa2\xf8\xbf\xe4O\x95\xf1?\xc9\xdc\xfe\x97\xf4.e\x84?x\xe7\x07\xf7[g\x0b\xf8\'h\xaf\xb4\xe0\x12_\x08\xb1\xd0\xfd\x9f\xb0\xf2\xf1O\xb9b\xc7>\x8d\x87\x8f0\xe34\xb7\x7f\x82+Z\xee\xb3\x10\xc5>\x11\xc7O\x18\x9b\r\xd9\xee7\x94!:65/T\x12\xf076\x13t\x16\xcb\x91P\x81\t\x0f\xc8p\x11\xc6-\xea\xdd\x1f>\x83\x82i\xa1\x05\xa8\xf9\r\xa3E\xf6& \xe3\x16\xca^\xd1\x0fOC=\x811\xc1y\x15\xd5\x84\x1ac]\x85\xc1\x89o\x02\xfb\x13bP\xbc\x85|3\x90\r\xf1\xa1\xea\xde\xc4\x9fc\xfes\xf9\xc5h^\xc2\nN\xc3\x7f\x07\xeaL\x9c?\xe7\x1f\xc9\xea\x1e;\xf3\xfd\xc75\xf3\xc7\xf3Y\xbf\xe0\xed\x17\xc3\x08\xfe\x9f\xfd\x1d\xe3\xf8I\x1c\xf7\xcfO\xe8\xee\x97\xcb\x9d\x82\xfeX\xe1~\xfd\x1c\x19\xf8A\x0f\xe0\x11F\xdc(\xf6\xd2\xf9g\xe8^\xa3\xf5\xa4\xfe\xf1\xf2?\xef\xf6s\x7fmY\xce\xfd\x86\xd9\xdf?\x86\x7f\x02\x9e\xef\x8f\xe8?h_\xd2q\xff\x00\xf3{\xb3\x83\xf8#G\x95\xf2\x90#\xcc\xf8G\xf3\xd2\xff\x00B|9-w>\xc3\xb2\x9f+\xfe\x0e\xde|\xd8\xed\xfd\xc0p\xaf\xe5?\x91O\xe8\x8f\xbb\xf8\x9f\xd09\xca\xaf\x8f\xea\x1a\xe6>\xdf\xd0Az\xf6D\xff\x00dP{\xda\x83S\xdf\xba\xfcQ\x1f?%\t8}\x1a\xa1\xfd!\x0cB\x97\xe8\\4c\xc4^eYx\x89\x8d\x18\xc3\r\x8b\xf0Q\x06\x99\xb1iRhF\xc3S\xb7\'\x0ft&=\xe8Rr"o\xab\xd8\x9fKh\xb5q\x06\x15\xcd\xe1\x9c\xc6\x9eM\x894\x12.\x11\x8f\xbe\x9a\xf6?S\x16\x9fa(\xf4\xfe\xc5\x04.UQ1\x7fq3S\xe55\xdc\xa8u\xef!l\xfb\xe0\xd9:}1\xbap-\xf66\xf9^\x8fU\x13\xae\xdf\x9c\x17x-\xf0\xcfcCn\xf1\xfc\xe8N\xdb\xfb\x06<3]CQ\xf2\xe8\x84\xf0\x1a\x16}\xc1~\xbfW\xfa\x17\x12\xc5\x7f\x06\x83\x8d\xf8K\xfd\x89\xf0+\xbb_%\xdeO\x85\x7f\x02\xbb/\x92\xe1\xd7\xcb?\xe0\xafO\xe6\xbf\x91\xc8\x83\xb1\xff\x00\x83\xd9\xfcR\xbf\xd8\xe7\xec\x7f\xa4\xe5\xbe\x01\x1f\xc7*\xfd\x87\xb9\x7f\xc3\x0fr\xf1c\x15\xc9\x91\xe5\xfeZx\xb1\xfdd?\xf0\xb3\xc3\xf7Y\xd89c\x84\xff\x00\xbf\x03\x1c\xd7\x1f\xa86v>\xcc\xee\x8a;\x14w8\xbf\xf5?\xa3\xf6 \x88\xf3\x93\xc9\xbf"\xe2\xb3\xf2k\xbe\x1113*\xfeB\xfe\\\xc3\x83Q^EW\x97\x81\xac\xf3\xdd\xeb\xfc!\xb2\xf9\xdb_\xc4\\)\xd9hK\x10\xbe\x9b\\\x04\x06,\'X\x15\xfd\x02e\xc4\xa3SQ,\xce\x98@\xf0\xbcs\xfb\xa3\x9c\x98\x85\x8e\x1b~\xe5X\xf5\xe1\x9a\x06\xd3\x18\xd7\xf2\\\r\x1a_\x9e\xe2\xba\xd7\xa1\xce\xf6wCK\xaa\x9ft\xcbJ\xbf\x02\xda\xe5\xfb,5\xfc\x86\xc3u/e\x9d\xd3\xf41%i\xbb\xa4F\xd0k\xe0Z4\xf6v2L\xe3\xf9\xd0\xe5U\xf5\xdd\x08\xd3\xad\x94Fr\xd9\xdb\x8f\xb9\x0fUm\xfd\xff\x00\xa1Fov\xbf\x91\x9e~\xf3b\xf1\xff\x00,I\xfe\xe6*\xf3}\x8e\x03\xf1E_\xfd\\\x08\xb6\x96\xabb\x7f\xdf\xb0\x85\xc1W\xfd\xf9\xfd\x04B(\xef\xfc\x1d\xbe\xe3\x9d\x95\xe1\xfc\xdc\x0f\xb3\xf9\xfa\x7fu\xa1*\x7f\xe2\xaf\xf25\x94\xbe\xe3<F\xeeXK\x8f\xce>\x12\xbe\x1ck\xecd\xd0\xcb\x85\xe7E\xed\x03\xc9C\x08\x9c\xf1X\xe3\x82g\xde/\xe7\x0c$*b\xf3B\xa3\xb1\xc8jV\x85\xe5\xe8I\x9b\xc6\xb3g\x86\xd0\x92\xbbw-\x92\xfdK2_\x7f\xec2\xd5\xdf\xe3\xff\x00\x02\\?\x91\x93_\xc5\xff\x00\xa2#\xd8\xdf\xfc\xa3\xfd\x87\x94\x9f\xd9\xb6\xf6\xc9%\xfc\r\x1au\xf9_\xd0\xb1\xed\xac\x89sSm-\xbd\xbd\x16\xe5\x00\xf3F\xf2\xdb\xfc\xb1/\x80\xf8?`\xbdg\x95\xff\x00(Yp\xbb\xf0\xff\x00D>\xd7cR3\xbb\xfc\x04\xfb\x0bT\xf8\x1a\x84\x93P\xd7\xc5\xfe\xa3I\'\xdc\xcb\xfb;\x98\xf2"]\xbcp\x85E\xf1\xe8\xe0\x0e\xaa\\\xd1\xa2\xee%\t\xee;\xd8*\x90%Le\xa3\\\x0c\xf0.\x87\xa5(\x99JR\x97\x13\xa2\x13\xe8"\r\xec\xd3\xd3\x86S\xe7\xe4\\\x81\xb5\xc2k\xd8\x9b\xaaMy\x13\xc3e\xf7*\xf85\xa3\xf6\x19$m\xe4h\xf6h\xed\xf8\x08Tj\xbc\x8aF\x9c~\r\xc2>\xb8BI\xca\xd1:r\xd6\xc5\xd90e\x8e.\xc1Aiy\xf6/%\xb6\xd49\x11pd\x1b4G\x9f\xfe\r\xe6\xf4Q\xf7\x96\xf9,\xd0QZ\x9c\xfd\x9e\xc8\x97\x0f\x82~\x9f.\xc2\x1c\x9a\xfc\xbf\xf4G%\xf2a\x1bO\x7f"\x86\xeb\xf5\xfeE\xfb~!\xfa\xb9\x1a4_\xa2\xfe\xb6\xc6<\xfe\xf5\x7f\x82\x00\x8e\xd9_\xc8\x84G\xe0\x8f\xf8\x1d\xc5\xe8\x84UKxMI%\xcb\xd0.S\xa9{\xdc\xa9~\xe0\xdf\xb2~F\xb7M\x88\xfd1\x93\xe9\xbf\x08%#Z\xf1\xb9\xa3g\x904\xb8\xf7\xee%l\xf9\xc6\x9e\x04}\xd0\xbdG\x86yXW\xb2\x9f\xc0\xc7\xbf\x0f\t(\xa4\xe6~P\xbb\xaa\x9f\xc1&\xad\tv\xfbCm?XKO\x9f\x83f\x97\xe0W\x95;$\xf88\xee\x90\x98\xf1e\xcf[\x17a%\xf6\x171\x7f:\x0e\xbdD\x0c\xfe\x0c\x1b\xb1?\x07b\xfa4}\xc1\xde\x85\x1bD*\xdaH\xdf\x84;\xd9=\x88\xad\xb1+\x17\x80^\x13\x8c\xc3\x83\x91\xa1\xf4$\xf1K\xd2\x08R\x97\xe8\xb5\xd0\x95\xa4\xedC\x07\x91\xbe\xc6\x8e\x1bO\xc6=\xb0\xdb6\xb84h\xe5\xc7#t\xd6\x8e[\xdb\xc6.\xa9\x06\xa3bY"\x9a\xda\xf7\x12]\xc1\xb1\x97\x81\rW\x0f\xc1"\xd8l\xa7\xf8/\x92\x80\xa5\xff\x00\x837\xa1\x9f\xc8\xb8\x1aK]\x91n\xa0\xecR/\xd2AzI\xb7\xc4\x10\xe5\x8b\xe0\x8fm\xf8-\xd9\x8d\x0b\x82+\x19\xa7\xc4\x11\xd8\x98\x8d=\x84\xf5\xe7\xe4\xaf\x1a\xf8!\xe1\x8bq\xa9i\x9a\xf2\'1V\xd9\xa1\xeb\xc8\xde\xd4\x8a\xf8\x18\x97\x05\xbe\xccm\xa9\x93\'"\x9f\x02\xec\x03\xca\xb1v\x98\xf2\xb1\xa3LC\xbc\xa7.\xcfq\x1e\x12\xefPN\xec)\xd8Q\x9c,\x94&t\xc2\xc5c\xb8\xd9\xdbQ\xdbE\xc0_F\x8d\x1d\xce\xf1\x8br\xe9\xf9\x12\xe2 \r\'\xad\x8c\x92`\xfd\x8c}\xf6!\x10\xcd\x08\xa2\xba\x16\xacR/\xa0\x17\x17\x0b\x10X)JR\xf5\xb1|06\x8d\xaaE\xf5\xf0Dp\x17\x90\x8b\xd0D\x17\x1d\xc9RL#dQ\xd8w\x13@\x955\x1bk\xe0P\x9a^\x89\x81\xf7\xd9\x1e\xe8&\xe5\x94\xbd,s\\\x9d\xa6\xb8\xbc\x87Q\x98\x940\xd4\x96\xbc2\xbem<\nqm\xc6\xd3\xb4\xf4\xff\x00\x03go\xe0J\xed\xfc\x1e\xbf\xe0K\xec\xfc\t\x1d\x9f\x83\xd4\xfc\x0b\x1bK\x01,\x12\xf0\x9e\xb3\xd5\x98=\x01x\x07\xa4zG\xa9\x1e\x84G\x84G\x84E\xe3\x13<\x94\x10\xecBGa)\xf4)\x03Gs\xbd\x1c\xb2\x1c \xfb\x89\xa6\x16\\\x17\xd9\xbbc\nL\xa0\xad\xae"\xc3M\xb3v$\xce\x04w\xc3O\r\xa2\x965\x8dtJ\\4<\xa10\xa2\tt\x97\xe83h\x176\xc5\xa0\x95\x12>l/\xb5\x8a\rJ\x96\x9c\xa8}\xa0\x91\xeb\xf20\x86\xe0\xa8\xd7\x02#\xed\xf9.1U!A\xf5 \xd16\xa9\xe8\x95\xed)\x8cT\xbc\x85\xa4)J_\xab\x08|\xb0\x84\'\xb2{\'\xd7\xa4y!\xdci\xee4\xf7;\x82;@\xe1W\xdc\xa7\xf6\x16\x038\xa6\x97\xd1\xfb\xcb\t\x8f\xbe\x06O\x9cm\xd8-\x03\x9e\xd0\x92_\x92eF\xdf\xd8\xe8\xe1C\x7f\xa1\xc3\xb2\xf9!\xff\x00!\x0e\x95\x9d\xfc\xa0\xc9\x9c\x15\xa7\x9d\x15}\n\xa2\xe2\x10\x84\x10\x88B\x12f\xf4\xb5\xc3\x99\xce\\\xe0&\xf0(Za\x16\x93/\xd8@\xaaC\xf4@4\x17\xca\x1f\xd84I\x91d\x8e\xd8\xa7\xb5\x1e\xd4PX\xf5\xe4\x19\xee/)\xed=\xe7\xb4\xf7\x9e\xd3\xde{\xcfy\xed\'\xdc\xf7\xe1\xf7\x8b\xceW\xbfP@\xf2D\x92I\x04\xf5QS\xd2\x01\x18\xa0h\x86\xa3\xf2\x08\xc2\x1d\xa2)\xc3o\xe1\x1f\xc1#\xf9\xc1\x9c\x12\x07\xc1_\x07)>\xe4<\x04\x1e\xb1\x1e\xc2Wa#\x01\x1e0?B<\r\x9d\x8eL!\xe2x@\xd6\xa4\xfeP\xd7d\x1d\xc8>\xa4W.\x07j\x9d\xd5\t\x85\x8a \x8a\xc0\x82\xcb\xa5\xca.\x1cd\xa4\xc6\x94\xb8\xb8s\x82\x06J\xc2\x18\\F\xe5\xa2\x88\xd0cAR\xd8\xe0J\x08g`3/\xc48\x87}\x85\xe6>\xc3\x0b\x98\x97\xf7\x1a\xe0\xbb\x85=\xd5\xafG\xb7\x1f\r\x11mo\xe0\xdb\xfc"\x9a\x81\xbf\xf1a\xa9\x7fA\xa6\xe5\xf08\xf1\xf8\x17\xe3\xf0\x16@C\x8f\xc8p\xa5\xd9\xa0}\xf0\x1d\xc2\x06y_\xa9\xff\x00\xdd\xc8>\xb1\x8b\xf4\r\xbd\xd6\x15\x02\xc1k\x1d%\x05\xe5DD\x08\xac1@j\xf01\xdcN\xeeS\xb8\xfc\x87v\x88\xfd\xc3\x1f?\x90\x9f-\xfd\xcf\xf9y\x93\xd0z\x87\xe3\x1a\xae\xc8~\x86\xa4HM\x15\x1a\xc2\x0c\xd0\x92\xa2\x0cL3\x90G<\x87\x1b\xa1\xeb\xb58\xdf\xb0<\xe5;\xbb\x0b\xbe\x1c\x08A\xc8\x91\xb2|\xe2\x8a\xcfAd\xa8\xc2\xe5tQ\x14\x13\xe4\xa0\x9d\xe8R\xfd\xe4Qg\x80B!\x8f\x10\x91\xef\x96#\t\x07>\x8a67\x94l\x16\x87DF>M\x9f\x16;d0z\xe4\xd5\xa2\xa2v\xe0\xd2,3\xa8m\t\xe8t\x8d\xb8V\xf8k\xb1\xdei\xe6\x17\xdc(%xy\\.(\\96\x85\x8a\x86\xba\n\x98R\xe1\xa40\xfaL\x904\x1d\x0eF\x12\t\x08\xc5\xbc\xd8\xb1\x83Y\x94hvC\xb6\x8a\xecx\x87xh\xee\xc7<y\xde5\xdd\x05>\xe2\x9fr\x1e\x0b\xa1\x8b&\x88~\xacU\xc9\xe7\x8cw*-\x82\x94\xa6\xc6\x81\xed\x0b\xc9Q\x12\x82z!v&\x18vSbQ\x89\x9e$\xf6-\x0f\xd0J:\x8b>\xce\xcbX\x13\x1d\xe89\x83Q\xb7\x83qT\x192\xe3\x02Pua\xa1\xa8\x86\xc8\xe0\x99\xcc\x08}\xca\x88bFN\x84\xc4\xc4P\xa2\r\xf8\x10\xe2=9\x0b\xa0\t\x1fF0\xeb\x14;\x8f\xdc\xf9\x88\xb4\xf2 V\n\xc0\xb8\x82\xb2\x97\x08\xb8\x98A\xac\x1a\x18G\x81\xab\xecvc\xc0v\x0f\xc1\xe6\x9e\\\xe7\x85>\xe2\xd8[\xee+\xc8\x91\xb2|\xe0Y-\x93\xc1\xb9\x82/LK\r\x90\xd4.X9\xc1R\xc7Y\xbb\x1211?#\x92\xe68\x1a\x08\xb7\x0b\x8aQN\x9b\x07\x8f\xc4\x90h\xb1\x8a\xf9\x8bB\xc6\xd2:\x1a\xf8\xc5\x0f\r\xa3EHhGA\x0cR1#a0\xa5\xc0\xd4\xf6\x88Ac\x921B\xd1`a\x1a \xc5\x97rF\x8b\x14\x98\xc0H\xe8\xa8\x8c7e`\x9c\x0e\xf0{\x0eF\xb10\xae\x14\xc3.\x0b\xa2<l1\x080\xc2\x1fl\xcd\xbe\x87\x85\xe3\x94\xe4C\xeey\x05\xa1dX\xa6-\xc6\xc2\x86\xa7\x10JAd\xc0\xf0iNF\x16\xd6\x1d\x1e -\xa1P\x82&\xb8\x1b\x0ck\x93\xb6r\xd9<N\rbF\xc8x\x17c\x10\x91\x88.\xb1\x80\xb7\x17C\x1a\xe5\xa0\x82CC\x1c\xf2{\x04W\xbe\x1bw.m\x86\xf2\xb1\xceX\xd8\xe3F\xc3\n\x1e7\re\x05LK\x12N/\xa1Z\xe5a\xd1!f7\x17:(\xef\x98B\x10ha\xe0!\xf6\x19\xf4\x8d\r\xee\x1b\xdc{\xc5y\x13\xdd\x84\xeb\x03\x0f\xd7\x1e\x84\xd7L\xe4a\x84\xe8\xa3\xd0\x84\xc5Y\xd4sQ\x8eB\xc5\xe4eM1@O\x0c\x12\x8b\x15\xa7\x9fEc\xd0O%\x82a\x84\xcd\x90\xc6R\x8aE\x05\xfa8\xd3\xe8S\xa3\x91\x05\xc1s\xe06\x1bb\x9b%\xa0\x82\x17\x13-\x0f\x0b\xc5\x9d\'\xb47\xd0\x82\xc7qp\xc6\x88>\x80\xb1!\xe0\x13\xae\xe7\xbc\xf6\x8byA\xa6j\xc8\x88<\xca\'0LX\x9a\x8d\xc1\x14\x08\x1f\x14}\x87\xb1\xa6F"b\xc1\x8b\x11\x1d\x8d!\x92QX\x8a\xcf\x11Y\x11\xa1\x08\x84!\xc0\x99F\x86\x88L&"\xbc\x94\xe8\xc1\x05\x1e\x0f\xa0\xd1\xb6\x11\xd5\xcf\x80\xa4HE\xc2.n^\ra\x13\x06\x1e\x14\x1a\x1a.\x0b\xaa+\x86B\x0cS\x1c\xcbE\xa65\r]\xcfy\xef=\x87\xb8\xf6\x89<\x9f1{\x9f3F^\x80\xb5(\xd5\x1a\x19\x16+\xc1\x06v\xc9\t\xb1l\x86\xdd\x1f~\x98\t\x04\x98\xa5D\x12\x1289\x16! \x89\x84&\x133\xa44\xc8\xd6-\xd2\xa6\xe1\xa2f\x94\xa5\xc9G\x94\xc4\xca\\\x97-\x8d\xe1F\x94b2\xf0\x18\x83/Q\xa9p\xb0\xd5,Th\xc1\xb2-\x1bBd\'\x13y\x19\xe4g\x91?\x91{\x1f1\x89\xf4q\x81\x8fc\xc0\xa0U\xd09&\x10H\\\x1d\x0c2\xf1t\xc1\x86\x13\x82b\xcc\x82be\x10\xbe\x88i\xd2)a\x81\xa8\xf7\x16\xca \xa8F\xdcBf\x94\xa5/\xd3\x06\xf2f\xc1\x04\xe3/\x02( \xcbF44L&iE\x8a\\1\xaa2\x86-\xe3p\xd4Di\x95\x94\x8b>g\xcc\xb7\x16\x1c\x9ca\x08hh\x83\x0b3\xa2\x10Bdy\xc8\x10BpA1ep&&0\x85\x89\x84\xc8\xfa\xe0Bc\\c\xfc\x9e\xf2\xd8\x91E\x04j\xc3]\x01\xacR\xf5\x05\xc9F\xf0c]"\xe2\xb3)z!\x08Bf\x973,hh S\xc0\xe5\x85\xab\x05\x174\xb9Al\x83D\x1eT\xa5(\x85\x84\xe0\x85\xc3CC\xac\x12\x14O\ntX\x82BxB\t\x89\x9730\x9dm\rb\x8dD\xcff;t\x00\x82\xca`\xc4\xc5/\xd0\rp\xd1\x06\x86\x86\x87\xd2\xcb\x15\xc9z/].\x18\xc6\xc6\xc61\xec@\x96!\x9b\xca\xf0,V\xe11<Q\x84A\xac445\x94!hX\xe0B\x88cC\x12\x8c!\x86\x10B&S\xc2\x13\x13)E\xd6\xf3K\x87\x8aQ:\x1c\xbe\x8c\x82\x15\x83Y\x18h\x84\x18\xc7\x8a\\\x94c\x1a\x18a\x97\x82\x08]\x17\xa0Q<^\x87\x8a66662\x94c\x1e]\xa5-\xcayA<<44L,!a\x9c\x08\'\x86PL\x89A111;\xd0\x84\xc4\xcaQ\x04PB\xf51\x8cz\x1b\x1fE\xc7\x03Q.\x93\xb4\x17EZ1\xa1\x86\x18hhk\xaa\x973\r\x13")F7\x85\xc5\x10B\x94\xbd\x0cc\x1b\x1b\x18\xd8\xd8\xd8\xd8\xbf@\xd398\x13(\xf6=\x14{\xe8B\xc5\xe8LD \xc3\xe8\xe4"\x88-\xe2t\\!1\x04\xcb\xd2\xc8A\xa1\x86\x86Bu\x18\xbaN\xbd\xa5\x84\x17CZA\xa1\x86\x19e\x86!:iz\xd8\xd9p\xa5\x13\x13)JR\x94\xb8lc\x1e\x18\xd8\xc7\x8b\xd1\x02b\x16 \x9eS.\x1a$!3J^\x94-\x90\x98<\x13\x18!d\x91\t\xd0!\x08"\x89\x88\x981:\x03,\xb1\t\x92\x08\x84\xc4:~\x92+\xc1\x15\x8a\xe2`\xf00\xc3,\xb0\xd6(\xf1p\xb9c})\x89\x94\xbd\x17\x14llllc\x18\xd8\xca^\xa5\x04v\xca\xe9y\xb8y\xa2\xca\xc2\xe9\x84!0B\xc2\x16gD\xca\x11q\xb6I\x83\xc9}HN\x83\x81OR(\x82(,T\xb8\x980\xc3\x0c \xd0\xd0\xd6)oZ\x98\x84!\x05\x9aR\x8d\x8d\x8d\x8clo\x06\x1b\xc3\x14\x8e*d\xa8\x99\xcfJ\xfa4\xa2byB\xe8x\x98N\x84\x90\x85\xf5(\x98\xb10\x84\xe8l\xbc\xc9\x84\xc4\x1a&\x10]i\x00AfR\x8f\x10hA\x86\x86\x86\x86\x87\xd4\xa5\xc4\'D\xc3e)F\xc6\xc6660\xd8\xd8\xc3\xeai\x96\x02b\x17\xa6\xe5\x08A\xa2\xe1\xe12\x94B\xe9\x82D\xc90\x99B\xfahL\xbd\x10\x84&\x0f\xa5\x0f\x03D!\t\x8a/\xa1A\x11\x15\x95K\x8640\xf04Bd\x9d(LD\xcb\xc3\x18\xd8\xc3\x0c0\xd8\xd8\xd8\xfaC\xb8\xf3\x1a\xb0\xd4L]dJA\xa1\xae\x95\x85\x82\x13\x13\x10\x84$B`\xc4!1D\xc4\xc5\x99\xf4iD\xfa\xa1\t\x83\x10hhhh\x84 \xd6)\xa0\x8a\xe9\x00\xa3L\xd4\xa3cx\x7f@C/\xa6E)F66660\xf0a\x86\x18y\xb7\xc8Oc\x06\x1a?\x03k\x03`\x98\x99K\x9e\xe2\x19\xcb\x985\xd1:\x16\x17aa`\xba&^\x10\xb8\x13\x17]\xc2e\xe8O\xad\xe5\x8c|\xe2\x0c\x83C\x18\xc6v(\xc1\x82a0\x98`\xf1\x04\xca\\6,\xc2d\xd0\xd1\x08A\xac,7\xa1\xb2\x8d\x8cc\x1f\x181\x8d\x8c60\xd8ag\xff\xda\x00\x0c\x03\x01\x00\x02\x00\x03\x00\x00\x00\x10%\x97\xed\xb5r\x8c\xb4\xbcW\x85(E\x8f\x84\xc8\xa2\xe6XE}\x8e3\xf0)[\x10$\x94?\xf3\xfe\xd1\x1b-\xbe\xde\xf3x$`\xff\x00\xa0\x02\tZ\xa3\xe3\xef\xfe7E\\\x8e")\xf5L\x8a7\xb7\x83 \xc4\xa1\x00\xb3\xdc\xd7\xcf\x82\x1d\xc4\x01\xda\xff\x00tA-7\xba\xc3\x8aB\x8fy\xbf \x80\x08\xfc\xa1<\xcb\xf9{\x82W^\xa2`\xafB\xceN;\\\xf2\x17\x1c\x08;\xf67\x9d\x18\xbb\x9b%\x89\x95\xf4_\xfbX\xb6\xa4\xfc\xd2\xe7}E\x84\x96\x96\xd3\xdc\xc7\xc7b\xf6\xd7x\x9f_\xcc\xefd\xd2\xa4\xbe\x90\xa6\x00\xfb\xf9\x86O\x1a\xdb\xa5\x8f\xf4J\xbb6%\xeaU\x8bN\x08U\xa7\xbf\xe5HM&\xa2\xfa\x8b-\x01o4|q\x0eF4\xb6\x04cH\xcc\xedgK\xfa\x99\x03\xd2\x08\xb6\xfe\xef\xf0\xbeM\xdf\xd6o\x1b\xa5\x96R\x88\x9a\xe6\x94r\xb6\xcd~\xd7\x8d\xb6]\xbe(\xb4\xbe\x92\xe8+{V"N\x9f\xc1J%\x81\xfa%\xf4\x8e\xb7\xa4\xad.Z?\xa6\x8eh\x1c\x86\xd4\x98\xab\xa0\x1a\x16\xab\x1dzJAk\xf8Lm\xba\xb96_G\t\xefA$\x9e;\xc1\xc0\xfb\xe6\x18\x90\x15g\xc8\x9188\x064F\x02\xd4R\xc2Z\x12E\xf6a^J\xa4a<\x86\xc3=\xfc-\x86\xff\x00n\x9aY=\xb2\xf7\xf7\x8a\x8b\xd2\x8aNV<\xf2T)\x12\xd2\x94\xd8\r\xdejo\x06\xb7\xa9\\\x06{\xd7\xad\x84pyj!\'\x89\x9d\x1b\xb0\xe8\xd8NS(\x7f\xb7\xdb\xdd\xb7\xdf\xbf\xbb\xf9k3\xac v\xd1\x9fb\x8d\x92\x0bA\xbf\xb8\xbe\x8d\x16\x9d\xaf\n\x11\xd6t\x9b\x0f\xd48\x88\x80\xd2h\xbe\xb7\xb9\xb1\xf6\xb8\xa5\xf5\x9e\'\xfb\xef\xff\x00\xcb}\xbf\xeb\xb7\xf1\xd3\x83Qq\xb7\xaa *`\xd2\x88\xfce\x90_{4\xa3\xb9C\xe9\t\x90a\xd1\xdd\x99\x92\xc9W\xacl\xcek\xff\x00\xc3\xd66\xf9\xb45d6\xdc\x85T\xbf\xfeCN\xc6Z\xd7\x1b\xe8\xfd\xaf\xe3\xb0\xd8\x82f\xf4\xda[\xaa\xd45\x8cO\x1d\xd8\xaeV\xa2\x1d\x9b\xc6P\x90\xed\x90\xbc\xde&\xdd{a\x02Pi6\x8bI6\x92\xdb\x7f\xb5?\x0b$x\xeb\xe9}I]\x07\xfaN\xce0\xcdu\x17\x8f\xb0R\x0e\x06\xc9\xaf\xc2\xeb\xdf\x0b\x8b\xe5:\xccW\xca\xe3d\xbdF=d\xa0Cd\x92Ei\x82)\xf0\xed\x87\x97;n\x86t\xf7\xf7%>\xa2nYy\x97\x1d\xa5\xe3n\x8fHJM\xcd\xb3\xa0\xcc$r\x7f\xaf\xcd\xc3<\xf6\x14\xdb\x084\xd1 \xdb\xcbi& \x04$/\x98A\x14\xe1P\xf0\x9f1\x00+\xbd\xf2\x9a\xf3c}\xcfut7+\xe0\xc9\xa9&,4\x1f\xef\xa8\xaa\x8c}[\xd9)E\x80\x10\x04\x8e#$\x91$\xfbj!\x05^5\xa2`\xb9cKe\xe4\x14\xe0\x006\x11e\xad\x169Y\x1d\xcfH\xff\x00{JV\ti\x8c_!\x87Pcv\x93\x16\x90\x00\x82K\xfb_\xed{/\\\xb7\xe8\t\xfc[L\xae\xb3\xa2\xd5\xbc_"?\xd9\x00\x17gT6\x1c\x87\xc8\xa4\xe4\xc1\xb2\xd6\xa1\nj$\x12\xb5\x18)\x98O\x9b`\x02(\x97H\xaa\xbf\xb4\x92M\t=\x87\x01\x04\xb6\x81z0\xf1\xbf\xc1\xc44J\x87W%\'\x98\x99\x97m9\x89$i\xf2lbH\xf1\xfa\x18\x0f\xbd\xcc/\x8d2@?\x9d\xbd\xb7\x82I,\xa0\xc0I_#\x0cI-\xe9\xb7$\x0e\x85\xd3\xd6\x83\x8c\x10\xc8\xac\x19\xd2S\xcb\xbc\x9b\xa7\x07\xe8\xeeI\xc5\'P}\xce\xff\x00<\xd2\xcf\x10`W,\xd1T\xd8\x12\xd0\x00\x00\t\x82e\xd9\xde\xb3\x81 \xea\x1b\xf8 \x04\xee\x01\xbf\xd6DW<T\x82x\xf915\xe4\x98\x0f\xd3\x17\x94<\x98\xbf\xe3\xdd\x19\xac\x00Y\x87A\x11!\xf3n\xbe\xd9\'\xf4\xf8_v\x0f*\xb8Cs$\x9d\xf6q\xc8\x0bXY\x98\xcc\xd0\x1eF\xd0\xe3\x11~\\\xd8\x00J\x0b\xb3euPG\x1b\xb4Y\x14\xdd\xa2\xa8\x9c^\xdbo\x7f\xdbm\xee\x10.\xc80\x12\x80\xd0.U\xe7)h\xd9\xc9tK\xae\x95\xdd\xf9\r\x8d\x11!Q\xbd\rD#HsWP\xa8\xa4\xc8\x00\x08u\xb6\x12\x11\xda\x00\xb7\xcf\xfe\xc6\x9fieAPf\x92\xaf\xfd\x10(iM\xa9:\x18L\xc6N\xf8\xda\xe3\xe7]\x04\x00Gvv\x7f5\xfb\xa4l\xb6\x02?\xb0\tQJ\x113\xe8\xe5M6\xc1n\xc9/[XJ\x9f\x0e\x93\x08i\xe7\x89\x8f!\x91\xeb\xc5\xac\xed\xb6\xabt\xb6\xf0\x91\x07Y\xe1g\x91\x1d\xed\xaa\x91p\xd0\x1d\xb3@\xf8=\xc8)\xa8\x8e\x05\xbd\x1f,\xd7*\xcbG\x883\xa2\xc6%3\xb1"\xa0\x9b\xdb\x9bpi\xa9\xb6\x8ax\xe0vh\xb177\xfd\x11o\xd2\x17\xfa\x1c\xef\xa7\xb52\x1dZ"\x13\xdfD\xd6\x1f\xeb\x01#.\xd5v\xd7\xc4+\xdc\xce\x17\xe0\xe7\x12\x1f\x92E\xf0b\x17\x9b`[&_d\x19\x04\xcf\xb7kt\r\\\'\x9d\x17\xa1\xefv!\xbb/*o\x9ci+-\x96[lCl\x04\xbf\xccOd\x8a\xce\x87k\xa7\x08,\xd5\xfd\x17O\xab\x97\xc8 \xf7H\xfd>\x89\xa0M\xdb\xc4mW\x89\xa9\xaf\xd9c0\x9f\x926\xc0$i\xb7\xed$\xda\xdbo/\x13f\xfb#r&+\x1f\xe6H\xc5W\xc9\x17\xc5_\xf7\xb7cppt\xde\x0f\x85"QY\x88=\xd9T\x7f\xbb\xe1\x00x\xd1\x1bzY\xe0I6\xcb=\x84\x89Y&\xfa\xa9\x83u~W\xe1\x1d\x86\xf0/\xa7\xea\x02\x1e\x91m\x8aW/\x00s\x9e\xd7c\x9bx\x8e(z\xa2\xa1\xe7\xcf\x8d4\x98\x9fz\xac\xd3%\xfd\xd3I\x07-\xb6Rc\xbat\x84Z\x1a\xc2Y_\x9a\xe28T!c\xa8rp\x80\xc9I\x97\xdfh\x8b\x1b\x7f\xe0\x05\x8e\x00\xa3_O\x8b\xe2\xd4\x1e>\x16\t\xf77\x10\x00\x00Kao\xdd\xb0#\tn.E|\t^2{qs\xb92085\xe6\xd8b\xaf\xfe\xaa\\\xcdy\xe5C\xc9"\x12\x9f\xa8\xabx)\x87\x16\x10\xe8\xbd@\x10[r\x00\x0b\x0f\rm`\xd4\xdd\x92\xec\x19\x8d@\x95{\xb1E\xc6"\x9c\x8f\xdbm<&\xff\x00\xeb\x97r\x16\x04L\x9aX\xd6\xb8h4\x12\xc2\x1a\xef\x80&\xc4\x00Q\x86\xb2R:\xd6\xdb~I\x18\x8c\x97\xb4y\x04\xf6\x9er\x16\xda\xd4\xb0\xca\xed\xb9\xc7l\xd3x>\xf9\xa6Q\x02\r\x81\xc6\xc6\xc9M\x9e\xd9\x91\x9a\xeb\xda\x9acAD\xa7\xb4\x93\xb6\x90\xc0\xb9\xce+\x8c\xbeV\'\xd1xs\x07\x92\xd8\xb2L\x95\x07\xed4\xc7m\xe2\xac\xa9n0(W\xd9\xbb\xef\x88)P\xc2\xda~\xe7\x89\x95q\x01\x82\xf6\xb6\xdf\xfc\x93|\x17\xb7\x9fq\xf6\xed\xeaQ\xac\x1d\x9b\x9bH\x13\x9c<Y\xbf<\xf7\xe8$\x8cJ\xcf\xb0\xfb\xa0\xfa\x18QFgn\xecJ\x7f\xc3L)\xfc"\tS\xe9\xb6\xfdm%\xda\xd1o\xf8(\xf7b\xfb\xf3\x88\xc7\xba?c\xda\xb9\x8c\xddb"\xd0\xe0\xfeD\xac\x18\xff\x00\x17\x0f\xd59\x16\xf4Z\xdc\x0f\xd09[\x00\xedP\x06\xafw\xebi\xfeO_\xff\x00\x8bZ\xe8\xcb\xd5P{\xb4\xd4>\x97\xf8\xe5\xd5g\x16\xc1\xa1\xc6\xc1!$\n\xe3F\xd2&\xfa\xb2\x01\xb2\x81\xb3\x1dBv\xb9\x95&\xc0\x83\x7f\x9f\'\xff\x00\xfb\xfb{r\xfe\x1d=\x05.\xcc\x11f\xda\xff\x00\xed\xe71\xb7\x92\xa7\xa9o\xa9\n\xadL@\xa8\xf0\xa8\xf8\xd8\xf5_\xb2\xa9\x02h<\xcb\xde\x9a\xbb\xc2C\xceM\xdd\xdbm\xff\x00\xff\x00\xfe\xb6\xbe\xab\xfa\x9fY4\x9a_\xdeD\x96\xb1"\xc5\x05\x97\xefZ\xb3(\x9a\xdd\x0be3\x0cA\x8f\xe7\x80M\xf3)\x92\x87\xbe9Cx\x85j6\xea\x7f\xf3J0\xbf\xf5)R&4\x8c\x87\x1e.cpd\x1f\xfa\xbc\xd2\x04\x0f\x945\xfa\xa5-\xf9\xefb?0\x90\xe5Z\x99q\n\x95\xe0\xde]I\xfeEL?u\xf6\x0c\x96\xaa[M\xb9\xdf\xcc*wb\xdb\x02V\x12\xc7\x7f\xa7\xc8\xb3"\xcd\xc3g6))\xcd\xf8H0\x88\xde\xdc\xf5\xe0\xfa\xe0o\x96\xe9\xf6\x94vy\xfd\xf3\xf3\xdf\xd0\xf6M\xbe\x88py\xe9\xd0\x06\xa6\xb0\xe0@|\xe9b\x81\xf93-=\xfc\xe4\x970}\x9dTw\xbd\x10T\x17\xde\x19\x9b\xbe(\xb2\xec\xcf\xcb\xe5\xf0\xc7*\x19\x1f\xcd\x0b\x16\x96\xff\x00\xf3&\xb7Id9N\xf1jR\x8e\x91xx\x8ef\xdb\xff\x00\xb0(u\xd2\xfc\xad<\xd5\xca\xaf\xa0\x02\x15\x9a\xfc&R\xc9\xe5\x86r\x01=@\xa9\x8f1\x96\xdf\x80\x14\xb97\x07\xf3\x9b^LS\xe6!D\xa3V>\x92{=\xd86\xff\x00\xbb\xd3U\x9f\xbc\x03_Zf\x92R3\x0c\x1c\x8b7\xe7a\xc2\xfa\xb4C\x14\xb9\xe3=\xac\x14 K\x95\x13\xd76\xdf\x87\x10t\x96a\xb1\xda\x8e\x81\xba\xd0\x116\xff\x00\xfb\x9f\xaa0j<\x92x\x83*\x7f\x08\xf5\x96\xda\xcf;xr\x93\xc0Md\xda6\x02HEZ\x8cj\xc6Y-Yb\xa1\xd04\xed\xde1\xf6\xb3\xda_\x19\x08\x16\x0f:y\x8e\xb8\xc4S}\xe1\xf6%z\xd6\x0fa\x98U\xae\xf1^\x97Z\x0c\xc9%\x138\xd0\xb2\x00\xb8\xe7\xa4\xe7<\xfd-\xad\xa2\xb6\x0c\x8b\x8a\x1aW\xc6N\xb5\x97#%\xdbK\'\xdc/\xbdW\x942\x06\xc1\xd8\x88\xbeQ\x89\xc7H\x99Kl\x9b\x19\xd7\xfe\xd5\x85\x90\xdfiMh\xbd\xbc\x13\xf6m\xa8\xd1O_M\x187\xd2\xb7\xd9\x94},\x9c\x15N\x0f3\x97N\xee\xed5D\xea\xd1\xd6\xa7n\xa1\x15\x9d\x95\xbe\xcb\x00\xd2$\xf2\x83y\x0f{IG\x1fA\x05<\x1c\xbf\xe3_6W\xf5\x84\xb9\xcf\xaf\x14\xef\x11>V\xa2\xcdL\x91\x0b\x19\xaa\xc2\x02\xbeNFh\xc7\xe3\xac\xb8w\xf6OS1R\xae\x83NSl\x9ey\xf7!\x8eH\x8eS7\x8bL\xa58\xea\xf3_\xe8\xd9\xe6Y:\xa9\xab\x10:\x8dM\xed[>\x93C\xfe\x87\xc6\xdbXna\xc3\x89\x1b.2\x14\x87\x9a\xe6\x9cn\xbfR\xc8+\xfeW\xdcN\x16z\xe5FC>\x844\xd9J\x14\xda\x0fh\xd3+\xab\xa2\xa8\xd1\xa0\xa8\x0bh\xf5\x01\xd6\xe4\x98\n\xddI\xfa\xfd\xd7\xe7\x82/T\xddV\x87\x15\x86\x0e\xb6\xeck1\x94~2^C\xee\xcf\xfc#aG\x10z\xdf-\x92<7\x96QS\x9df\xe7 `c\xfcA\xe9bC@\xf0\\\xc1\x02\xd6?\xb37{\'\xf1\xbc!\xe6\xa8<\x06\xbf\xdb\xe4\xa1iAg\x8b\xbfq\x0b\xbb\x0c\x0ftDp\xabc\x02K\x07\xb8H\x1b\x90\x8c\xc4\x05\xc5\xe3\xf3\xd6H\xd3\x99}\x98\xf2\xbb\x08\x85cT\xe0\xf7\x9fW\xc3\x0f@\xa6@\xaa\xd3\xd94\x03oEjNW\x82R"5t\xd3ls\xd7\x82\xc5\xd7\xa2\xee\xda\xe4\xaa\xbeJ\xe9\xb9!\xa6\x9f\x92\x19C\x97\xf9e\x8d\xa7\xa9\r9c\xde\x82\x9c\xb3R\xc8\xad4\x05\xc8\x02kV\xd7\x0b\x1b\x8e\xf9\xec$\xa8\xe4\xbb\x8e\xbb\xa2\xd3\'}\xe0\xfc\x18\xf3~r\x14\xe8dJT\x87\xa8\x88\x89\x88\x8e\xdfb\xe1\xa3Z\xb4\xa7\x08\xae\xf5\x9c\x1b\t\xe5|T\xb1\xec\xa6(\xb7\x05(7\xaejYQ\'\xbfn\xc9\xbfn\x9c\xdcwt9\xa1\xe3_\xcf\x91\xef\xeb\x8a\x80\xce+\xae\x8a\xc7\xe7\xab\xa0X}\x8e?-\x037\x18\xfd\xdf\x8e\xbd\xef\xeb\xf82\xe2*r\xf0M\x11\xb5\xdf\xbe\xe7\xe1\x8aH\xdd\xbc\xe1\x0e\xc95\x98\xa3\x1d\xbb(wt"\xc3\x13\xad\xfd\xbc\xa8V#\xaf^mH}\x96\x82\xafU\xaf\x85\xf5\xf2\xc1\x81\xf6$.\t\xf8i|\xfc<\xaadtg>x\xcc>\xe6\x96?\xcb\xbd\x83\xac5\x07\xd80\xa8\xddc\x0c\\\xa399\r+y.\x8a\xeb/<\xdem\x0bbz\xbaL*\x8b@\xc2\xfd\xc4\x83\x97\xdc\x9f\x93\xe1\xf6\x8foQ`\x1e\xaf\x84~\x19\xcd\x0c\xdb\xc8\xa0\xa2J\xb4t\x8b)\x0bd\x99:\xd8\xe8\xccd]Go\t\n\x11s\x92\xf0\xd6\xc6\x86\x98_&\xe8\xadG\xd9\xea\xfc6S=\'\xd8\x98\x84\x891\xb1\xd8\xa9\x81\xd7>\xcf\xa7\xe0\x9a\xe4\x0b\xb9-\x83\xfe\xc9\xd5\xe3\x8a&\xc5\xdfR\x89\xe2\x043\t\x95\x18\xbb\xcb\x811\xf2\xa1\xa5\x9b-c_%,~\xc6|*#\x1fq\x88\xca\xea,)\xa1\xcd\x8br\xde\xaaP:\xadd\r\xddaHno\xad:\xf8\xfa\xa1m\x07\xa7\xd37Xr\x8c>/\xb0;\xf0e\xa1\xb4C\x04\x95\x03T\xa1\x8f\x9d\x1b\xfb\x8fRM\xaf\xa7vOmW!\xb7\x1e\xe20\x08\x9e\x8bS\x13\x82\xd6\xc7\x00\x1d\xeb\xb5\xefb\x88OW\x16M\x16\x8e\xc6\xcd\x1e*.r\xdf\x04w\xb2-\x1f\xf8\xbcD\xfd@\xfb\xdfJ\xfe\x80\xf3o\xe3\xe4G\x18\xab?\x9c\xe3=\xf9\xb0\xaa\xe9\x10:\x87!u-\x1fuwAy\xe5\xd8\x14#\x0c\xb3K\x07%\x1c}\x1bo\xff\x00\x9a\xce\xc1\xd9\xcf\x9fL\xeev\x817\xf3\xd7\xfc\xd9\x7f\xff\x00\x82W\x13\xde3\xdd\xe2*\x19\x9d\xe9d\x94\xdck2\xe0 <\xa1XRxX*\xf0s\xdf\x7f\xff\x00\xfb]*\x99\xd8\xed\x07\xcf\xed\xf7\xda\xc9r\xba\x04\xe9\xf9:\x98\x8dqvh\xce\xb3c\xack\xc3g\xfe\x1c\xba%\xc73\xf4\xb6\x0e\x7f_z\x1b\xde}Q\xf9l\xde\xfc\x91j\x07`\xbbl)o\x19 \xa9\x05-\xbeI\n\xc3\xdf\xf6\xf0\xa9Y\xb8\x158\xf7\xb7\x17Y\xaeFy\x0f\x1f\xc13\x03\xc2Y\xd0B[\xa1\xca\xdf\xff\x00\xf6\xd3\xa4\xab\xdd\xda\xe1\x89\xb4Z^b\xb4\x8d\x08\xd3U\xdc\xff\x00\xef\xd3\x05\xa8\xdb,js\x81\xf8^\x8d\xb9|\xff\x00\x17N\xaa}\x96\x93r1sk\xad\xbf\xff\x00\xfc\x03\t(\xc5EQ\x9c\xbb\xbbKu\x17\x1d\xf9\xeb\xaaB\xa6\xfeNB:\xa2\xf2M\xe7N*\x83H\x19y\x10\x1e;\x14\x01^\xbc\x01C\xa9\x80\xc6\xec\xba\x0e?\xe1\rT\xbe\x98\x1d\x85\x0f7\xbc1h\n\xa2\n:\x9c\xb9l\x89\x13!>+\xa1~\x9a\xe9\x89\xf5\x01O\x1dK\x85%\\\xe9C\xab<\\9\x84\xfa\x9b\xa2(W\x97~\x88\xe9\xd8\x07Gyo\x9a\xf8\xf6j=R\xdbi\xf3\xc6\x88s\xab\xcc\xf5\xc5Q\x9b\x90N\xbe\xfe\xa1\xb2\x9e\xbbf\x9b\xd7\xa6}\x870\xf6N\x94\xd9Cv\x98N\xe3\xf3u\xa2D\xc2\x13\x16mu\xdc\x04\xde\xe6\xae\xd4\xb9\x0fA\x94\x16_\xef\xaa\xb7\xe0AJ{eB\xc2\xe7Z\xbc"\xac\x85\xe0\xe0H>$\xe7\xfd\xf7\x96CT\xcd\x993\xed\x87\x89\xb4\xcb\xae\xbdK\'0\x8d#P\xb5$zvh\xd7\xafB\x1fYYO\x0ecD\xcf\x08\xdc-UK\xa6\xbb\xa6\x1fG\xc7>\xbc\xb6\xcf6\xfd\xf8P\xd8\x8e>\xdc\xf9;\xda\xdc\xe6s4\x9e\xd8\x11\xa3j\xf2SI\x0c\xed\x7f\xd1\xc1;\xe8\x940\xb7v\xd0\x9e\xdc\xd4\xca\xee?c\x8e\\c\x82\xc5\xa1&\xf2}=\xb4\x9b2\xf3\xcb\n\x82\xd54\x91\xdfx\xdeVyc\x7f\xb4\x03>%\xb0\x0c\xd4\x7f\x93\xb7!Qb\xb4{\x16\xc8\x94\x94a\xb3\xf4\xf2J\x93S\x98\xf1\xec\xaf\xbc\x8f\xb1\xa5\xa8\x05\xda\x9d\\\xa8e\xfb\x10\x91n\xe9\xefei\x81\x1d-\xa5l\x06bi\xebF\xefX\xd1#c\x9a\xf0\xe6]\x7fXK\xa7\x01\x8fC\xe4j\x88W\xb9\x99\xfe\x8d \x97\x92m\xb7v\xc0Q \x02[\x80\xa9\xd7\xfe\x0bwY\xfc\xb4\x18)\x94\xdc\x02\xe8L\x11\x19\x1ao9\xda\xdb\x85s\xfb6\xaf\xc1\x0c\xd5\x8d\xdb\xa3\x11\'\xdf\x7f\xa4\xf3r\xbd\xd82B\x13d\xd3d\x12\x94Z4\x11\x95^\xeb\xc2\xce\x88\xaa\xd9\xd1:\xc9\x16\x94\x1f\'\xe6\xdc\xa0~\x14<\xdb\xdeUq\xe2\xbf\xde\x04\xf4\x04[\x1b,\xce`\xcbmN\xec\x04U\x9d\x8c\x19\xd6#\x04\xfd\xe0H\xc4,\x03\xb5\xd1\xf1\x1cbS\xbd\xa9\xf3\x9e\xac\x04^\xee\x8f\xdcl\x96\xf2-Hk\x90\xd5\x7f\xfcn\xd3$\xd1\x0eZ\xaf\x94L\xca-\x05|\x0f\x02\x15\xb2\xff\x00V]tY\x149K^b\xe3mm\xcc\x9e,\xe9\x82^\xb2\x81=\xebX\xa1\'\xe3!\xd1\xdaY\x88\xc8\x07\x8d\xcf\xae\x88O7\x0fL\x10ZT\x8fXJ\xcb,/~\x88\xaf[\x96@\xdd\xe6\x19 "\x8b\xb0\xc4\xbc<C\xda\xfc\xba\xf7E\x12\xab\xe2\xf4\xe5\xec7\xe2&`\x90\x06\xe9\x00\xbdK\xb3B\xc2\x01\x1e\x80\x98\xa2\xc5\x03L\xfd\xa0 \xf4\xa4\xe0V_\xf9u:\xfe\xa9ri\n\xb4\xd0\xc2JR~\xd5\xc5\xb5\xda\x9fh\xdb\xfd\x80sZ\x01\xabw{!\xe8\xfa\x80\x94\xd9o\xb4\xc0E;\x1a\xdf{((\x05\xac\x8f\xaa\xdaC\x9e[F\x95\x1a(A\\i6\xdd\x84\xb5Tm\xa5\x90!Z\xdf{\xae\xaa\x86\xe8H\xd5\x85\xd0\xed#U\xd7b\xdbI\xa2Ka\xa8\xb1\xb3\x044\xdc\xec\xbb\x13\xdf\x19lC\xda\xa38\xe4mw\xdd\xa3\x8dX\xec\xd8\xf2\xfe\x8a\xf9\x9d\'\t\xfd\xa6g\xab\xf1\x90\xd3\x88#4t\xe0\xd1$\x10\x8d\xb0I\xb9\xff\x00\xed\x1eO>\xa12l\x94\\A\x1b\x19\x8f\x0e4\xa2tJ&\xd2f\xc9;\xdf\x12L]\xdb\xdfm\x9cc\xcc\xc7(\x84~\\bU\xf3{\xc7\x07,\xa1\t"\x10\xaa\xdbq\x0e\xf5\x07Sx\xe7\xae\xc4\xec\x17\t\'\xbc\x15\x03*\xf3C\x91e\xbf\x86\xdd\xf3\x0f\xbe\xbb)vZ\xd0\x18(N@\xd1\xaf\x85N\x99\x04\xab\xfc$\xf3@\xa9N\x06.\xb1\xecq\x9f\x81/\xabP\x946\x04\xe61\xfa\xcf\xe7\x87/\x82}o2\x1dl\xbem\xa0\x04\xac\xae\xb4|A__"\xb1\xc4\xae\xe6\xdd+\x0b_l\xdb\x13\x19<\xa2rS;\x12\x86\x96\xf7\x02\xaa\xd8\xa3\x1av\xff\x00\xde\xce{\x8c\xf6d:\x91\xf6[f\xc4\x08a\x91\xc9%1\xf0Bk\x1c\xbb\x9e6\xc9\x0c\x96/\xcd)\xa4\n\xd0\xa5M\xd1\x99p\xf5l\xf6\xb5\xeb\xa31\x97\x1b\\\xe52I\x7f/\xd5\x00\xf4\xbev\x9e\xed#yIc\xf5]\xed\xcd\xf7\xa2\xe0\xed\xe8u\xcf\xe2f\xe2w5q\xbb2\xc4\xe6\xd3c\xff\xc4\x00)\x11\x00\x03\x01\x00\x02\x02\x02\x01\x03\x05\x01\x01\x01\x00\x00\x00\x00\x01\x11\x10 !1AQa0q\x91\xf0@\x81\xa1\xb1\xd1\xe1\xc1\xf1\xff\xda\x00\x08\x01\x03\x01\x01?\x10\xec\x1dpn\xce\x87g\xa1\x10^{<\x84\'\xe8\xa3}\xf1\xa9\xe3\x95\xa2bg\x9c\xf5\xa4\x96F\xeca\xc4\xfb\xc3A\xba<1\xba<\x8b\xd0\xbdrf"bD\xc5\xa8Z\xb2\xf1|o\xe0|\xd8\xc6<\xb64}g\xd6yQ\xb5\xd1\x14\xc6\x84\x1f\x8a\x8f v\n*\x887cc\xc2;\x12& \xa5\xf0\xe0\xbf\xab\x1d\xb3\xbd\xb1\x86\x18Lb\xe4Qz\xd9\xab<0\x92\x82\x1fC\t\x94y\x04Aa\xe3\x9f2\xf6!\rcq\x0ffPk\xba\xf3\x85\x10\xf0=\x8f\xd1\xd1\x97\x04\x14h\x84\xc9\xa9\x0b&"b\x17\xf4\xedc\xe0\xf6]\xc5\xc5y\x1d.\x90\xfb\x1a\x1a\x17\x88\x86\xf9\x1d\xbb/\x801\xf9\x18\xd9q\xfc\x89Rg\xb2mAOo\xfd\r\x97\xd7\xb6$\x10\xc3\x0c0\xd8\x80H\x86)"\xe7v"\x08\xa5\xf9\x1a\x0b\xb6P,\x12\x0b\xb4!cE\xd3H\x9abhZ\xfc\x10n\x0c7G\x96\xad\xd8\x87\xa8\xddc\xde\xcf\xa3\xb0N\xc5\x1a\x12\xc9\xb3V.K\x9d/\x17\xc5\xf1\x9c\xda,\xca\x08]\xb3\xaf\x01\xf7\x91\xbf\x18\x8b^q\x1a \xdb~F\xc6\xc6\xc6\xf2\xe2Z\xc4\x85\x17H\xe8^\x90\xbc\xc2\xa9\x0b\xae\x86\x18a12\x95\xc1\xf7\x9d]\rl\xfb\t\x8b\xae\xde\xc1B\xafz\x92\x9fq\xd8$k\xb4\x9a\'\xd0\xbb\x1ff$C\x12,Q\xe0Qy\xa8eF\x1cd)vX8\xdd\x8d\x9d\x82v(\xf1"bD\xe4\xb6b\xc4M\x9f\xd1\xde\x0c\x87v\x8cN\xc4{\x16\x88\xf2\x1fQ\xdb\xf27\x06\x1b\x1b<\x8d\x8d\xdd[\xd8A\t\xd1A\xf6\xc5\xa8Q|\x7f?\xe0\x98\xc3\x0c0\xc5\x1c\x85i\x08\xc6\xb1\xb3cWbq8\xdck\xc0\xb4\x1aFj\x9eN\x04\x06M\x0f\xect\x1b\xe4Y[xc\xfb\x90+\x95::\xf1\xae=\xa4U<"\xca\xe5G\xa4\xba;\xb0\x82v4$LK\x9a\xd5\x8b\xf0?\xe8\x1f4\xa9B\x08E8\xb9\xe4\'~\x0f\xd7\x1b\x1b\x1b\x18\xdc\x1b\xa7z\x85\x88A\x04>\x98Cu\x05\xf4T1hLa\x86\x18\xa4\x84Xb\x04\x82B>\x08$\x82D\xa4\x9d\xc6\xa4x:\xe7\xb0\x87\x8b\nGS\xf4\x8e\xc7e\x8d\x1e\xc6\xb1\xc3\xcb\x18\xba\x89b\xe2\xa8\x80\x90\xdc{\x1e\xd8\xd1\xeb`\x83\xf3\x90\x98\xb6d\xe0\xbf\r\xe6\xf9^\x0f\x1f\x15\x16A\xe2Gc\xd8\x1b\xbf\x07^\xc4\xd1F(\xfd1\xb87yR\x89\xe1s\x03\xe6\xff\x00\xd7b\xeb\xb2\xd3\xdb\x12(\x84!1\x0cRc@\xc1\xe3\xb5\x8c\x1eT\x10O\xc9\x1f$|\x89~H\xf9 Y\x1f\'\x1f*{>\xd2\x9e\xcf\xbc\xfb\x07\xf3\r\xa3L6d\xd7\xd0\xd5\x9d\x94H\x84\x88H$CBYBB*\x0cv\x1a!8M\x99?\xab\xf3\xaf\x92v!\xe2\x87\xd2BS\xb1\xb2\x89\x94\xa3e(\xde\xbde)\xd8\xf3\xcf\x81O\x8a\xbf\xd9}\x13/?\xcf\xf8$PB\xc2ci\xbf#FM\x9e\xc6M\x83\xf9\x8f\xb0\xfb\x07\xf3\x17\xf2}\xc7\xdc}\xc7\xd8}\xdf\x8a  L&/\xe4O\xf2~\xb3\xf5\x0b\xec/\xb8\xbe\xe2\xfbe(\x89\x02\xf5\t\xde\xca{\x1a2\x05\xae\x8a\xe4\xf4z\xb2q\x99?\xae{\t\x82\x1epj\x88LlO.\x1b)v\x94g\x81\x94\xa3\xe1z;\x82>\xcb\xfdt$\x11w\xe1\xfc\xff\x00\xe0\x84!a\x84\xca66\xc6\xd9YYYYYJVR\x95\xf0\x15\x8b\xfc<\x14P\x9cNX\x9cN\'\x13\x89\x84\xdf"a?\xc8\x9f\xe4_0\x8b\xd27^\xccY9\xf8\xfe\xa9\x89\xf0\x98\x84\x10\xf3\x13\xad\xb2\x8cN\x14o\x1b\x19J]o[<\xb2\x9d\x0b\xd1W\xe2\x86\xbd\x8fM\xfdw\xad\xa1\x08B\xe8L\xa3X\xc7\xcd\xfeK\x9d\x89<HQ111`\x82\xc1`\x82(\xa0\x83\x0c\xb7\xc6p\x9c\xe8\x8aR\x94\xa5)JR\x97\xf1\xcd\xa5\xe0\x9d\x9dBD<S\xa0\xa5\xf5\xb4\xa3ce)JQ\xe3\x14AD\x10\xb0\xbez\x1f\x81\x1f?\xd0\x9e_:\x84&!i\x8d\x8cx\xc6\xf8]\xa5\xda]\xa1>(3\x02\x18\x85\xc1\x08B\x13.R\x97\x8a\xe2\xb8\xaf\xea\xe9\xe7\'\x08\'{[\x85>\x8aQ\x14\xa3czO)F\xc6\xc6\xc5\xe7*(\xba;\xbf\xbcQ\xa8}\x8b\x12Z\x84!i\x8cc\xd7\xaf\x95\xd8"\x8a\xc0\xff\x00\x048\xf05\xae\xd0\x83\xc0\xd7\x8f\x16\xa6-X\x9e,B\x7f\x97\xc7\t\xc2\x8c\xa5\xfc\x14\xa5/\x0b\xcae\xc7\x97\x17\xb12\xdd\xa4R\xe2\x10\xc6\xc67\xa9\x8f\xbc7F\xca!\xdc.Mt~\x84\xe8J\xe1<\xf5\xfc\xff\x00\xa7\xbdB\x10\x85\x8cle\xc6=z\xf210\x8a+#\xde\x11\xeb\x86\xbf+<\x97\xeb\x1b\xa7D\x18O\xac\x97\x91\x0bP\xb5b\x17\xe4\x9f\x92\xe3e)J_\xcd8L]\x8ax\x9d\x98\xddb\xf1l\xa5\x0b\xde]ccb}\x88(\x9de\xe2\xacc\x1b\xdfb\xd5|CX\x84,c\x18\xf1\xb1\xbeR\x88\xac\xd0L\xf07\x1e\xf2\x8e\xfc%:GJ\x87tC\xcb\xb3\xb9\xdc\x88\x83.\xec!\x0bf!b\x16.S\x12\xfc7\r\xd2\xbc\xa5\xe5F\xdb\xef\x15\x8a\xb8\xde\x14\xf3\xc8\xbd\x1e#{\x1b\xd9JQ3\xce@o\xe0\xa3b(\xd8\xc3c\x16\x10\xf0\xcd\xc2\xfd?q\x11\xfa|y\x9fo\x82\x10\x84"\x8cc\xc61\xe5\xe1B\x83\xba$z!\xaf\xca<\xc6O\x86\x1a\x0fkce*\x17\xa2\xd3"\xb1\x11\x13\xeb(,H\x9b8.\x0bW\xe1\xa5|h\xcaR\x94\xa5)r\xf0\xacL$\x7f\x91{\x17\xac7\x1c\xf0\xc4-ll\xa2\xc41\xb1\x8d\x8d\xe12Q:?R\xf7\x8aI\xec\x82\x88LX\x84,c\x1f\x17\xc1\t\x82\x90\x17\x86\xb0\x9a\xfaG\x90g`\xd4o=\x8d\x8c#\x0cC$\xce\xd7A\td\xc4\xb5\x13\x16O\xc7J\xf8R\xe5/\xe4\xa5\xe0\x9b_\x8c\x99^\x06\xe9!8&&Q\r\x8d\x8d\x94Z\xc6\xc66\\\xa8\x82\x1e\x11H\xbe\x12\x19D\x7f\x9f\xcaOC\xd5\x88B\xc61\x8c|\xd6{\xb4t&V\xd3./\xb1\xd1\xaf\x91\x07\x8co\x83\xb2\x16\x13&\xf2\x84\xd4\x8b\x8f)\x1eB\x13\x82\xc9\xf9\x1b-\xdb\xc1\x94\xa3e)~\nR\x89\xc2\x94\xa5\\n\xa6\xd0\xbeBw\x9a\x1ega\xef\x01\x14lb\x89\x08C\x18\xa3\r\xe9{\xc2\x1d\x11\x7f\xe4\xc4\xa8W\xfa\xfe\x7f\xcd\x84\x10\x84!c\x18\xc6<x\xf52\x04K\xaa"\xa8F\x88B\x0f\xb1\x87\xe4\x98\x7fB`\xff\x00\x84,\xbb\xa5\x94\x04\xb6\x10\x9b1l\xe7G\xdeR\xe5\x1b\x85+/\xe7\xbf\x80\x9bB\x15pK\xbd\x1f\xb2\xd6\xd9D\xc4\xca{\xc7\xd8\x90\x90\x8a1\xe1\xb8{\x12\xaf%\xdf\xe9\x85\x8b\xfa\x00\xff\x00h\xc7\xc5\x08B\xc61\x8f\x8b\xe0\xe3\x1d`\xf2.\x1a\x98\xc8\xb0\xc845\xf01:\x122\x1d\xc5\x1c\xfayH"\x13!6d\xe6\xc6\xf6\xeb|T\xa5)yR\x94\xbc..\xddN\t\xa7\xabd\xe2l],LLL\xa5\xeb\x16$661F\xa2\xf2(\x87@\x82\x93\x8f\x97\xfe\x87\xd9\xf7\x91\x15\xfb\x1a\xd8LB\x167\x86<|\xa1\xd0b!\xd2\x0bh\xec\x12\x13)\x8d\x1f\xae!\xe1)A\xeab\xcb\xa0c\x01d\xfcS\x85\x1b\xf8&<la\xbb\xb7\xf0R\xe5/*]LOn\xafG\x8bg\xf0(\xb1t&R\x89\x89\xebc\r\x8d\x94\xf2\x14R\xb0\xd1\x17T\xf4\xbf\xde9%\xecPK\xe0c\\V,lc\x1e>prM3\xc25$^\x12\x0e\x8dQ\xa1\xfd\x8d\x0ck\xb1\xf5\xbf\xb4\xf0*8\xf4\xf1\x84\xd9\xb3\x84\xe2\xdf{n7\x06\xf6\xed)JR\x94\xa5)r\x94\xa5\xe3u1>)\x9eYc\xa8\x8a!<\xa5\x1b\x13\x13\xc5\xca\x97\xa2\xe9\x04\xdb\xd1@.\xdc"\x1e?\x8f\xfec\x1a\x1a\xe4\xb1\xb1\xe3\xe0\xf8\xa3\xa6*\x11"\x87\xa8Hy\x1b\x8c\x9d\xc1\x13\x10}\x8d\xde;\xbc\xcb\xe0\xc9K&Bb!96=ln\xf1\xa3e\xdaR\x94\xa5)J\x8b\xc5<U\xb7\x81e\x16\x89\xc3\xba\xf2EP\x99G\x03\xc0\x98\x83\xc1JZ&(\x82f!\x03\x7f\x07s\xa5o\xd0\xfe\xad\xd7\xf3\xf6\xc6\x862pB\xc6\xc7\x8f\xf0\xac6\xa7\xd2R}\x881\xa1\x8chA4ZZd\x9d3\xa2\x9b\x985\x196\x10\x84!\t\xad\xcc\xf0<lo.\xb6<\xa5\xe3K\xf8\t\x89\xde\x14N\xed\xc4\xe7\x10\x9c\x1b\x8a\x8e\xbe\xca\xd0\xfc\xd6M\x8f\xe8LN\x97\x14\xdb\x8f!:\x14B\x087\xde\x14\xc8\xf2\x1e\xd8\xd645\x93V\xb7\x8cz\xf8\xd1\x0c&1&-\x04\xa8\xe81\xba3\xe8hkX\x1f\xc0\x9e\xc6\xcc!E\xbb\xe1P\x84!8<n\r\xe3\xc6\xc6\xf1\xf1l\xb9q\xb8_\x82\x94\xa5)J^7\x16\xeap\xbcS\x10\xc5\x1f\xa844v\x85\x85\t\xc2b\xa2ccx\xd8\xbb\xcapH\xf0!\xf4~\xb2>\xb8C\xc6BpZ\xf1\xb1\xeb\xe4\x84\xc6\x18\xaa\x9e\x01J\x10\xecy\xe4\x83BM\xbeC\xf2"\x82wI\xb2\x9e\x94\xd4y8>-\xe3\xd6\xf9\xb67\xad\x97\xf2\xde5\x89\xeawnx\x08^\x0e\xec\xa3D \xfa(Ep\x83\x14\xa7c\xb6\x10S\xc4h6\xe0\xf5\x1f\x93\xe2\xbf?\xcf\xf3\x8cx\xc6\x88Aqo\x8b\xd7\xc111\x86.\x16\x16B\xb4\xc7\xf26X61x\xfa\rvz\x82\x8dP\x88\'\xb2\x99.w\x1b\xe0\xc6\xbbq\xe3cwo&\xcaR\x94\xa8\xbc\xa9v\x97\x13\xd4\xf4L~II\xb2\x8c4X&Z\xa8\x9fx\xc5\x12\x89\x95\x8f\x0cj\xa2\xf9>>O\xe7\xfbc\xc7\xadp\x82D\x1b\x1f\x17\x8f\x8d\x13\x13\x1bPj\x07\xa2\xbf\x05\x1b,\x1cn1\xbc7\xc2\x83\xa1\x08|\x05\x1a\x82\x1e>-\xdco\x1b\x85\xc7\x8f\x1b\x1b\xcb\xc6\x97\xf0\xd2\xb2\x95\x17\x85\xe0\xa5\x13\xbaLLG\x8c\xf6M\x94a\x8b\x06\xc2\xc2\x82tA8f\x1e&8\x96\xb1\xe6\xfd\xbf\x9f\xecx\xf8N\x0b\x1b\xca]x\xf1\xe5\xc4\xc4\xc6\x18\x8b\x98\xd4BT\x1b\xbeK\xe8lo\xd8\xe3\x0c6Q\xb2\xeb"3;a1\xf0x\xd9u\xb87x<c|\x9b/\x1b\xb7\xf0&U\xb7S\x82e\x13\xb8B\x16\xa4A\xach\x84*13\xb4t\xebYO\x1e\x1a7C\x07\xe8\xfdN\xa7\xeeF\x0cx\xd0\xd6\xceM\xe5.\xbc|\x93\x18b\xc2\xbd\x0bWY6Q\xb1\x8e\x83cz\xca7c\xf0?\'p"\x1e\x1e2\x97\x1b\x83|\x1f\x9cx\xf1\xb1\xe5\xd6>7\xf0\xd2\xf1\xa5\xdb\xa9\xdc!<\xba\x9c\xd8B\x10t2\xf0>\x87\xed>\x8b\xa4A\x0f\xb1\xaa\x8fo\xf9\xfe\xc5\xd2\x83C\xc7\xf8 \xc6\xff\x00\x03\xe4\x84\xc4\xc7*\'/\x91h\xd8\xc6\xef\x0c~F1\xb1\x8c\xd94H\x99\xe5t5\xa7\xde\\u\xaco\x8cx\xf1\x8d\xf1c\xd7\xfd\x05\xe0\x98\x9f2\xeao\x10\xb1\x10\x84!\t\xa9\xd4h\'\x1a\xe5oE\x98\xc9^\x89\xfc\xff\x00\xe61\xeb\x1a!5,|\xa8\xff\x00\x11\x87$\xe9e\x18\xb7\xb2\xccu\r\xfc\x1d\x18c\x14}\r\x8f\xc5\x18\xfa\x19&Q\x0f\x81\xe3N\r\xc5\xcd\xe2\xef\x81\xfe\nR\x97nR\x97\x82\xd5\xc1G\x1a!1\x08LLO\x10\xb8B\r\x13ON\xce\xde\xc7$!\xe5j\x1a\xb3\xa0\xfb\x89\xcf\xe7\xf8\x1e1\xa2d\x19\x08%\xc2\xf3}\xed\xe2\x86\xc3\x91\x10\xab\x16\x12\xaa\x1fA\xb1\xb1\xb1\x87\xe4\xf2?\x91\xbe\xb5\x07D\x15\xa8A\xf9\xc7\x8d^\xb1\xbb\x8f\x1b\xc6\xfa\xd7\xb7\x95(\xdd\xe5x\xd6\'\x8b\xb7S\x82\xd2\xc2b\x13\xc4Q14^\x12\xe7\x83\xb1\xd4]\xe5\xd5vDg\xb3\xb0\xc6>\x97DW\xf3\xd9\x08A\xa2\x10\x84&\xc22\xed/+\x97V!\x86 \xc9\xa3\x16\xa2\xc9\x9d\x90\xa3\x1d\x1b\x1d\x1fN\x8cc\xc6\x87XT}\x88<}c\xc6\xf2\xe3x\xdc\x1b\xbc\x1b\x83|\xa9xQ\xb2\x94\xa5./\x1a\x8f#(\x9e&.\xf0\x9e\x13\xe2\xb5\t\xeas*\x1a\x1d\xd1\\\xfa\x10\xa6\x88N\x063\xe4\xb4\xfe~\xc4t\xf4\x86,\xa2\x8a+\x15\xc4ko\xe5X\x86\x18r\xc1\x02\xa8\x83\xa5\x1f\xa1\xe0e\x18\xdfx\xfc\xeb\xbc(\x93\x13\xaaa\x8d\xc1\xbd~1\xe3x\xdc\x1fo\x1e\xb7\xaf\x83yJQ\xfe\x14\xe0\x99v\xc2\xa7\xab\x80\xb8\xa5(\x9d\xc4\xf1btC\x11F\xe0\xdd\x1a\xa2\x08A\x9d\x18\xfaD7b\xbf@\xbb\xfe~\xc7\x88\xf9 \xc7}/\x1f\xa3\x1b\xd7\xc6\xf0X\xb8\x18n\xc8\x1d@\xb5\x16]\x96\x066?\xb1\x8fLxd \xba\x1fhz\xb9n\xd87\x8d\xf1on\xbd\xa3|\xa9r\xf2\xa2wS\xd4\xf1D\xc4\xca\'q12\x89\xc1:\'D\'\x0bF6\x89\x9d\xcbbt$JA(n\xc6\x1f\xe9R\x7f?g\x96_\x0f\x7f\x83\xc1\xfet!!\x0c0\xc5\x05HU2}1\xf9\x1fcc\xecxc\x1b\xc3\x8bv\x125\xd0\xf0\xf1\xb9\x97\x1e?\x1a\xf1\xbdz\xd9\xe3\x1b\x1b\xbco:^)\xeaz\x9c\x16)V\xa6,B\xca\\Z8\xce\xd9\x05\x84\xb1\x0b\xdd\x1b\xec[\x9b\xd2\xa3[\xec\xb7\xfc\xfe\xf4\x828G\x9b=4\x8d)r\x94\xa5)K\xc9\x08B\xc3\x0f\x85\x14bR\xa9\xa2\x92\x18\xd0\xc63\xc3\x1e\x94\xadR\xbac|\x18\xc6\xe6\xbcn\x0f\xbcz\xf5\xf1\x7f\xd0&\\\xa7\xbcLO\xd6\xb7\xacLLLO*\xd1\x878\xa5Dp\xb12`\xfaG\xeaN\x8e\x8b\xf0\x97\xfe\xff\x00\x9c\xe8]\x90\x94\x92\x06\x83\xe1\xf0@\xf2\xeb\xe4\xb8!b\x16\x18\x91\x16\'WC\x07\xc461\xbe\xc661\x8c\x7f\x03\xf216\x98\xb4\x14C\xec|.Q\xbb\x8f_|^Q\xb1\xbe\x0f\x8bp\xb0\xa5\x1b\x98N\xae\x0b\x82b\xc4-!4.\xca!14QF\xcb\x06;\x05\xdb\x14\x84&\'Dy\x17H1k\xf0\xdd\x7f\xa7\xf2\x89\x17\x85\x13<\xe3\x1a!\x08,c\xe1?\x04\xc4\x88B\x08C\r\x85Wb\xde\x8b\xdd\xa7\xe6\x8d\x8cn\x86\xca?\xacy\xd4\x15E\x1b\x1e\xbc~8\xbdl\xa5\xd67\xcd\xb8Z^tL[K\xb4Bb:,X\x8a!1<\xa3\x83\xf9`\x8f\xcb$\x82\x17bb\xd3\xf8\x1b\xb8^\xf4_\xf3\xfcl\xe8\x88\xa2e\xa5\x10\xb4Q\x8f\x83&\x90\x8c\x8c\x8c\x8c\x84!\x08$$$!\x08H\xc6\x1be\xba\x8b\x1e\xe1\xb1\x8d\xf5\xd0\xd8\xd9}\x8d\x8d\xe3\xc4\xe7e\xd0\xc3\x13\x83q{y7\xeb\xf07\xf9Q,T\'\xa9\xe4\x08\\(\x8a\\0\xe4`\xc6C\xb1\x08Byp\x9d\x8f\xb0\xdfe\x03\xdb\xfd\x7f\xfb?\xb1JQ2\xd1\x08\xbcf\xc0\xbf/\xe3\xba\x88$$ \xc3S\x89Y\nTc)F\xfb\x1b\x18\xc63\xce=\xca\x9ep\xc7\x8dQ\xa9\x8f\x1a\x1e2\x1d\x94\xa3cz\xf5\x8d\xf0o\x10R\xd4u\xc1\xb8E\x93\x9b\xddL\\+.\'\x0f\x91p\xcd\x1f8\x81!\x08X\x98\x98\x99\xe0^\xa9\xfatO\xbf\x8b\xfb\xf7\x89\x96\x88Nb||\x08x\x90\x90\x82\xb1W%\',o\x87\x03\xca\x9a\r\xc6PA`\xfd\r\xd0\xb4\xba\x1aho\xb1\x8chk\xe4\x87\x8e\t\x94C\x0cz\xd8\xf8\xbcx\xc7\x8fX\xd9JQ\xbd\xaf\x95.=\x0eD\xf3*\xc6\xc4.\xca\x85\xc5\xd9\xe3)KF\xca6S5\xd0\x8e\xf1\t\xeab\x17A\xf8\x16\x15\xecBBx\x85\x8b\x16\'\xc2c\x10C\xb8S\x11\x81\x0e\x85D\x83Q\x99\x8bE0\xc2\xb8\xa1nAF\x19\x0cy\x8b\xb3\xe9\x19n7)\rvQEb\xc6lTE\xe3c\xe3G\xd8\xd61\x8f\x1f\x06C\xa1\xd3\xc6.\xde0Hj\x9e$\x06\xc5\x99\xe1\xc16x\x94N\t\xe5.\\HAt.\xc4!\xbe\x84\xc4\xe7\x07a\xb9\xd6Q~\x93\xf9\xff\x00\xc1""\xeab\xc5\xc1qy\xf4\x13E\x8ac$\xa4!*#\xc0\x94J\xd8\x98-\xe8m\x13\x14\xf2CX\xab\xc1\x1a\x14v\xc4!\x06\xe8F(\xaa"B/c_\x03\x12\xe2b!\xa6\x1a\x1a\x9c)\x8a>\x1e1\xc66tTQ\xb4F|\x8b\xa5z)R.\xd2\xef\xbc\\|\x07\xe8\xec\x1a\xb1\xba\x17\x82\xf7\xb4Ce\xf6y>\xd8lN\x88$\xb1\x08Bx\x84\xe6\xa3\xccn\xb1\xbb\x85_\xf4\xfe\x7f\x8cB\x10\x84%qj\xc5\xacYCP\xc1\xe5\x83\x05F\xcfA\x85}\x8d\x9d\x88^\x06\xd2\x1a\xbe\xc4\x8b\xd8\x9b\x0f,\xf4u\x12\xbf"E\xd3\x14yJt\xce\xc3B\x04z\xe6H \x91\xa9\x08HHX\xd4\xf0Q\xbc\xf7\x9d\xe3d\xc6\xfa)\xb18\x98\xa5eq\xf7\xc3\x93\xa5\x85\xecO/E:)\xe0x\x92g`\xd5\x08\xf0\xc4%\xda(\x9d\xe1a\xdf\x91v \x82b<\xea\x94\xa2(\x98\x8e\xbd\x94B6\xf4\x8e\xed\xef\x10\x84#\xc0\xb1j[JR\xe2\xc3\xb8\xe8\x1a\x89b\x9450\x82c\xe4\x14\xba\x10\x87\x93{\xd0\xc4\xdf\xec.\x93\x16b6$\xc8%\x06!a\xc3\x13bB<Ba\xb3\x1a\x10\x84!\x0845\x085\x8e\x1e\x07\x8b\x1a \x91\x08:6\xc6\xc6\xc6\xd9\xe9\x8a\x14\x13\xa2D\x17/\x01z<\x86\x8e\x0fP\x98\xbb\xe0P\xb0\xf0R\xe0\x97gBb\x13+\x13\xa3b\xc4\xf1\t\xd3\xa8o\xa1\xfd}\xb1iBhLH\x84I\x05\xf2\t\x08\xf9#\xe4\x81 \xd0\x82\x08\'\x84\xcc\x1f\nS1\x8f$\x1a\x1fC\xbc\x0e1\x8d\xe8cO#D\xba:W\x88H\x84\x84\x0f\r\x1ab\tG{\xf5\x1fC\xcc\x83\xa1\x06\xb0\xd0\xd6R\xf0\x06\xc6\xf0\xd9J?\x02\x0f\xe5\x882\r\r\x0e\x06\x86\x86\x9d\x1eP\xcf\x0b\xc6A"\x10\x84b\xf41\xa3\xbc\x9b\xec\xea\'D.\xf0\x99D\xc6\xa9PP!j\xf1\x89\x9fb\x13\xcb\x97\xb2\x9eB\xe9A\xe2?qD\xa8DD\xfb)\xe0~aHrT\'^\x8a\x84\x9f\'\xe8\x05\xe6\x1cE\xe4\x84F\xee\x8f\xbc\x12 \x84\xc9&\x08\x0e^\xc4<\x9d\x85cBP\x88i\xe4i\xf04:\r^\x7f45\x98\x1f\xc4e\xa3\x18bLA\xa2!\xa45\x86?\x03x\xa2\xbc]\xa3hn\x90\x9a=\x0c>\xe3\x0c\xb2\xc3\np\xf8\t\x89\tr\x0e\xf8\xc0\x80\x82~\x84\xd5\xca\'\xf2[\x94L\xa5\x13LH\x87\xbcN\x89\xccN\xe2~\x8f\xd0N\x9d\xd8\xdfc\xd6\x90\xbd\xcb\n\xa1\xacb_g\x90\x98\xd8\xbb\x1d}\r#\x1b\xd5\xbd\x89\xa3\x0f\xcdB(\x86\xda\xa8\xd1\xfa\x1c=\xb4\x11\xdav$uD\x13\x88,\xf2)\x1d\x94E\x05\xb4+;\x1d\x8e\xc5\x13lBX\x8c0\xd0\x88\x88a\xb1\xb1\x8d\xb66\xc7J2\xe3c\x1e\x8f^<\x9ciJ\\k!\x03CB\x06\xa4\x88\x17E(\x98\x90Z\x87\xd9c\xb0H%\x05\xa4\xcf8\xb58.\xf2\x89\xa2\xfcb\xcf"\xf2\'\xa9\x96\x1f6U\xe4[bw\x10\xd3\xa0\xf4\xea;`\xe1\xa6\xbc\xe3O\x1fd\x7f\x81 \x90I\x08\x84BHH1\xb6V*!6P\x9b\x1d\x89\xb1R\x99BD(\x8b\x86\x90a\xa0\xc4\xa1\x86\xc6\xc6\xc6\xc6\xc7\x93^1\x10\xc3\r\xf6x\xb6+F\xc3P\x9a\x8e\xc8\xc9\x8f\x0f.R\x8f\x05\xa9\x04\x11a\xbb\x9e\x04\xca(\x13\xd4\xc4\xc4\xc5\x89\x94LN\t\x89\x8b&$-\xa3\xc1N\x94S\xb1\x12\x14\xf7\x0faR#M\x10\x84\xc8B\x13&\xf6(\x18Q\x98dLA\x04\x99\x18\xd0\x87a\x0c3\xc1\xd0e\x86\x19h\x86#\x83z\xa1\x8d\xa4v\x18a\x86\xe3\x14\x8bD\x84\x98a\x96\x1a\x8d\x06\x83D2\xc3\x0e\x08Lx\xfe\xc7\x06>\x14\xef\x8b\xc4\xd8\xb1nP\x99F\xca?E\x82\xc5\x9f\xaf\n\'r\x89\xbcE\x16\xc4\xfca4\x94\xcb\xd4\x12\x02\x17\x93\xde.\xc2O\xb1\xeb\xb5\x88\x8c["\rs\x98e\xb1DggbLI\x891&$\xce\xe2*\x11!8A#\xf8\x0f`\xdb\x1d\x1d\xa4dddcC;\x93)YJ7J\x91\xe5\xefCA#Q\xa0\xd0hH\xd4h5cQ\x96(\xda* a\xb3\xe07\x064G\x8e\xc5c\xb8\xe0\xe8J%\xf0JB\x10h\x89\xd9\xdbd\xa3\xc1t&V\'\xe8Q\x14\\P\x98\x85\xd0\x84\xc4\xc4\xc4\xe9E\x94N\xb85\xea$K\xa1\xcc\xa3\x1b\x81\x16\x8f4"\x1c\xbb\xc2\xb5yX\xb5\r\x88\xc9\xc2\xd1Q\xaa\x104\x1a\x10~\x81}DQn\x84c\xa0\x98N&\x13\t\xc6\xc5d!\x06\x18lQZ=MB\x8d\x8cQ\xb6VW\x8c\xa2l=t<\xec\xb1\xd0\xd8~\xa5\x15O=\x8d\xb3\xb3\xf5\'\x1f=ko\xd6\x14;\xf2\xc9\xd1a[/be\x15G\x913\xc6O\x81\x93(\x9d\xecL\xa2\t\x8b\x13\x13\x13?R\xc1=&&"\xb11T\x9e\xe1\xba\x13\xa1_\x910K\xe1\x89\xe4\xcf^D\x1d\xa3\xc7\x8b~\x07\x8c\x1c\xfa\x18f\x8a\x16\x10$m2&$%\x89D\xa2A\xa1mtL\xec\x16TQN\x8b,\xaf\x82\x8b\xc9\xb9e\x94Q\xdb\x1d\xc6\x12\x90\xd5\xa3c\xc3\xe8Q\x86\\:)Q\xf6\xc3e\x1c\x0e\x0bG\xb5\x96\x9e\xb3\xc7+\x0f\x1d\x8b\x10\xa5:\xf4D?\x81\xda\xca\x8f\xb2_"B\xe0\xa8\xf3\xd1\'\x91V\'\n\xb1A12\x8b\x13\x10\x98\x9d\xc4\xc4\xef\x8cNhJz\x10\x9b^\x04\xa3\xa0\xf2\x98\x9b\xfa\x1a\x05\xe6\t_\x92\x83F!\x9f\x00\xf0\xbb\r\t\x167Dh\xb0L\x84\x16DW\xdd\x14\x10J%\x10,)hH\xd5\r\x06\x83\xf8\r\x10jkp\xf1\xda\x8fU(\xd8\xd8x\xc7\xc9\xa6\xc8G\x97\xd0\xf52=e\x1b\xc6\xd0\xde\x18\x9f\xa3\xa2\xf4D\xc6\xa0\xfa\x13.D4\xca\xca\xce\xc7\xa3\xc9\xf5\x97\xe0\xf91\xfcH\x94\x9d\xf5\xba\xca\'\x89\xfc\t\xc1 \x98\x84\xcb\x89\x89\x8d\xc4uO\xb1\xa7G\x93\xb4\x84\xc4\xcf8\x9b^\x04\x8f\x94J\xcb\xe6\x1b\xbc\x1d|1%\x13/"i\x89\x84\x96X\'b\x19\x06\x88Abe\xc8B\x08B\x1fg\x8co\xe3Xo_c\xf3\x8d\tP\xdf8\xf4\x97bT\x83CKa\xd0\xfe\xb5\xbco[\x1f\x14\xca5\x90i\r/#:c\xe8$N\x84&8\xce\x83\xeb\x13\x82J\x88\xbc\xa1{\x89$Q\x1eF\xd0\x95T\xf0/=\x9dz\x17]\x8d\xf4x\xd6<\x15\x12\x16!1?\x92\xa1\t\xb14Q18&x\x9f$\x8d/\x82\x01\xaf\x81\xacB\xe0\xbb+LL\x86\xaf8$bp\xa3"\xcb\x0b\x0b\xa2\x07\xd9\x08%\x88Bd!\x08N-\xa3\xa6>\x86\xb6\xe3\xcb\x94B\x10\xff\x00\x18\x82=\x0b[\xf8\xdb\x87\xc5\x95\x94\xbc>\x8a4x\xc2i\xf6>\xb1S\xa1\xb2\x94U\xe9\x91\xf9\'BDH\xe8t\x0b\xa5:\xa7\xf6\x12\x10\'\xf7\x08^\x18\x9a\xf9!\xf4)\xe0P\xa0\xbc\xd6|/e%J>\xc4\x87q\xc6GS\xb3\xa1t\x85\x81\x1eD\xc5I1\x07.\xc41\xd2=\x17e\xd94\xf6\x13\x82/y2\xb4$\t\x85\xf7?P\x97\x08\x84\xc4Lb\x04\x84\xc8\x88LOb"\x1e\xbc\xa3\x1b\xa3cx\xb7\x83%Hcc\xec\x87\x8f%(\xd8\xdd\xd67r\xe7\x81\xfdc\x1e\xdc\xbc\x19\xe3\xc0\xbdX\xfaP\xba\xf6":\xc5\xaf\x05\n{!\xd3 Y\xd5\xa17\xc0\xdb\xe0]\xf5\x08/#S\xc1\x8d\xf6\xd5\xe8\xf3\xec\xe8\xab\xd8\x9a\xf2_\xa1\n\xfe\x05\xf4\xc7gY\xdb\xea\x93\xec\xfd\x06(\x1a\xa4t\x1f \xf8\x10\x9di\xf6\t\xb6\xbd0g\xb6B\x12\t\x11|\x8d~\xfc\x8c\x9d!8X\x91\x8b\xb2A&A\x86\xb8z\xe5\x06]\x8d\xb2\xc6!Lp\xe8l\x8a\x1db]\x89\x13:!\xda.:l\xd9F-\x1b\x18\xd0\xc3\xc8l/\x91\x0cl\xb3\x1ey\xd0\xfaCe\x1b\xd6Q\xbcz\xde>\xb81\xbf\xc0\xd0\x9cu\x0e\xbe\xc2tGf7}\x12\x94\xf4!\xda\x1a\x7f"\xf6\x14|)?#B\x08DD_\x19J\xfeD\xdb\x9e\xb1\xf9\x9a\x12\x7f"\xeb\xd9K\x0fYf\x13(\x9c)YX\x9b++\x15\xf9\xe6\x9bB1\xf2K*dC\r>\t\x10\x84 \x91\xc1/\x92\x10\x90\x94{}d5P\xc3}BA\x0f\xc0\xa0\xca\xc6\xde*gC \xd6!\x07\xd9\x07J6tF>\x84b\xde\xc2Qe\x1b\xece\xe1F\xee7\x8d\xc1\xbe\xb2\x8f\x83\xa7\xd0Q\\\x04"\x08""\xf8:Y\xd9^\xf8\xcb\xc1\x97=\x0b\xa3\xaf$\x13+\x1c+\xf6\xcb\xd9\xe7\x17c\xe8\xeal!1B"p\xa2)E\xabh\x98J\xfc\x89\x18\xa3\x1a\xbdhI\x90\x84cm#\x18\xdfb\xf8\x89\xda\x1bT;Z\xc6\xba\xa3V\xad\x1aB\xfc\x08\xf3\xa1\xa1\xb2\xb2\xd3\xc7x\xf6\x08\x14\xa5*\xf0=h\x83CGh\xa4:\xe8\xed1\xb9\x9ex\xb7\xf6U\xf2G\xc8\xd0\x81\xa3\xf4T_\xacyX\xe9\xfa\x9eJ\x8a\xbeH~\xf2?\x87\xfb\x1fk\xf6g\xdc\xfd\x8f\xb9\xfb\x1fc\xfc\x7f\xd1\x7f"\xff\x00\xa5?\xf4\x8f\xab\xfc\x9fZ\xfd\xff\x00\xf0\xfd\x1f\xe7\xf6>\xe4}#\xf8\x17\xfe\x97\xef\xfc\x7f\xf4\xfe\x10\xfe\x08|\xad\xfe?\xe1\xf7\xbf\xe7\xf6#\xef\xfc\x9e\xff\x00\xfe\x9f\xc2\xbf\xfa4.\xff\x00\xdb=\x803xD$\x976&,O\x82\x17\x05\xabS\xc9\xc1ehN&;\tH**\x13GC\xef\x1b\x19 \x89\x0f\xf4;k\xa65\xae\x86\x065\xe0M5\xd1J\xa9_\xa3\xa1\x03tcp\x7fG\xd8\xf3\xe0j\xe1(K\xec^#\x1e\xb7O$\x1a\xc7\x18\xd3\x0b\xea\xc6\xaf"}3\xf8\xc8\x7f\x1f\xfa/\xeb\xfc\xa3\xe6_\xe4\xaf\xc7\xee&|\x7f?\xb1\xf7">\x85{S\xf9\xc3\xe7?w\xfc\x1f{\xfc\x7f\xc3\xe4o\xdcj\xf2\xff\x00\xc9\x1f\xff\x00I\xfc~\xe4_H\x8f\x84\x89\xf8K\xf6\xff\x00\xc1\xfck\xf6>\x9f\xf0|(\x89\xf5\x9fP\xd3\xe0\xfa#\xe8>\xb1\xb7\xd1o\x07\xf2\x85\xbf\xfc/\xf2_\xb0\x93|\x9e\xee\xcf\xd4\xcb\xe6?\x8d-\xed\r^P\xf9\xf0\xfe\x01\xd7\xdb\x0b\xae\x8f/\x17\x04\x8fy\xf4x \\\'\xb3\xc9upZ\x98\x99xY\xc2\x94\xacY\xac\xaf\xbfa\xf4\xda\xc0U\xed\x0e\x15\tUHIN\xfb#\xb0E\xeck\xd6?\xa1;\xd3\x1ah\xbfcw\xb2\x8d|\x15>\x86\xe0\x9d]\x8e4\xc4\xd1\xdbo\xee1$\x96V\xdfr\xde\xe3o\xbf\xee0\xbf\x1f~Y\x08N\xce\xbc\x9e\xcf@\xf9\xca3\xbc\xf4\x84|\x0c\xf8l\x8b\xf3\xfb\x93\xef\xfeO\xd5\xff\x00\'\xd0\xcbze=2\xfe\x8b\xf9G\xd0\\Y\x17\xf6|\xecW\t\xbd\xb2^\xf2_q7\xe1\x9fN)\x04\x9f\x03\xe8\x11\xf0\x85\xfaF\xbe\x90\x97\xd8\x93\xf9\x1d\xf2\xd9\xdf\xc8\xa3\xf6u\xf25\xec0\xd7\xe5\x89\xfb(\xfd\x0f(\xf5\xfe\x04Q\xbc:\xc4\xdf"o\xde\x10]\x97\xa8y\'5\x93\x8d\xc8R\xe3\xcb\xab\x12tJ\xa8\xfc\x10!\xe0W|\x8d/\x01\x94\xa2\x10\xfb:t3\xb7e\x8cb\xc7\x0f\x1d\x15F\xe0\xdd:\xf0\xca\xd7\x81\t\xbc\x0fY\xaf\xf67\xf1\xb7_\x1f\x08S\xebH\xfd\x0b\xf2u\x90i1\xa9a\x83\xafc\x06\xa2\x04S\xe8\xc7\xe7C\xfa\t^E\xd0\x11<\r\x1e\x84\x0f\xf5r~X/^\x93\xf8\x8a>\xd0\xfdLlH\xc3?A\xbf\xb2\xcacb\x8aP\xdb~G\x1eX\xd5{\x1bz\x1b=\x8d\x9f\x9f\xc9Jx\x04Z\xf21\'\x82l!D\xca\xc4\xef5\xd8\xb9%\xafn\xa7\xc1\xb7\xa14}\x93\xc4z\xcb\x10\xd5\xd6\xa7gcm\r\x89\xfa>\xa3~\xcb\xec\xb4\xe8o\xb1\x1688\x89\xf47\xb7_\x00\xa4\x88~x\x97]\x04\xc5K\xfb-\xe1\x93\xf2I\x03\xf8\r\xb1\xb0\xca\x86/\xc0\xc7\xf4\xc8xcox\xed\xd3b\x08!{)\xe5\x9f\x03#\xd8\xfdL\xa7\xb2^\xcf\x9d\x9f`\xd7\xec\x7f)\xf6\x0ed|<\xd5\xca\xa5Lk\xed\x8d\x03OC\xf4\x1e\xd0m\xbf\xc6\xfa)\xdb\x17\x84\x86\xfc\x8byg\xa4\x84.\x90\xeb!\t\xce\xb12\xe5\xd5\xd3\x17}\x97\x82q\x84\xd7\xc7\xca\x8cF\xbc\r\xc7cG\x81\x89\xed\r\x97\xa3\xd8\xbe\xc6\x85\xd0\xe4)\t\xf48+\xb4M[\x1a}\x0f[\xd5\xdb\x87\x91v7xc\x7f\xb3\xdec\x8d\x9fi\x1fg\xd8%\xfb>\xd3\xee\x1b\xfd\x9fx\xfeC\xee)\xec\xfb\x8f\xb8\x7f8\xfeS\xef>\xd3\xef\x1e\x05\xfc\xe5\x7f%\xb2\xca++++\xe6\x99"\xbf\xc7H>\x85\xf8<"\x18\xf2{L\xf0H\xfd\x0e\xc5\xe3\xb1\xa0\xe8\x8de/\x08NI\xbf|(\x9bBt\xf1\xe0\xb9x!?\x04)F\'\x864Q\xf64y\x1f\xc0\xfa<\n8\xd1\xf0\r\x12\xecK\x03\x8e\xc6\xf6\x8cCbo\xd1E\x15\x83v\xa3\xc7\xc1\x8f\x87|\xbc\x94\xb8\xd8\xde\xc4B~zT_Zv\xc5\xe2#\xd2\x1e\xd3\x11\xf2%\xf8G\xc3\x8f\xad\xf4\xa5\xd0\xd46K\xc0\xdd\x11\xa2\x97Q\x11\x08A.K\x13\x82tZ\x98\x9c\x13\xba\xd7\x015\x8c\xb1\x88Q\x8c\\\xf2:\x98\xd9\xe4cCpaN\x91l\xa1\xb1E\x0cL}\xe5\x1bgz\xf8\xbb\xb0\xa22\x8a(\x8c\xa2\x8a(\xb2\xcb,\xa22\x88\xc8\xc8\xf3\xb2\t221\xa7\xeb+\x08\x97\xacN\xf4&\xfa\x13\xfc\x9f+\x12|\xb2>\x85\xe2!*\xf0\x88"\x12:"\x19K\x88\xa5)\xd3\x1a1\xab\x120\xd9\rDe)q<\x84!\t\xc1\'\x15\x84\xae\x90\x84\xc9\x8a1\x8f\t\x89|\x0co\x1b\x19F1(\xd0\x8f,\r\x08c\\\xba\xb1b\x8b)\x8f\t\xb6\xc5\x8a\xbd\x8f\xec%\xf9\x1a\xfc\x8f\xe6\x12|\x90\xf6}\x87\xdc}\xe7\xde_\xdeI\x1b\xbfA\xf4\x0c\xdb\xbd\x0f\x07\xed\x18>\x00hZ\x89o\xaf\x80H\xf4$\xfa:z\xc5\x96Qe\xe5\xbb\x8d\x10u\r\xb2\x95\x89\x8d:vR\xb16R\xf8\xc5)\t\x1d\x88c-\x91h\x8d\x12\xf1S\xd9\x11\x11\x10\x91\x058!\x08a1*A\xa0\xd4\xe0\xcb\xeb/\xbc\xa2\x7f#\x83\x18\xdd\x1b)\xf6\x1b\xc6\x87\xd0\xd8\xd9\xd8\xe9\n1\xf04x\x1a\x1e?\xadc\x1fc\xe9B\x1d\xa3\xa0\x82\xf9\x14O\x1dk\xc8^,\x98\xb1\x8d\'\x88\xc9\x89\x89\xd2\xf2\xb8\x86\x8ca\x87\x84\xd8\x88$?\x02B\x196\x8e\x11<\xc3\x10\xc7\x03dQd\x99\xd1\xd0\x92\xc8DLx\xc4\xc4\xc8E\x04\xb144\x99\x08A\x8f\xa1\xf7\x94\xb9z\xc6>\xb1\xf1b{\xe3{\xd7\xe4\x98\xf5\x07\xd8\xfb&A\x8f\x1f\x04\xf0\x9b0R\x94\xba\xfa\xe39Lk\x08I\xe3\xf0^\x02\x19\xd1\xf5\xc34B\x10\x84<\x16\xf6\'u\x10\x82\\\x12\xc6\x83\xa1\xd8\xdd\r\x96\xc9Qa\x10\xf4.\xd8\x8c\xa6B\xa2%\x15l\xd9F<\xa2\xc65\xc0\xfa\xd61\x08K\xe3\x1b)Od\xe3\xd8\x82\xef\xb1\x90i\rQ\xc0\xd0\xd1\x18\xd12\x0fD{b\x94\xf3\x8d\x10\x83\\\xe6FBd \xbeD\x18h\x99u\x08B\xc80\xcc!\x084L\x82\xc5\x93\xb1#\xd1\xd1E\xd9\xdb-\x041\x9b/\x0c\xfd7[\xd4\t\x10HL!}\x0cx\xc9\xb7\xb86\x9a\x18\xc62\x8f\x83CC\x1fx\xc6^-\xf6Q\xba!\xa1\xaa2\x10j\r\x12\x10k\xd9\xe3 \xd1\xda\xf0.\xc7\x94\xc5.Q\x11g\xd1\xd0\xf8B\x08<!\x04\xa8\x96%\x8f\xc8\xdf\xad\xf3\xa8X\'E\x90x\xb0\xfe\x18\x84!\x0f\x02[OE\x17\xc6\xa7\x93\x80x\xbd\xb2I\x1e\xb8h\xbc`\x94&6y\xd66R\xc7\x87\x8f\xa2\xf5\xae\xa2\x97\x1c\x1a\xb8\xfcq\xb9\xe0}\xf0x\xf5\x8f\xa1\x9e\x0b\xd7\x062\x10\xa5tO\xb1;\xe0YyMB\xc7\xbe\n&.\x08A"\x13\x82bB\xe5\xd84HB\x13\x1d1\x08A#\xbdD\x16\xc2\'\xc0v\xfc\x08\x12!\x06\xf2\x94l\xb4c\xca\x84\xe9`\xc7\xaf\xe3h\xdd\xc7\x8cy\xe7_\x06A\xa1\xadb\x1e\x06B=k\x19\x06\x86\x86&&&R\xf4R\xf0\x9a\x9c\xd2\x97)g\x82\x94\x7f\x91>\x17)r\x10D\xc3D(\xa1\xa8N\xa8\x91>I\xb0\x82BW\x90/\x8a,\'\x1b\xcb\x8d\xc46>\x17\x1e1\x90\xa9\x0fz\xc7\xc2\xc2\x9f\xae\xb1\x8b^2\r\x10\x98\xfa?Q\xeb\xd9\x96\x0b\x04\xff\x00\xa2Y9\xad\x94BB\x13\x9d\xc4\xf8B\x10\x84\'\x14!!\x10\x84X\xac\x98a~\x00\xc7\xb2g\x82\x9eu\xeb\xc4\xfe\x07\xc1\xf61\xed\xd7\xc9\xe3<kCCC\xe9d\x1a&0\x97\xc9\t\x05\x89\xe5)\xe3\x9cDD!\t\x9exB\x88QG\xd8\x99\x085\xd4\x1a!D!3\xc0\x93]\x8b\x9c!8$x\xcaR\x9exB\x13\t\x10\xa3x\xfb\x1b\xef\x1e61\x8c\xbdeC|\x1f\xe0\xfdG\xf5\xc9\xbe\xf1\xf0|.1\x9e2\x13!\x06\x89\xc9e(\x9d\xe6\x85\x94]\x90\x93!\x08.hbg\x92b\x10\x83D\'4y\xe3\x04\xbb&,OS(\x99\x11\x04\x98\xb2\x17\x18\xdf\x0b\x0f\'X\xf2\xc1\xbb\x97+/\'\x8d\xe3<\x1d\x94\xbd\x17\x87\x82\xeb.\xbc|\'\x16\x86\x89\xc6\xed/\x04S\xacB\xc8B\x10H\x84\xe6\x84\'\xcb\xa2"~5\xd74\xa6,Z\xb3\xa1vA\x8a2\x97(\xf1\xbcln\x0f\x83(\xb8\xdd\x7f#=\x8f\xbcO\xa3\xac\xa3\xc7\xb4n\xf3\x88\xf1\xc2q\xf1\x93\x95:)J\xf7\xd9J\'\x97\x1fc\x17\t\xac\x98\xb12\x95\x1ex.+\x84\xbcf\xa5\xc1e\x12\xebP\xba\xc4\xca=o\x1e\xdcl\xba\xc6\xfe5\xf3c\\\x1a\xc67X\xdey\xd7\xf8e=\x8dM\x84\xe5\x06\xa0\xf8B\x94\xa2/\x1e\xc4\xfb\x13)r\xfejR\x94\\g\x05\xd0\xb8\xf9\xcb\x8b\x16%x"\x94\xa2e-\xdb\xaf(\xdd\x1e\xbd{\x05\xc2\x96\x90x\xfcg\\.\xbf?\x89\xf62p\x9c\xda!\x07\xb3(\x9e\xd2\x9dp\xbf9J]\xbf\x92\x94L\xf7\xberm\xd5\xa8\x9d\xf0\xb9\xe5\xca\x97\xac\xb8\xd9r\xed\xe4\xf9\\yg&?\xacc\xe0\xd9\xe7\xf03\xecl\xbf\xd0Bd\x1eR\xe5\xec\xa5(\x99S)J}\x9e\x04\xcaQ9\xf8\nBrLN\xfe\n,O\x16\xac]\xe5\xc6\xcaR\xe5\xcb\xc3\xc0\xf1\xbccx\xc7\x8c\xbf<+\x1e1\x8cc\x1f/c\xe1u\xd2\x9fe\xfcsfB\x0c\x93/\x1b\x0b\xc6\x94\xb9J,\xa5.X\'P\xb1r\x8b\x8d\xcaR\xe5\xe2\xb6\xed\x82yJTR\x96\x89\x97)iv\xeb{\xebX\xf2\x97\xa1\xbf\x8d\xef\x83\xe3q\xfe\x1b\xdc\x18k\xdf\xf4\xb3|\xe7\xac\xa5\x13.\xd2\x94\xb9r\xe2\x11\x05\xc2\xed\x17\xe0Oh\x99D\xe6\xa2\xde4\xb9qJR\x96\x94\xb4\xf1\xca\xeb\xdf%\xd7\xe4\xbc.\xdd}ryx\xbe\xff\x00/\xacO\xa3\xd7\x17\xe7\x83\xe4\xd1 \x9e)J\\\xa5/;\x0b3\xceM\xbc\xef\x0b\x94LN\xe5b\xc5\xb4\xac\xa5\xca\xcbr\x89\xe5\x85\xa5)\xe4\xbe\xc6\xcb\x97[\x85\xeam\xfc\x17io\x07\xaf.6[\xe0\x7f\x9a\x7fA\xf5\x9e<\xe2\xd4\xca\x85\xc2\x89\xe2(\x99u<ZT\xcb\xe8\xe8\xf0:x)v\xf0\xb8\x85\x88\xb9K\x88\xa5\xcb\x9e\xc6\xcb\xc9\x97\x87\xac\xb8\xc6?\x03\x1f\x1b\x8f\xce1\xf0g\xb1\xf8\xe1\x06?g\x81\xf4.\xd8\xd7\xe7\xf5DO\xe8g\x05\xe7=\xe5\xd4\xef[x\xd3\xd1J\xc4\xe9O|(\xc5\x9e\xcfg\x8cX\xb1\x0b\x10\xf1o\xff\xc4\x00*\x11\x00\x03\x00\x02\x02\x02\x02\x00\x07\x01\x01\x01\x01\x01\x00\x00\x00\x01\x11\x10! 1AQ0a@q\x81\x91\xa1\xb1\xf0\xc1\xe1\xd1P\xf1\xff\xda\x00\x08\x01\x02\x01\x01?\x10t\x8cE\xd8\xddbh\xe9\x99\x8b\x05\xd0\xc6\x18y\xb3A\xdb\x10\xd05\x10\xc4\xc3\xdbb\xeclj\xb4-b\xebI$!\x08\x8d\x16>E\xb2\xd7bD\xf2Y\xd4\xef\x8fq\x0f\x83\xc3b\x1f\x1ao\x84\'\x16\x89\x85\xcf\xa2\xfc\xa8\x94%\x0cc\x86\xb3\xb1f\xa5\xde6>F6\xab\xc4u!-\xecB\x0c\xaaQ\xfa\x08Cq\r\xc1\xbe\xcd\xdf\xd8]\x10\xd2\x15/\xf8\x1a\xff\x00\x8f\xf7\x10hcX\x88\xa1t6 \xe8$\xe6.\x8d\x08l1\xf3b:\x893\xce+\xa3\xa6\r\x86jM\x10\x94i\xc1\x0f`\x9b\x17Xy\t\x1e\x85\xdd\x10\x92\x13bh\xd1\x9a\xe0\xb1~Zu\xc5\x8dap5\xe8Y\x9f\x0c\xf8%\x9e\xf4\x0e\xbe\r\xa4(9\xbe\xd6=\xf6\x88_\x10B\t\ta\xe5uD\xc6\xe0\x86w\xbfK\xfb\x12\x87\xa8-\xfd\xb7\xff\x00\ne\xe1\xcf\xd8A\x06\x87\x8d\x8d\x16\x8fc\xdb\x18\x97EN\x8f\xa8{\r\xcbl`\xd9!\xe88x\xdcn\'\x1e\x06LL\xc7\xc1\x88#\x11\xe0\x95!\xb8\xeeM\xe8\xdc"j&\x86\xb8\xae\xb1D\xe9\xdd\xe3!)\xe4\x16!v?\xbc\x17C\xc5\xc5\xc3\xc3y|a8\xb5HN\r\rp\x9c\'\x19\xc5\xa6Y\xb6\xc9\x887\x04\xa1\xcd\x16\x9d\xe6\xfd\r\n\rQ\x04\x88$%\xe7\x17x\xecE\x8a\x15\xae\xc6\xce\xcfv!]+\xfb?\xfe1\x9d7\x91\x04\x18\xc7\x85\xa1Q\xfd\r\xbd\x11]\x0f\xeb\x89\x97\xbfBz/\xa9\x05\xd1^\x87z\x19:+\xd1\xf4\r\xe7E\xfa\x1b\xe8l\x1d\xa5\x08\x87A\x83\xbdb\xd91\x8d\xa1\xa1\x18\xee\xe0\xfa<\xb2\xa1\xdd\x0eB\xd0A\x1e\xd0\xc5IvA&v\x13B\xc8\xb9\xb2\xfc\xf7\x8c\xcc\xe1\x06\xb8N\rpl\x1b\x13\r\x88\xec=d\x13\xb7X\x9d\x10a\xa2\t\x10A,1\xe24F\x9e\x86\xbc\x1d\x059\xa3\xeb\xc1!\x9eI\xe7\xfb\xf9\x1a\x10b\x0ck\n\x1966\x85\x05!\x93A\x95\x04\xa1g;\x03X&\xe1\xe6\x9e\xa1a0P\x9ci%\x16\xefE^\x1fI>\xd13&\x9c"\xc9\x1dJ\xb6P}i\xa1\xd4\xa6\xe0\xee\x85\xb7\x05(H\xc6\xc5t\\<\xb67\xc1\xfc70\x8ch\xd9K\xc6\x13\x83\xd6_\t\x866\x10j\x0bAR(\x85\xb6\xac\x84\xa0hhhcTHHHZ\x18\xe8\x9b\x12\x12&\x8d\x06?<\xbf\xfd\x13BV\x90\xb1|*\xff\x00\xdf\x9by\x18\x83C!A\x87{c\r\'d\xbcZ\x89d\xae\xcd\t$w\xb1\xd7\x91C6g]\x89\x10\x90Q\xd0\xcd\n\x16\xd8\xe8\xa9\xb2\xe8\xd9\x1a,\x17QHA\t\xd9\xf0\x9c\xb3x~\x81\xa1m\x0b\xd8J\x16D\xfa\x13c\x0e,?\x9e\x94|n`jpy\x83Y\x83S\x9baBR\x91\xbe\x86\xdbf(Q\r\x86\xbc\x88 \xd1\x08B\t\x10\x83\to\x04\x868\xed;O\xd8\xaf\xecB\x9d\xe5\xa1\x10x\xd7\xfd\xe0\x10hx\xae\xc4v\xb6m\x92\x91\x8d<\x16\x15<\xeeJa \x90\x99YJ(\xaf\x06\xd0\xe2\x16\x84\xd5\x82E\xa2:\x14\xb3\xc3EC\xaf#VQ\x8d& EI\x88cV&+\x83\xe6\xf9\xb2p\x84\xc5)N\xc9\xce\x1de\xaf\x83\x84[:\x12\x12 \xd0\xd6G\xb1\xa1,$#\xeb\x10J\x8846\x87%\xa2\x9fk\xfe\x84\xf2^~\x91\xff\x00\xf3\xfe\x96\xcf.\x8d\x0f\x06 \xf0\x8an\rF+\x1a\xc7\x04b\xd3\x08\xf8_\xec\xb1\xb9e\x146^\x0b/\xd1e\xf9)\x11\xf96\x8d\x95\x94\'\x11l\xd8\x90\x90\x94\x16_;\xf8)\x9e\xc9\x98R\xe2\t\xe1\xa7\xc5\xf5\x87\x814\xc2B\rhy\x18\xc8B\x10\x9c\x12\xa2k\x83h\xecJ4&\x9f\xaf\xec]\x17\xbf\xa2\xff\x00~\xa3\xc1\xe0\xd6\ra,$\x84\x8d\t!$\xc4\x82A!\x02L\xf3\x84\x10Nx\xca\xb8\xe5\x89\x1e7\x89\xa1$\x10<,<\x84\x84\xa0\x85\x8b\xce\xfe\x11\x933-Q\xa9\xc2\xe1\xac\xbc\x1ff\xa2H$$ \x98h2\r\x10\x98\x84&\x10K\x1b\xa3\x8fT\xf9\xd6)]\x12\xa5\x1e\xcf\xfb\xff\x00\xa8c\xe8c\xc12\xa5\x13\xc7gB\x16\x16\x11p\xb3\xd6V\xc8$DD4\x10C!\x8c0\xc4&\x0cW\x10|\x19A\x04^o\x13\x0f0\x99\x98\x84\xcc!\x08N4\xbc&fe\xc3\xc6lJ\xa1\xa7\x00AF<\xc1\x92\x90\x87D\x11qq\xa8\x84\xbdlQ\xcb\xbc\xb4)\xaa\xf4\x89\x7f\xbfH>\xf0\xc6 \xc6\x89\x84!\t2\x0b\x08\x82BD!\x08BR\x10H\xa9\r\x10\xe7\x03\x05\xe7\x86\xe3\x1a\x18\xc6\xb3\x07\x96\x88B\x13\xff\x00\xc1\x84\xe12\xca=\x91\xe5\xe1\xe4HH\xac\x12\x1a\x10x\xb1\xa2\t\x10B\x10d\xa2B\xe8z\x18q\xeb\x87\xec8\x82\\uO\xfd\xfc\x1fu<1\xa1\x8f\x89\x08B\x16;\x10\x84\xb2\x88$CCD5\xc2\xdca+\x03f\xc4\xe8\xb6\x1a\x0cc\x18\xd7\xc3?\x1b9\xc2ffb\x8dz\xcc\xcd\xf6$nlD\xc124B\t\x10\x84\xcc\x12(\xda\xc5\xa1*\x92G\xefbZ,\x1e\xa2\xff\x00~\xc3\xeb\x0cc\x18\xd7\x02\x16P\x85\xc1f\x11\x03T2\xdc\x7fq+\x03vm\x8d\xd0\xe9V1\xb2\xf2\xe1\xb4x\xbc\x1e_\xc5\x7f\x0119\xc2\x0f\x8c\xcb\\_*Sf\xa1\'\x86\xb0\xf5\xc1\x08A"\r\x10d\x12\xa2Phx<\xc7\xba\x12\x17\xa1\x1e\xd0{\xfe\xfd\x90\xf0\xc7\xd8\xf2<!\x08XHB\x16\x10\x87\x04FYb\x11\xe8\x1b\xb3a8\xf0\x84{<x\xd8\xf7\xb1]\x12)\x87\x8b\x87\x9e\xbf\r\x08$N\x13\xe3\x9c&fg\x07\x8a[&\x85\xa8\xb4\x1b$5\x8a\r\x0cB\th\x84!\t\xb1!!\x8f\x95\xaf\xcc\xaf\xec.\x89i\xe4\x96GK\xff\x00\x9f\xf3\x83\x18\xc6\x86Aa\x08B\x12&\x10\x86\xe0\xe5\x8d\xfb\x8c6}\x15\xb1;<!\x01\xd1!"\r\x1d\x84\xa8\x96\xe6\xb8EF\xf3r\xf1x^\x0f\xe2\x84\x17)\x88BB\x13\x08\xc9\xaeS\x83\xd6&^\x19\xd3\x04\xd9D\x12\x12\x13\x82d!\x08A\x84\xa0\xc8$2\x8a\xc6\xac,?J\x08Azw\xf6\xdf\xfc?3\xa7\xed\xa2\x8f\x0cc\x18\xc8t!\x08HK\x08B&.1M!;\x1c}\x11\xecB\xd4\x12\x08Z\xd1f{\r\xad\x9dqc-\xa7\x89\x87\xf1\xb7\xf2\xc2\x0b\x94!>8\x88\xbe\x03^\x8b\xc2f\xc476Ap>\xc3CX$$H\xf0\xc6\x88.\x87\x95\x04\x16\xb7\xb3b\x15\xd1\xbf\xc7\xf4V\xf6\xfb\xe0\xc641\xf7\x84,!\x08B\xe0\xba\x10\xea{\x0b!0\x89b\x8d\xa1aa\xa8\xda6T8\x9b\xce+\x9aR\xf1\xbf$\xc4\xe4\x89\xf8\x19\x84\x9cZ\xc5\xcb\xc6\n,TK\x8ah\x94j\x10H\x83D\x1f\xd0\x96O\x08\xc1\xa8\xc9\xa8J\xcb\xcf\xdb\xff\x00\x1f\xe4\xcb\xe3,c\xc3\xc9\x08B\x12\xc2\xca\xc2U\x92\x83 \xe0\xe3plLLh\xc4\xca&&0\xc6\xacz\xb4o\x18\x1b\xc0\xd9q~\'\xce\x13\x92\xe4\x88LLLL2\x13\x87d\xcb\xc3W\x83\xc1\x08$HJ\rk\n\xc1\x89\x13\x80\x83XJ\xe1\xe1\xa6\x0f\xa3w\xb1\x89\xa1k\x17\xe8\xd5\xff\x00~\xb7\t\xdc1\x8f\x0f%\x82\x10\x85\xae\x0b*(\xa4\x1c5\x9d\x07\x18\x85\x82g\xe6!\x0b\x03hC\xd0u\x86\xf21o\x1b\xce\xf3X\\\x17(O\x9e\x130k\x13\rQ\xa9\xc0\x91\xb1\t\t\t\xc2J\xc8$$H4M\r\r\x0bjA\xa1\xf0A\xa0\xbf\xa0\xbf\xb1"\xc1\xe5\xa1\xbfS_\xef\xd6\x8b\t\xe5\xe1\x8f\xac!\x08B\xe2\x84St(\x9a,xR1\x08\xfc\x841k\xc1\x0b\xa1hr\xaa7l\xd1\xc6@X\\R\xfc\xcb\x84\xe3\t\xf8I\x99\x86\x86\xb0\xd5&\x0fb\xd3u\x12\x13\x1b\xde=\x86%\xb2a\x10\x83C\xc4BD1\xe0\xc9\x8d\x06\x0b_o\xf4!U\xd4\x8d\xff\x00\xbf\x91\xae\x7f,b\xc5\xe0\xc7\x84!\x08XYXcgqMY&WL\xd0_\x07HLL\xbb\xd6\t\x8b\xa1`\xc6\xd8\x1fA<I\xd4?\xc6\xc2\x10\x98\x84\'\x08LBq\x99\x83\x1a\xc3YX\xa5\r\x90\xd4E\x0e \xc4\xc1!(5\xa1\x865\x88\xf0\xb1\xb8\xc8-\x9b\x0c\x9a\x99F-\xce\xf4\xff\x00~\xf8]\x14\xbcX\xcd\x08K(G\x8cL,\x1eM\x86\x8c\xe9\x1b\x0e\x84\xe0\xb4\xc6M\x88l\x16\x08D\x99\xb8l\xd0a\xbe\x0b\xf0\xaes\x84\xe1\x08B\x10\x84\xf8g\t\x99\x86\x88t\xc2k\x1a\x98\xa4+\x10\x9b$\x10K\x06\x86\xa1\xb0\xd5$\x1a6\x1a\xc1\xa4:\xafF\x8f\xb3\x16!vS{{\xff\x00\xbf\xf7\t\xe51\xe1\x8cxJe\x0b\x92\x18\x83\xecAD\x84\x8a!\x98\x96\x11\xd6\xc6\xc8\xb0LN\x97\xd0\xba\x8c8\x8b\xc2\xfc\x0b\x8a\xe12\xb1\x08L\xc2\x10\x9c\xa19>S\x0f\x04\xab,\xd2\x19\x84\xa0\xb7\x90\x9b\x14\x0c\x82D\xd0\xc64H5\x82D<\x13T\xab\x19*=lJ\x0cK\xe5\xa4h\xafH\x96S\xe4\xc7\x89\xa1\x08B\x10\xb0\xb8 \x82\x10<\xc2\xd3\xc4\xf4O\xc1\xe0\xe8BxV\x0bb\x18\xd525\x14A\x84\xef\xe0W\t\xf0/\x82b\x13\x133\x8c\xcc\xc3C\x1a\x13f\xe1\xa2AOf\x8f\x90\x83"7\x1b!1\x9fcB\x10k;\xd10\xa6\xc4\xac\xfd\x04\xa9\xb6\xf8\xdf\xfb\xf8>\xdd|/\x06\xe7\x04\xb0\x84!\x08B\x16 \xd0\x82\x08Q\t\t\x16[\x16\xd1\t\x04#\xd3"\xc2b/\xa6\x1e\xb8\x17\x94\xca\x17\x04\xb9\xa4/\xc2B\x10jfe\xeb\x0f\x0bX\x92\xb1\xd8\xd0\xdc\x13\xf9"l\xb1\x13\xd2V-D2x4$6c\xc1\x1e\xa4S\x17\xb7\xbd\x89Vj\xfe\x14_\xef\xd8\xb8\\)y\x10\x84\xb0\x84!bp\x10A\x0f \xb4\xf0<b1a\xd8\xe8-\xe4\xb41#Gu\x1a\xc2\x1b\xe2\\W4\x84\xbei\xf1B\x13\x8b\xc2\t\xb3@\x99q\x04\x1dB\x7f&\x84>\x84\xa3v\xb18!3165\x05tv\xdcX\x85\xd9=\xb3\xdf\xf7\xec\x8f8C\xe2\xc6<A!"a\x08X\x9c\x1a\x10A\x0b!#\xd1\x03\xc1\x89pGD\xb7\x87\x8c&\x10\x8a\xa1\xb2\xc1\xa8\xe0\xb8.is\\\x17\x05\xc9/\x03PD\x82P\x84 \x91\x06\x89\xca\x13\x13\x8a\xcd\x1a"\xd2\x97( \x84t$){\xc6\xd2>\x0e\x95d\x83D\xa4)\xbb\x04\xb4#\x8e\x10\xe9\xf0\xff\x00\x7fXX\xf1\xc9\x8f\x08H\x84\x12\xc2\x10\xb9 \x9e\x06\x8a\x12\x1a8t\x8e\x90\x90\x82BB\t\x08J\x90X"F\x8d\x0e\x94|E\xf0,\xa2|0\x9f#\xc4|ff\x18\x91\xa1\x8e\x8aQ2\xe5\xa2\x0c\x1e!\xa3\xa1"Q,\x96\x91\x0c\x16\x84\x84\x16\xb1,\xfa\x11\xf9\xc9\x7fc\xf3\x1b\xfa\xe5K\x97\x94\x84B\x13(\\&PhA(\x91\xd3y\xae!*A&$&\x84$-\x1ep\x84US\xbd\x8dG\xb1k\xe1Y\x9c\xd78"\x13\xe6\x98\x84\xe0\xf2\xce\xc2\x0b\xe7/\x16\x17%\xcb\x13\x8f\x0b\x13Aof\xed\x1fH\xd4(\x11\xb3\xb9\xb8\xc9\xb1\x13?\x01\xd7\xd8\xd4\x18\xb1\xd0\xf8\xbc$$B\x10\x82B\x10\xb184$\x10R]\r\x0f\xbc\x90\xfa\x12\x82[\x10\x90\x8f\x02\xc2\x10\x95C\xbd\x0cl\'x,.\x0b\x9a\xe6\x96\'\xc7>\x16\xb8<>\xce\xc5%\x93\x1e[)J\\2\xc1\xe9\xec\x88\x96\xce\x1851( Q\x0f\xb5<\xff\x00\x7f\'\x9c<\'\x99\x87\x87\x84\x84\xb11\t\x94\x89\xc5\x89\x82\x14\xd0\x91\x90x\xd0\x84-\x08B\x10\x8df\xaa\xa2\xaa\x94ap\\W(,\xac\xa4-s\x84\'9\xcd\xab\xc1\x8cBn\x89\x112\xf2\xc6t \x99h\xdeuf\xc2\xa0\x96$\xb4\xb1F\t\xa1"lO\xaaU\xfe\xbf\xe7\x842b\xf0xxHD&&P\xb8\xf5\x86\x844\x17\xce\x08=\x9b\xce\x81\x04\xb0\x90\x82YK\x08u\xa3\xbc\x8b$\x17%\x89\x99\xc2ee\x08\x9f\x83\x9c\xa6\x18\xc8u\x1d\x10\x84\xc3\\\xe9D\xc5\x8b$\x88\x8d[\xd3\x14(\xb3Dj$(O\x97\xfb\xfe\x97g\x8db\x95\r\xe6\x95\x17\x14\xa5\'\x08B\x13\x10\x9c\x1e\x1eD\xa8A\xa6\x99\xb4\x83D=\xe2\x08YB\xc2\x115*\x8b>\x14.3)p_\x86{\xc3\xe0\xd0\xc6#\xcd\xc5\xe1\xa2\x0f\x0cC\x10\x90\x90\x90\xd7E\xc6\xd7CWb\x9c\xd0\xef`\x96\xc4\xc3\xf0\x94\xa0\xde^\x17%/\x01\x18\xb5$D\xcc \x96\x17\x07\x87\x86%B\r\n)#qU\x08,,\xa2e\tQ\xe3d\xdd&\xf12\x96W\x14\xb9Bq\x9f\x1c\x1f\xc0\xd7\x17\x85\xd9!10\xd5\xc3\x1a\x1a!\r\x18\x9b\x10HJ\x1d\x0c6\x18\x8d\r\xc61\x08G\x9fz\xff\x00~\xe3{/\xc2\x03X>"D\xe18<=q \x94C\xa7\x85\xdd\x90Q!!\t\x08K\x0b\x0b\x15E\x16\x11\xa1a,\xa5\xc6\tr_\x1c:\x1f(Br\x84\xcfBSa$B\x13\x0ck\x0ccXK\x04\x12&\x86\x83\x0c\\YxM\xb7\xe8oz\xeb\x18|\x15\x8b\xc0\xbco\x8e\x84\xb1\x08NLxc\xc8\xb0BL\xf3\x94\xd6<\x0bYB\xd6V\x12\x9d\xd4\x8e\xd6\x12\xc2\xca\xe2\xb9\xae\x1d\x93\x9c\xf8\xa78\xf2L\th\x84\xc3D\x18\xd1\x06\x88"\x8a\xc0\x90x=\x18x\xa4c\xd9\x067\x9eZBc\xf0\x98\xbe@I#A\x86\x1eB\x13\x08$B\x10\x84!0\xf2\xf2b\x08-3I8H!a\x08_YB\xc5U*\x99fV\x12\xbcVfW%\xc6|\xcc\x9cZ\x1e\x13\x1c\x1a \xd1\x06\x885\x89D\x85\x81\x04\x86\x98\x1b\x18\xd0\xf1D\xc3\xf9\x97\xfb\xf8+\xbfee.\x0cQXQF\xd86+\x17\xc6\xd6\x1c\x1c\x1e\x18\xf0\x82\x08!&G"\x10\x84,\xac\xb5T!H\xecI\xc1.\x08\\\x90\xbf\x01\x08B\x13\x9c\xcb\x19\x0b3F\x10\x88a\xa1\xa2\x0c\x98!1\x0e\x91A\xb8\r\x1a"\x80\x95\xc19O\x85\x07\xa6\r\x10hh\x84\x1a\x84&\x1a\x1a6"e\x13\x9be\x18\xc6\xca\\l5\x82\x0bL\xeb\xc8\x0bB\x10\x84\x85\x95\x99\xa9dQ\x94\xb8\xac\xae4X_\x1c\xe7\t\xc5\xf2l$\x89\x884444*\x10HB\x10oE\x06\xf21\xa1\x8d(j\xdb(\xaf\xd6\xc6\xfdGM\xd9\x8d\x10hhhh\x83D\x1a\xc3CXM\x10I"B21\x184 lo\x03cf\xd8Q\x06\x84\x123\xc2Q\x13\xecK\tabae\xef\x1f\x9cH\xc4.+\x85\xe2\xb9.3\x13\x08k(\x99\x94X\x1c\x0f,J\xf1u\xc2\x0c\x84\x10K\x04\x85\xa1\xb1\xb1\x8ccT\x98e\x82\x0b\x08\xf1_\x08\x83CCCD\x1a\xc4\x1a\x1a \xd0\xd6F\xc3\n\xc5<;\xe3\x84]`\xc5,\x13\x13\x18\xc6 \xf1\x97\x1f\xc9 \x84\xb3\xde\'\x1a"\x02\xe1\xa1O\'\\\xae\x10\xb8R\xe6\xe1pK\x8a\xe6\xc4\xb2t\x8b0\xf0\xbb\xe2<\xc2\x10\x84\xc3cc\x18\xc7\x86A\x9d\x08\x87\xe6gJ\x06\x89\x83CXh\x84\x1a\x18\xc6<63\x1b\x1e\x0b\xe6\x02\xc1\xb8\x85\x1c\x0c\xactl\x1e\xc9\xbcY\xc2\x0cN\x8b\x92\xe3\xb8\xb2\xa3\x13\x1a\'\x05\xcab\x9777\n,R\x97\x8de\x16{\x14W\rBa\x93bVIg\xb2\x13\t\x8f\xac1\x86\xf0\xc6\xc61\xa1\xa1\xac=~\x84\xb6t="\xc6\x10cThhh\x98cC\x18\xf0\xb6PhH\x86\xf0X,\x14\xae\x02\x89\x8d\rp6&\xc4\xc6(\xc4(DH\x86\x9b\xc4\x9c\x95\x17\x14\xb8R\x8a\x99r\xe3\x86\xe8\x84!8\x04#(\xa2\r|\x0b\x8c\x166\xc1\xa7\x9aS\xb0\xba\x12BKG|1\t\xb1"\xcc\x12$\'\x06>\xc7\xb1\xe8c\x1e!\x06\x86\x8d\x10\xd4\x12S\xe8\xb5{\x7f\xd0\xd5\x98\xd1\x06\x8641\xacA\x8cc\x1e\x18X\xdd\x8eHx\xc2Bx\x12\x1a!\t\x04&@\xeb\xa1\xacB}Q\xab\xf1\x04\xde\x86\x06\xe8o\x8b\xcd{\x1d4&T\x15*\t\xbe\x02\x94\xa5)F\x93\x10\'\x13J\x13\t\xd8\x9b"+:|\x02\xb0\xac\x90\x84!\x110\x8e\xc2\xa5E\x83.{\x9b\x1a\x84\xd1\xdd\x8co!f\x0b\x0f,xc\xd8\xc8Llh\x83E\x86A"o\x840<\xb1\x8f\x0f\x0cd\x1e\x1eT\x84\x15\x16\x881\xad\xe2\xe1!l4B\x84\xcc\xb9Ea\xf5\x0bd\xd2\x81>\x02|\x0bJ(1\x94\xa0\xb9\xa6Es\xfe\xfa\x10\xac\x18\xd9A\xd8\x85\x04!)D@\x94J&\x0f\x14P\xfeS\xef\xb50\x9c\x16#d!\x04\xde\x1dN\xa7a\xe12A"\x1d\x0f\xb1\xe1\xe1\x8d\xc1\x8f0\x99hh\x82{\r\tW\xed\x8f\xd7\xdeX\xd8\xc7\x87\x86<1\xa1\xa2\nH"\x1d"d\x99\xdce\x13\x13\xf2\'qG\x92\xf7\x89\xd2,o\x15^\xfb <\x84\xae\xc51\xecHl\xd2\xc8\x8c,\x13 \x82D\xa4!\xaa\xd9#\xc05cR8$4X\xa0D\x90h\xd4(6*b\xc2BD\xc8\xb2\x18A\xe8cegd!\x08.\xce\xe3\xe8\xd8\xed\xc0t[\xc2\xfb\x1b\xf1\xc5\x8ccX\x83\x19\x0841\xea\xa2\x1a\xbdj\xfe\xe3X\xf44\xc6\xc51\xa3a\xb9\x1a)\x8d\x91E\r2\x86\xc3fV* \x82\x1a7`he\x82\x08-\x8a*\xec\xb6\xc4\xa3h\xe9\x94U1E\xb0\xdc>\xbc\x1fh\xc7\x93\xca\x1a\xed\r\xfb\x10\xf8\x94\x89\t!\x1f\x98k\x8c!\xfd\xb0k\xec\x7fa\x86\xc3f[\xf3\x83\xec\x17\xbb\x05\x8b\x14)\x95\x94&\xc4\xd8\x98\x84R\x89\x88Q11<\xbc\x18\xf19w A\x15C\x0cv\x13\x8c\x90\x82\x18\x95\x97\xd0\xdf\xb3\xcf&\x86L\xb4LA\xa1\x94\x99?\xd8\xa6\xf05\x19\x07\xf4,\xdc\xa67C\xbc\x1d\x1b\x12l9\xed\r\x0e\x96h\x9c\x0f\x80(Y\x8c\xb5\x1f\xa9dh\xad\t\x91\x0e\xc5%\xfb5\xf2(\xe9\x8d~F+\x86\xdb\n\x97\x91\xfb\x88y+\x0e\xc5\x96Y^\x06\xc3q\xb8\xca\xc4\xde\xf0\xa6%rO\x81\x14\xc2\xe0\t\x94LLAr\x00\xdc(|\xf2\x9aK\xa2\xc3tLR\x84\xe3\x10\xa4^\xc5;\x12\x92AJv4A\x90d&<\x8dF=\xecE\xbf\x85G\xba%\xb1(3\xc0\x9d\x89\xb1%\xb4&\xa8\xdb \x9a44\x9d\xb0\xce\xacl!B\xece<\x17\x12+\nP\xa7\xd1b\x19T\x19\r\xb1b\xcbDh\xd9Z\x13\x15\x83\x08&\xd8\x9c\x14\x160c\x1b\xb3b\x89\x89\x8b\xe0PT*\x14*\xc8\x90HTTR\x97\x10\x84\xcax\xb9\xac\xacA\xb1\x87Y\x1e\x1a\x1a61\xb66\x13\x8fC\x07\xa0\xcd\xe1"!\x06LB\x95\x96\x84\xc2dX\x82A0H\xcdp\x99\x84{\xc6\xdb\xde\x86;A)F/!~D\xd8\xd1S"\x16\xba6*\xf4TT\xf0\xda\xcb\x18\xe603\x19\x8d\x84l$"\xc3\x0e\t!\xcc\x18\xd9pm\xdd\tkb#\x12\x12\x131\xb3CP\xd46+\n&\x12\xe1\x04\x84\xc2mp\xfa\xd8\xa9X\x82\xc8\xbcQA\n<\x12,h\xa0\x9e \xc8NFy\x86\xa2\xd0\x98\x98\xc83\x84!\x08LL\x9f\x05t\x90\x99\t\xc4\xa2`\x99\xe4\xb4x\xa2\x06\xb1\x17\x98\x9a1\x8b\xb1(L\xb0\xa5e\xc8\x98L\xbf\x07n\x89\x92\xd0\xa0\xa5\xd8\xe8o\t\x8e\x0c6\xc7\x94\x88PVP\xb6\x07\xae:\x12I"\x11!\xc6\x10M\x91\x08,\x14Lt\xbb\xc4\xdae)J\xca(\x11E\x16\x1bl\xde\x13\x16\xf0\x98\x98\x99JR\xe6\xe2\x143\xb1\x0c\xd4\xd7\t\x04y)\xd8\xc3n\xc6\x88B\x13\x06\x96\x0f0j\x935\x89=1w\x84\x9e\x18T\xa6\xce>\xc4\xabCQ\x9bHL($bu\xd6\x14\x8c\xb4B\xc2e\x1b)J \x93\x1a"4\x86\xc6ChjH\x8b\xd7\x0bfR\x89\xa4@\x91"Q\x02\x9eO`d\xe0\xd0jo\x83\xa2\xa3!\x08B\x10\x82CL\x84dbL\x84\xc4 \xb0 \x90\x93bfQE\xe1E\x9bX\xa0\x98\xa2\xc5\x9bB\t\t\xc2E=\x92\xc6\x8f\x03\x11/\x04c\x0fh\xa3!\x8e\xf66CdL\xb4\xc9\x88B\x10hy5p\xd1\xab\xaf\xc0\xddCf\xc5\xf6\x1dP\xd6\x0c\xb4`U\t\xb0A\x87\xb4H\xc8\xc9JnP\x98LP\x98\xafx\xb2\xc32&\x9e\x1d\x06\x1a\x0cN\t\x94P\x9e\t\xfd\x96QE++\x06\xa2\xae\x12~<5\x19\xe1\xa2 \x82\x98\xa4c\xf2X$ \x94\x93QD(D:4\xe8\xa2\x82I\x8f\xd4i\xa6X!\xa3a\x8d\xa2\xa1\xa4\xca\r\x18\xdf\x03P\xc8\x9d\x08\xa5d\x06\x8c\x88\xd9\ra\t\x98B\x0fcS\r\r\n\x9f\xe9\x12\xd0\xa8{\x11\xa3e4\xc6\x8ce\xb9\xb4Q2\x10O\xecN#\xc8\x90\x912f\xe1\\#\xc5\x11\x06_\xb0\xd9q\xa3E)JQa\xd7\x87\xb2\x84b\x8a\x9avI(\x82H"4\xb1\xa2p\x98B\x11a0\x84\xe1\x12\x83\xfa+4\xc5{\t\xa0\xe8i\x85BFZ;\xe8l\x84\xe0\x94N\x8d\x18\xc6\xc2*\xcd3q\xba\xe8Uw\x81:CxKg\xa0n\x1ea\x1e\xc4\xbe\xc4\'\xd4=\x02C\rba\x8d\x0cx}\x8b\xf7\x8aX(&\xf0\xd2\x19n:\x8aB\xf7+\x12\xfa\x1b\x8cF\x8a\xd0\x99\x10H\x8470\xa9\x89\x9a\x1a\x1f\x05\x02\x8c,\xb6QE\x14&\xdf\x08L\xae\t\x1d\x90\xfa\x1b)E\x18\xdf$N)\x94\xa5\xe2\xa0\xf6\x115\xa1\xa6\x8e\x85D\xc8\x7fLI\x0fA \x9bB\t\xa65\xe85\x15\xa10\x91\x9acW\xd0\xd5\xe0\xac&]\x89\x1b+\t\x1fE!\\x\xc1\x02\x8e\x87\xba:\xe1\xb3@\xf6\x1d\xb6:_X\x06\xcb\xb1\x90\x83CC%\x1az\x88J\xee;\x1a\x19\xe0\xa6\x98\xd1\x8f\xd4lVY\xb9X\x84\x18\x82\x89\x9d0\x84\xcb\xb2\xfchd\x16\xb0\x84\x88,\xac,&>\xce\xa3b{\x86\xe8rDz(\x9ea\x08.\x13\x82\xe2\x98\xd4i\xc2;\x1a1)\x08\xa4G\xb1\x01\xa9\xd4G\xe4Z\x13\xa1\x0f\xb3\xc7\x1b.\x86\xc8U\rC]\x8d\x07\xa8l\xbc\t\x84\x88\xf6 \xd2;\x19\x07\xbd\x1d\x84^\x04\xea3\xd1\xb4zv\x0b\x08\x80\x8f\x01vG|\x95i\x89_XLF`\xe6i\x05"xx\x9a&\xf1p\xd1\x8f\xd0n\x89\xc5R\x8d\x96\x89\xe1b\xa2\xf2\xb8\x99\x84\xc2\x16f\xf9"L\xa0\xb0\xb1\xe2a\xc7\x85\xc9e|=e9\x81[\xf68\xa8\xaf\xd0\x89\xad\xa1\xa5\xc8N\x10OO\xa1\x0b\x84\x10&\xe8\x84\x9e\xf1\x90\xe9JZ\t1\xafH^F\x87\x14\x98\xd3\xa6!\xd2e4\x17\xd0\x8d\xe0L\x88N\x99\x0f\xc8\xe2]\x8d=\xa0\xfdRJ\x1a\xd3\x17\x9ccP\x97\xab\x18>\x8d{\x1bC\x86\xfc\t\xc2\x8b\x82\xbfF\x88JQ:\x19y"}\x11\x0f\xb1\x05\xb8j\xb1\xa3\xc6[\x1aPj\xc6[\xa23E\xc6\xcaR\x97\x13\x9b\xe0\xb2\x99r\xb0\xb8\xa1\xba\x17\xce\x18\x87cth\x84!0\x84\xb3\t\xc5p\x9c\x10\x99:\x87\xafH\xf6\xd1\xa7F\xd8\xee\xb2\x9d\x08\xf3\x85Zv3M\xd0\x92\xeb\xecw\x88^V\x8d{A\xa3\xb4\x1b\x17F@h{\xa8\xd1\xe44\xf4\x1a\xba\x1a\xf4\xa7\xa1\x07\xf5\x0c\r\xc6\xdeCn\xeb\xbf\xc9[\xc3\x12\x7f\x02`\x9f\xba \xc6\x111\xba\xed?u\xff\x00\xd1\xaf\xf9\xff\x00\x86\xfe_\xf2 \x93O\xfb?)rTG\xb5\xff\x00~\xa3\x95o\t\xa4P\x0f\xcc\xfd\x88\xd2\x1c\x18\x90C=\x18\x95\xa2\xa65:6V!\xd8\xc90\xfa\xcbcy\xc1"a\x05\xf6!\x89\xdcJB\x10\xeb\x13\t\x9e\xc9\x8b\xc2\x13\x14O\x1a.o\x16\x89\xf8\x95\x10\xd4{\x8azQ\xf8\x90{\x9b\x11\x89.\xd5\'\xb3\xf9/\xe1\x9fP\x9d\xe8^\xf4\'\x12>\xe6{[!\xe3\xf9!\xe3\xfb"\x1a:K\xf6\x14\x97r\xfd\n\xbacA\xfb}\x8e\x9b?S\xca\x12\xa1\x1d\xe3S\xb1 J\xc0c\xc6?\xa0k\xe8m\xdc>\x82/F\xbda\xa3\xce\x1a\x1a\x1a\xb1\x86\xe3a\xa6\xb2M1\xa1\xa81\xe1\xb1\xb2\x8b\xa1\x93\xc8\x93\xc3CX4#\xa2\xa2\x94\xa2b\x83K\xc12\x94\xcc\xc2\\.v(x\x83T\xb1>\x18L$,\xae\x11\xb1;\xc0\x9d\xd3\t\xa3\xe9\x17\xd26\xfa=\xc8G\x9f\xe0/+g\xdc\xc4i"~\x04\xf4\x93\xf6"\xf4\'\xe0\xacc\x1ef<\x9b\xcb\xd9\x1b\x14R\xd0y\xf3<\x11\x12\xe8~\x86,\xc7\x16\xcc\xac\xc2\x10\x84 \xd19\ra\x86\x8c\xf4\r\x96(x\x1b\xa3hlx\x13ECHA\x14m\x11\xd3\x13\xbd\r4V]\x16\xe6dh\x97\xa2{\x13t;B\x89\x88\x98\x9cQ`\x98\x9bLB,\xc1\xa2\x10M\xe0M\xe9\t\xfd0\x9c\x17\xa8M\xee\x0b\xce\xd0\xbd\x82\xf3\x05\xe4l\x8f\xb1#\xc0\x91\xe0$t\x82GI~\xc5\xf3\x06\xcaR\x08>\xe2\x1eQ\xf7\x9fy\xf6\x1fa\xf7\t\x98\x9e*}\x13\xe8\x7fS\xf2\x15\xe8^\xa2\xc2\x9e\x08\xde\x04\xff\x00\x1f\xc0\xa7_C\x8d-\xb1w\x1cB\x17lI.\xbe\x14\xa2\xb6\x10N\xf1|\x18\xf0\xd5\x18\xd9G\x1eY\x06\x1a\xb1\xfa\x8d\x86\xe3,#\x83\x08\xc84$\xc4!0\xb6\xa8n\xdb \x93\xf2\x84\x9c\xdf\xa3\xf2\xe1 \xa9\x04\xfd\xa19\xa4\x16\xbc\x0e-X\x04\x03n\xc8XD\x1a!\x19\x04\x84\xbd`\x87\xb0\xe1\xb0\xd0\xc6\xa7\xa8\xcb\xd8\x87I\x1e\x12\xfe\t\xf8\xc0\xd7\xd1\xb8\xac\x94N\xe8z\xd1~\x91n\x97\xf0W\xc7\xf0G\xf7\xfb\t\xde\xcf\xcf\x17\x91\x9fw\xf2W\xcf\xf2/h\xbc\x8c\xfb\xd1~B\xfb\x8b\xc8>\xd3\xed>\xe1\'\x04|\x08\r\xdd\xc1\xa4\xee\x15=\x12\xf2\x8f\xb9\x1e\x86}\xbf\xc1\x1d_\xe0k\xd8\xfc5\x8fBGv\x87H\xbe:\x86\xd0\xb4a\xa6\x8b\x92\xf1xyha\xe0\x98\x98k02\xech<q\xe7\x112B\xfb\xc46\xce\xbb\x13\xd0\x9c"d\xf1\x17C>\x98\xd5\xd1\x15\x886\xdb\xc0\x86\x85\xe8\x15\xc1\x03\xce\x1b\xbbXHH\xeb\xd7\x12\xbaSPk\xfa\x12Of\xc3\x9e\xcb\xb8C\xb4\xf4-\x89\x0f\xd5\x1a\xecM\xbd\t\x9e\x11\xf4#\xe9_\xc1\xaf\xaf\xe0\x87\xaf\xe0\x9f\x95\xfc\x1fK\xf8\x1a|\x0f\xae4p(\x1fE\x1a|\x9f\x9a9kc#\x81o\xa4\x8f\xa5\x0f\xc5\x07\xf5\x8f\xd8\x86\xdd\x86\xd5\xacF\xd7\x91\xeaw\xfa\x8d\xfaf{\x18\x99\xd0\xd1\xbd/\xe4h4\xf0\x8f\xca-\xba<\x00\x9fH\xef\x02\x9b\xd8\xe9\x97;\x9a@\xcb.\x04\x85\x86\x8ca\x86\xb3r\\\xbc\\\xbc\xb11\x06\xbd\rL\xb5\x06w\x9e\x84\xd3\x12\x18\x9f\xbcA+\xa1\xa6\x9e\x8d\xb4WCv\x84\xda\xd9\xd6\x8fJ-\x86Rc\x8e\x8a{\xd0J\xef\xb1R\xc2\xcf$,AwJ\xb1\x8b\xb4U\x9a\x08\x90\xa9\x8d\x89\xd0\x80\x99u\xff\x00\xc12cW\x96[\xff\x00\x18\xfd\x1b\x1a\x06\xcf\xc1\xb6+\x12\xe8H\xf0l\x10\x93\xd1\xdcg\xa5\x91<\x03I\xe4<dze\xbbcO\xbaOs\xee%\xec&>\xe6\xf8\xa8"\x90\x89v\x8a\t\x10\xbc\x03\xc1\x8f}\x8bw\x8e^\x07\xc1Jh4BQ1\xb3\xd0\xd0\x95\x12\x90$X\xa3Ha\xa1H\x8f\x8d)JQ\xbf\x85\xa2!\xa1\xa1\xa8L\xb7\xa2\xce\xcaS\xb1?\x02Q\x8f\xa1\xa3f\x92A#BQl\x93\x1b\xc36R\x89\xbadnV\x9e\xc8\xd8J6\x90K\x94\xf1vQ\xec]\xa8f\xe9\xa3f!\xf4\x14G\xe8\x84 \xd0\x91\x10\x84\xf4v\xa4^\x04\x8f\xc9\x87\xe44\xf0&~\x0b^\x0bx\x1f\x81\x1e\xc4}E\xfc\x1fI\x7f\x18\x8b\xd2\'\xf6\x17\x80\\z%<\x0b\xd44+\x06\xc9\xc6\x86\xbaG\x80;A}\xbc\xf1%t\x8e\xb1s\xd1q\xd1R\x1a!\x08H\xfd\x83\xbc\x15\xdb)\x89v&\xd0\xa4Apj\x8a2^\x86\x18a\xa23|k\xc5+(\xac\xa5)p\xd9F4AYq\x05S\x98HB\xdad\x84l5Q\xe3\x13\x82UJA\x86\x84\x86\xc6\x91A\xe7g\x9d\x89g\xb1)\x87%C\x1d~F\xf6&\xc4\x831\x86\x97Co\x83\xeb+\xe0\xfay\xd5:\xf5\x0b\xd2/I\xf5\x9fX\xbd\'\xd2O\xc0\xbd"\xf5\x1fA\xf5\x1fY\xf4\x9fI\xf4\x1fQ\xf4\x11\xe8\x8b\xd0\x92\'\x06\xe7`\x97\xe0J\xe9\x12|5\x10\x86\x81(o\x81\x83=\x0f\xca\x17\x98\xdfGhi\x1a\x18$bG\x86o\xc1B\xcdHAxA\x86!\x084Bq\xa3y|\x1b\xc4\x1a\x19D\xe9\x08B\xb3\xb3\xa6}\xa161\xb8\xcd\x8b\xe9\x92lI\xb6\x13\xb3\x16\x16U\x10\xd3F}g\xd3\x97Hu\x0b\x14O\x0b\x8e\x84\xf8\xc2\x10\x84\xcc!?\x01QQ\x08h%\rF>\xd1\xa3\xf2#\xd8\xd3\xd8\xd7\xc8\xcaI\x14\x14\x84[Q\xd1\x87M\xa1\xee5/b\x10J\xca\x8db\xbc\xa8\xac\xe8\xc2\xa1\xb4DB\r\x131\r\x10y\xa5/\x02:!\x8eF\xa1\xd8\x95D%$%$\x10\x9d\xc4\x91\x92b\xdb\xd8\xe8G\x01$\t\x08 HA\x04\x10A\x04\x12I\x02B\x08\xc8K\x8dG\xd8O*\x02I\'\x90\x01\x04\x92}\x84\x86\r^F\xa1\xfb\x86\xaf#G\x91\xfb\x87\xec\x1a\x8d\x99\xf7\r\x9e+,l>\xe3\xee/\xd9Br\xca/\x17\x94\x14\xec\xa0\xbb\xc8\x9d\x0cm\xe1\xe2\xa5\xd8\xac\x82\xa2\xfcb\x05\x1f\x16<R\x8f-\x95\x0e:\x11Xh\x90N\t\xdcA,h$\'0)\x89=\x07;\t\xfe\x06\x9f\x0c\xfc\xe2\rQ?\xcb\x19\xfc\x8f\xf6Dz\x91\xe84\x90H\xd0\x80\x947^\x05z\x16\x83G(\xc9\xf9\x19/"R\x07\xea#\xd0\x9f\x81\xa7\xc1\xf4a\xfaG\xcd\x8cI\x08\x16\t|VM\x0e\xd9\xe4l\xf27\xf9-\xe4u\xf9&\x10\x84!3\x08B\x13\xe2\x82GXH\x8d~E\xd8F\xfd1\xa6\xba+B\x9c\xd4\xa5)E\xe7\x92\n\x8aQ\xb1\xaaP\xd6[\xce\xb0\x86\x92\xd8\x98\xb0\xd5\x1a\xf3\x82T\x82X\x84\x12\x16\xb0/ \x91\x0e\xc6\x8d\x14\xb4bC\xc0\xcd\xcbF\xc1pZ&\xd1Q\x17b\x1e\xd0\x91\t\x96#\xc0\xc42\xd1\t\x99\x88Bs\xb8\xa5\xc2\x94\xb8\x84\xe51\x08%D\x8a\x19\xa22b|0\xb0M\xd1\x8c]\xe0V&\x10VV+2\x91\x84\x10R\xe0\x9d\x1d\xd0A\xc1\xb0\xdd\x11\x1a)K\x82\xec{YB\x12\x92\t\x8bb$!\t\x08t(,\xb0\x9f\t\x88\x8b\xc0\xec\xb0A\n\x0chCP\xe9\x94Bgc\xc2QLS\xe8\x80\xd9\x0cBb\x10\x84\'\xc38.\x10\x84\x127#\x17\x05\x08\xa7\x10\x81\xa6\x06\x86\xb19\xde4\x81:\x13!\x14\x82VlQr\x05\x05\xc0$>\xc4\xde\xf0\x14\xe8X\xc6\xc6\xc7\x82\x08\xef\t\xe50\xd0O\x0b\x84\x10\xd3\n\xec\xb9\xed\x10bb\r\x89\x94\x80\xe8a\x06\xee\np\xc0\xeb\x05\x03\xa1\xb2\x8d\x1e\x17\x05\x96Q\x19\x08B|W\x10\xa2\xb0\x95+\n\'\xec\x9cY\xa18\x99\r\xb1a\xee:\x1f\x15\xc9\xbcY\x8b\x8e\xf1D\xde\x04\xcb\n)p\xa1\xb1y\x93\x08\xc3\x04\x13!\xcc\xb9F\xc7\xccN\x9a\x1a\xa3B\xc1\xb0\x85\x96\x84\xa0\x9e\x14\x10\xb2\xf2\xf2Lu\x85)F\xca&B\xbcXB\x8d\xe0\x98\x98\xd2\x11\x83a\x86\x1a\x98o\xe4\x81\r\x10$@\xd6\x0c\xa5e\x15\x94QE)qJ^\x17\x8c\x1e\xb3HX^4\xa18\x9b:W\x82t \xa4Eb2\xc3e5\x89\xc1\t\xe2Q\xc0\xa8\x86\x16!8\xb7\x81\xb0\x9e^I\x94\xb9R\x94\x82\xc5)p\xc6.\xc4"\x9a"\x1a\n\x10L\xdeo(\x86\x12I\xb0\xd0a\xe2\x97\x0f\x17\x85\xe1JR\x977\x0ck\x14\xa5.)JR\xe1111\x112\r\x1b+)\x1aq\xcb\x82\xc4:\x1fb\x16\x84BQ\x84&\'\xe0Z)G\xc1\x10\x1212\xe2\x8cbs\r\x86.)D\xc4\xc7\x8b\x8a\'q\x04,R\xe0\xcfN\x16\xc7D\xe2\xb9R\x94\xa5)\x7f\rs\xbc\xb5p\x84\xc5.\x17\x02\x08 \x8c\x90T<4Bf\x94]a\x13D:\xc2\x13\xc3^\t\x05\x8a&\'\xce\xe0\xa2k\x83\xd6(\xd9K\xc51\xe2\x97\x14Ma<R\x94\xb8h\xf02\xe4j\x13\xf0\xef\xe0\x7f#\xcc\xc4\x1e\x17\xd9K\x8aR\xf9a\x08.!\x16E\x84\xf3\xdeT\x16\xca=\x90\\(\x9d\xcb\xc2e\xc11`\xd1\x06\xb8N(ll\xa5\x10\xb8\xb8R\xd2\x94\xa2e\xc3I\xe4Y\x84\xe5qF\xca_\x89\x94\xa6\xbe\x19\xc5\xe6\x94\xd0\xf3\t\xf0\xb6Q0\x8aA2\x94X)E\xf0!2\x8b\x13\x0b\x10E)G\x8a&&&!\xd8\xc6\x99\x06N\x10\x9ep\xd6^\x8b\x04\x13\x13)J\xc6\xe8\xd8\x82e/\x06\x83,\xb2\xe30\x9f\x05\xe7\xf7\xf3\xcc\xcf\x8e|\x10\x99\xb0\xaf8\xa1iJBbQ\xac"R\x08X\xb9\x82\\vB\x13)\x89\x88)\x885\x87\x95\x8d\xe2\x10j\x934\xa5\xe5J&R\xe2\x11\x0c\xb2\xcbq\xae\x13\x9d.i\xd7\xc5K\xc6|S\xe5\x84\xe1\xb2\xb4}\x8a\x89\x08C\xa3\xb2\x08C\xe2\x84\xf8\xcf8b\xc4\xc3bxLLL\xechh\x9c\x14\xe3\x08N\t\x94\xa5/\t\xc1pt2\xcb-\x86\xb9N(\x7f=/\x19\x89\x88B\x0f\xe7\x84!\x08A\xac\xc2g\xacNTY\xa7c\xe0\xd0\xc4&&!\t\xe1\xe2\x1deb\x10b!\x06\xb8R\x97\x8aw\x0b=\xf0i1\x96Y~\xa3\x13\x9d)qN\xff\x00\x078\xb1\xef\xe4\x99\xf1\x89\x88A\xa2R|\x1a\x16\x16\x10\x8b\x8e\xf3\x0e\xb8t,"\x94\xa2y\x84\x1a\xe7\xd6`\xd11D\xf1sD\xc4\xf1J\\\xdc1\xd0\xc3-\xd0\xe0h\x84\xe0\xe2\xecE\x1e\xfa7\xd1YJR\x97\xf0\x8f\xe3\x99\x99\x82D\x1a&\x89\xcabsL\xb8\xe8X\xa2\xe1\x05\x9a\\&v.\r\xc2\xe12\x94\xb4L\xa3\x12\x1a\xcap\xa5)p\xb4!K\nR\xf0O\x12\x8c:\xecj2\xc4!\x06\x88BC\xac\xd2\x97\x14\xbf?_$\x16 \x96\xc911\x0844Bb|\xa9\xec\xb8\xe8C\xef\x10\\\xd6h\x9f\x06>+\x93\xf6\xb3J\xf0\xa8\xb0L\xb8\xa5e\xd9p\xa5\xa5)q(\xc3C\xa1\x97\x04\xc4&a\x07\x94\\\xde=|\xac\x9cP\xb0\xb1\x08B\x10H\x83 \xd5\xc3\xcc(\xbe%\x89\x86\x89\xc5r\xb8\xa2xo\x0f\x17\x17\x82\xcfd\xc7\x91\xe2\x94\xa5\x9c\x02|)K\x9b\x96\x86\xc3\x0c\xb9\x18\x84!1<\xe2p\xa5\xcd\xc2/\x19\xca\x10\x84\x11\x08$$,N0J\xe2\xd1\x06\x86\x89\xc13y\xd1<\xa2\xfcw\x08\xa2be.g\x0b\x84\xcaR\xe1\xef\x0f\x85\xc5\xc2e\x13be.S)J,\xb40\xc3LYj\x13\x10h\x84\xf8)K\xf2\xc2\x13\x10K\x1330A"\r\x0c0\xc3CCD\xe1>\x04Qu\xc1\xe1\xfc+4\xb8O3\xe1\xeb\x94\'\x1b\x8aP\x9d\xc2|)JZ\\\xc3a\xa1\xd6\x86[\x93\x10\x84!\r\x9b \xb8\xd2\xe6\x9e~\x08L\xacA"\x99!\x116$%xA\xa1\xe1\x91?\x89a\x08Y\xb9\xf1\x97\xf0\xa7\x85\x85\xc1\xf1\xfa\x18\xc7\xc1\xf2\\h\x98\x9d\xc7YYLYC\x1a\x1e\xb0\xd2\x1aC\xc3\\|\xe6\x8b\x8a<c\xc7\xcd\xdb\x8c\x11O\xff\xc4\x00(\x10\x01\x00\x02\x02\x01\x04\x02\x01\x05\x01\x01\x01\x00\x00\x00\x00\x01\x00\x11!1A\x10Qaq\x81\x91\xa1 \xb1\xc1\xd1\xf0\xe1\xf10\xff\xda\x00\x08\x01\x01\x00\x01?\x10@\x0b\x1f\xda\x08h\xc3\x94\x94\x9ek\xa0\x15\x83\xbc\xa0\xa8\xcd\xf7\x81\xa2v\xe2\x01\x04j|\xd8\xb9\xa3\x8e.+J\xf5\x1d\xa7\x9f\x12\xe7\xc4\xe7\xb8|*S1B\xa5\xd1\x8f\xc4x\xdc\xc5\xf3\x14[\x7f3\x0c\xb3\x0c\xceXx\x8e\x93\x16NG.\xf1,or\xfa+_S\x13\xe9\x99_\x88u\xc4\xa5\xb7M\xe2%\xc3G\xe5\x11;\xc5\xc6xW\x1b\xff\x00v\x8bUx0\xcb\x96\xac\xe7W*\x89\xc6~\xa1\x01\tW\x82\xb4\xe6\xe0&,Sc\x04LY(\xb4\x06 {\xcc\x04\xef3\xb8\xab\xe2_\xf0G\x8cX\x8b\x11\xed\x16\xa2\xc6\x166%\xc7\xe1\x16\xe2\xd4X\xb1c\xd4\xd4V\xc4\xe8\xc5\x84<C\x0c*\xfb\xcd\xfe\x83\xf4\x12\xa5B\x0c \xdc!\xd3HCqUG6\x14\x85\xb4\x91\xa91\x88\xdc\xadI\xa8\xee\xdd\xc2jGa;\xd0\xa8\x91\xf3\x11`\x89I\xc5\xd9D\x1cyF\xc8\x0f\x17\x10\x82\x8a/\xb4\xb2\xf3\x1ew\xe2\r\xf6\x8a\xb4\xba\xf13\xe4\xcc4\xaa\xaf\x12\xb6V\xbbF\xc1\xf9\xf1\x14\x0c\xd3\x96V\xec\x95\xe2\xb3\xfcAB\xc6\x04\xa3\\SI\xf8\xfdC)\x8f\xf9\x1f\xb3-\x97f^L\xf3\x92W\xb4\xb28i\x14\xac\xa8px\x8d\x19c\x9e~\xa3\x13\x7fp\xb5|j\xa3)Z\xe0\xa8H\x1fx\x85\\\x9f\x10\x82\xbf\x88\xf3\x03\x10\xc3m\xe3\xe6j\xe3PU9\xe8D\xc0\x8e\xcd\xcd\x82\x1a\xd9\xdf\x88\xd4x\x89\xb1m\xf7\x86\xe8\xaf\x89Z&h\x1a\x95`\xbcL\x8a\x7fhR\xb8\xaejP8\x83\x8d\xb6\xeb\xdb2\xa7\x17\xff\x00\x93\x02n\xec\xa6#\x07/\xe2=\xee\xce0C\x96o\x9b9\xef\x08!\x9f\x98J4\xb5\x9e\xe7\xb8t\xbfD\xdc\xbe\xd8\x95Y\xce\xc7>\x08\x90s\x99\x9cca=\x0c8\x98\x91\xc5\xd0,\xba\x8b\x14z\x0bq\x861\xdc[\x8b\x18\xea/E\xea\x9d\r\xcd\xca\x83\x0e\xa7\x10\x84!\xbdA\xfd\x03\x06n\x1d\r\xc1\xe9\x82\xd8G\x0c\xce\x8d\x90\xd5&\x16[\x80\xd2U\x002\xc12\xc6T\x1eg\xeeA\x1c\x15\xf2jgl}!pW\xc4E9\xf8\x8e=\xf30[\xf3\x16\xf3\xc5\xc1;\xf36/R\x80\xa7\xea\x0c%q(Ed\xd5FL4\xc0\x13C\xb6\x07\x12Q\xefo\xfc\x98\x8dJ\x8e#\x9f\x83\xf2Gc\x06\x9f\x18\x97\\\xf1\xcaW\xa3|U\xbf\xd4u\x9fP\x9b\x19\xec\xcdq\x88\xad\xc3\xdb\x18\x07<\xdc\xd8Q\xba\xf7\x08\x16\x85w\xc43\x03\x0e\xe2\xacnc{\x88[\x97\x98\xc7x\x9eWq\xd8\x9c(\xf6\xe6\\0\x97\xaa\xf0\x1c\xb0\xa7q \\\xd42\xca\xceg\x7f\x99z\x87\x15,r7\xcc\xde\n|\xc4b\x1e0\xc2\x8d\x989\x88\xca\xf1|Ll \x1e\xee\xb1\x08\x06\xfc\xee*wX\xd4\xa4Ug\x98W\x1e_\xc4{6\xb8\xcc\xb2j\xd7/\xb82\x9c\xd9\x82\x05<\xe7\x98\xdd\xcd\xdcF\xbcL+\xf1P\x14\x14i\xa72\xeas\xfb\xcb\xbd\xc9\x9b\xf1\x1a\x8f\x17\x18-\xba\xd9R\xbfGX*"\xc5\x8c,Z:\x0bqz,]\xe3\x16,X\xc7qe\xdfOP\xcc\xab\x95\x99]\x0e\xf0\x7f@\xdfK\xcc\x1cu3\xd0\x83p`\xc2\\ \xd4\xbd\xcc\xa6\xe6 \x06[\xdb\xc4$(\x97-A6b*\xc4\xaf0p\x0b\xf7\x13Q\xf2\xe2:A\xdb\x89P\xaf\xb2`\xddz\x8a\xb8m\x8d\x07?R\xecK\xec\x1b!]\xf1({\x98\x00\xcb\xeaZ\x1b\xc4Bn\xcc\xde!\x88n\xe0@h\x14\xbc1kC\xa9jl\x15\xfc\x7f\x0cY\xba\x08`\xca;\xb0\xbf\xb0\x07\xc4\xb8\xb7l\xdd7\xcb\t\x82g{G.e\xe1!\xe6\t\xcb\xbb2\xbb\xc9\xa6SS^\xd1\xbbu\xb8\xf8\x8c%\xe7\x93k\x07\x80.\xb7\x08w+\x87\xb4\x13m\xfe\xf2\xf5uu/\x08\x96$%\xccS\\\xeaX?\x9c\xa8[\x8fvT\x1c|\xc3\xa1W\xdbQ\x8f8k\xaf\xed<\xb6)\xd5(\xa8\xeb\x1a/I\x7f\x88\xaf\xa9\x1c\x8d\x8d\x7f\xbea*\xf4\xdcz_+\x19{\x05\x87}\xc2\x03\x1b>\xa2\x03\x84\xa9\xb1\x82\xa5\x83\xbd\xc3\x1b\x15l\xdc\xb9+>\xe6L\x8f\x15\xd9\xcf\x88\xe3\x15\xfbA\xc1\x9fR\x98\x1cU~e\x14-\xfe\xff\x00\x89\x98\x7fp\xc9B\x9e\xd3\x88TY\xa7\xc4\x11\xc3p\x14\x8f2\xce\xd6%\xa7\xd4\xb2\xaf\xa4X\xa4[\x8a?H\xb7\x16/B\xc5\x8b\xd0\xb1b\xc5\x8e#\x88\xbd8\x96w\x86zWO\x9e\xb5s$:_S}M\xc0\xc7\xf7\x0ct\x1b\xe9\xa4\xb5\x9b\xb3\x02\xad\x95\x85\x1b\x99\x06\x0bp\x83a+\xcc\x01\xc6\xfd\xc4U\x03\xca\xc56\x1b\xdeS\x8eO\xde\x05\x9c\xf7\x85\x1a\xb8\xc5\x97\x1c\xf6\xcc?\xf2Z\x0b\xb8"\xf6\x97a\xab\xaf\xa9\xa2\xdf\xccY\x17R\xfa\xba,\x88<\x9e"2\n\xb8j!\x14N.\x19\xea\x15\x0e\xf5\x9f\xcd\xc6<\x83vX\x1fV\x91\x86\n\x07\x83\x98=\r\x93\xb92\xb3\xb7)\x8c\x14W\xc7\xed<\xa4\xd6\x08{fbr[LS\xb2/\xdc\n\xd1M\\\xf0\xceq\x02U fU,\xdfx\x12\x96\xddL\xeb\xa2@4l\xaa\x85Y+>\x19M\x94@\x14o\xdf0\xe3\xf7\x7f\xb8\x19\xa6\xafQ\x83\x16\xc7>e\xdc\xc0[\xc3\xcc\nXMM\xcd\x17\xc4\xae\xd9\xa2 \xda\xe4\xcee\xb4Yu\x99Mv\r\x9a\x88V\x8f>cB\xf5\xc1v\xeas\xee,\x96\x06\xfe\x99U\xab}\xb9\x8e\x8eK\x9b\xa9AF\xefl\x0b\xd4\xc72\xdb6w\xb9\x91\x9b\xf2\xc0j\x8f\x01\xb89vr,\x13\n\x8c\x1c\xd4!}r\xff\x00\xbbC\x9a!\x05\x85\xab\xb4\x17k\xe6Q\x05\xb3\xab\x80F\xd9\xc5m\x99\xd7cs\x0c`3\xd01qz\x0b\x16,X\xb9\x8cZ\x8a1\x8fG\xad\xd1\xd0\x8e\x0e\x87@\x893*\x1dC\xe7\xa0B\x1d\x0c\xc0{\x9b\xfd\x03\xd2)\x81(X#\x93\x10\\\x0b\x87+Z\x85\xd3=D\xd7~Rh\xc9\xda\xc5\xc85\x15\xa35\xde"\x0f\x9d\xcc}\xafW\x06|\xccNo\x12\xb2\xb7\x14\xc7~\xf1\xb5\x8dJ\x8d\xfcJiKo3\'\x9f0\x93u\x087c\x98\xeaj\xe3(\xc2\xe4\xed,2\xc3\xe2\xad\x91\\\x18c\x8c\xb0\x1a92/\xd8\xfc\xca\xa0\nT\xf8\xff\x00\xd8r\xe8\x1a\xcfJ\xd2l\x8er\x97#\xe2\x1a\x96\x8f\x10\xc51\xacYPej2\xa6\xf7\xf3\x16\x9f\x94^\x16\xb8\x89\xfd7\xf30Q\xe4\xd9\x06\xa3\xe1,m\xee\xe3R\xca^\x86\xb5\x03H\xdf\xbdT\xe6\xb5\xfa\xd4\x15\x15\x8f8\x8c\x8d/\x93R\xfb!\xad0\x0c\x07?\x104\xfb\xa4\xb7\x9e[\xdf\xa80\xac\xb7\xacC\xeb\xdfP\xed\xde\xcd\xe2\x08\xa5k\xb5G\n\xd7\xac\x90;p\x86b\xefcVK{D&\x03\xa8\xa1\xa0(\xc4\xa2\x0e\x12\x90\x15\x1a\xaf\x13\x06\x08\xad\x90\xaa\xc6\xabu+4\xee\xf9 @&5L\t*\xd7fa\xa8{f\x06\x17\x9f\x10\x82\xd9\x93R\xe2\x16-\x86\xee;\xe6U0\xbc\xbe%\xdbu}\xa6\xb1\x07\xb4\xf2\x9f\x88\xa8t,\x85\x8a\x8c-\xc5\x8cX\xb2\xe2\xc5\x8b\x16/T\xc4u\x18\xfa\x9cC\xa7\xc4\xdc\xbf\x99w\xd0\x83_\xa2\xe1\xf9\x87Q\xe8f\rC\xf4S\xd1\x8a\xd8\xf1sL\xcf,\xb3\xb3\xd89\x85\xc2^W1\xb6\x84\xf7C\xefY\xbd\xcb\xcap\xb0/\x8c\xcaS\xbdA\xf7Z\x94?\xf6\x17=\xfe\xd1C\xba\xc4\xec\x12\xdb\x16\xa1{\xe6\x14/\x10=\xc8\n?iE\x15o\xb9\x9c\xdc\xd5\xd7\xc9\x15\xd1\xcdJRJF\xd33.\xb0\x0b\xee\xe3\xf9\x86\x8a\xf1\x1c\x85*\xab\x95\x9f\xa0} \xd3\xe0A\xdea\x82`\xc7C#\x1f\xf6\xa0k\x0f\x82\x7f\xe3Bq\xfa\x9f\xf2\xb0\x1c/\xb5B\xac\x1a{\x90_\x7f\x10\x1c\xd7\xea/\x1f\x8c\x06$N)-F\xdf\x11\x7f\xf8\x8b\x1b\xf9b-xs\xa9N\xff\x00\x08\xa3\x7f\xb6R\xdb\xf8M\x17\xf8GG\xed\x8b\x1c}\x85G\xb9\xcb\xc1\x1e\\\xbdbx\xbfW?\xe0\x911\xac\x1e\xc5J_\xd2.\x16\xc8\xf2n\x04p\xfa\xdc\xe0\xec\x00\xe1\xf2EZ\xaa\xf8\x97\x8b\xf44\xce\xdc\xf8\xdc!56\xbbK:7\xa3\x18\x96N<\xc2V\xcf\xc7\x1f\xeb\x86ED\xc7\x84\xd2g\xde\xa0\xac\xee\x98\x87\x1a\x8a\xaf\xe3\x1c\n\xe7\xb5\xc4>r\xac\xe2\x16\xb3\x1c\xca\xeaa)%\x11R\xe2\xc5\x8b.\\Yqj,w\x16_E\x8fA\xfd8\x95\xd2\xba\x19\x97\x0f\xd1\x7f\xa0\x83\x0f\xa9x\x97\xd6\xa5\x99|7cHE\xa0\xe7\xfd\x92\x08\xdd\xd9\xb5\xcd\xcbs\x93:{\xc3?\x0f\x98\x95\xba^\x19g.c\xbak\x1d\xa2\xa0\xef1/u;\xdb\x94Wx\xab\xed\x01\xc7$K\xabj\xe2\x99-=\xa5\x13\x1b\xf36\xf5\xcc\xad\x1dm7,i-\xdcz\x0c\xe7A\x1a\xcaj\x9eee\xa5\x0c\xcb\xb3C\xbe@\xfe\xd7\xea"\xc3R\xeb2\x126\xed\xfa\x0f\xa9\xe6\x85\xc3\xb8x\x96\\\x19\xd4\xc5u\xd2\xf4\x8a\xae\x1d\xaa[?\x8c\xe7\x08n\x1fP\xbb\x0f\xa9\xae?\x10?\xf1;?G\t!q&^r\xae3\xc7\x8a\xcf\x0e\xb2\xce\x11\xec\xa2qO\xa8\xa7\x07\xd4{h\xa6\xb0\xf5<q\xc3\x82=\x88\x9e\x11\xec\'\x81P\xff\x00\xf1\x1f\xf6G\x0f\xeb\x0b7\xf8\xcbW\xf8\xc4\xf3\xf8\xc2O\xe9/d}D\xf0\xfa\x96\xf4\xfa\x97n\x95\xeay\xe6\xbbO$\xfa\x8c?\xac \x9f\xb6\x01\xc3\x1e%\x8cJ\xf1(\x80Q)\x0e\xd2\x8a\x9au^\x85\xc5\x8b\x16.b\xdcYr\xe5\xf5z\\\xa9\xcf\xff\x00<\xdf\x88u\x0b\xe9_}F\x0c\x1b\xe9y\x8e\x0c\xa2+\xcd\xc4\xdbx\x99v\xf0\x99\xe6\xff\x00\xa9\x81.\x8a\x99\xea\xec\xefpj\x1cf%\x0e|t\x9e\x02_n\xe2\x0cM\xa8\xc73y\x88\xa4Q\xc6<E<\xee$\xd3\x8e%\xfcE\xc3\x96hV!\xbagvL\xac\xb0\xe9\x86\x1ec \xab.H\xbc$J\xe2Qw\x02\xbe\xff\x00\xf4\x8b\x8bP\x07\xd4 \x02T\'iX_\xb8\xea\x0b \xcaA\x06 \x9b1\x15|\xc0+\x10\xab]P v!T \x06S\xc4\x04\x07$\xa4\xa7i\xe0\x8e\x8a\x9e\x08v&\rO\x04*\xd4\xf0@v\x81\xed)\xda#\xb4GiK\xd4O$\xa5\xa8\xf6 8\x8fj=\xa9\xd8uB\xecS\xb1F^\x11\xfcb\xf8\xfdMz\xfdN4Q\xc7M\xaeU\t~e\xe2,\xb8\xb2\xe2\xc5E\x97\x16\xe2\xcb\xbe\x9a\x97]n^e\x9f\xa3\x98h\xfd&y\x9a\x8fQ\xa80\x86bt\xbf\xb9u\xd08\x8e\x94\xca\x92\x9c\xd2\xdbvB\xba\xd9\x9e\xf4\xc3u\x8e\xf3B\xf5E\xcb(\xdd\xcf\x8f3c\xc46\xd5c\xbcZ\xfcJ\x1b!wu\xe24\xfe\xa6\xb39\x9dN\xde\x0e#\x87\x11P\xcf\xcc\xdc]1x\xf3(\x9e\xd8\nQ|#\x1c\xc3r\x92\x80^\xbf\xd7,\xad\x01A\xd8&\x14\x90>\r\xbe\xca|\xc0\x000\xa8\x1f?\xccu4\x98\xb0\xc1^`\x99\x99\xe9\x17\x96)\x83\x14\xca.\x83\xf1\t\xc6a\x0e\x99\x95\xf7\x0ct1\xc41\x98\x17\x05\xca\x84\x02PtFTb\x13\xf5\xa0!\xbdC#\x07\xb4\x0e\x88.\xa7\x82\x19\x94J\x99]@\xa28<F\x17\xb4[\x8bDX\xb2\xd8\xcb\x95\x13\xb4z.#\x1e\x9b\x97]o\xf4\x07\xe9\xba\x83p%D\x89]\nA\x97*k?\xa2\xc6dv\x95\x82T-[\xf41\xbbw\x8b\xe6U\x81\xca\xc4\xb8\xe1\x8fW\xf7.\xa1j\xe1.x\x9e\xc8\xb0\xf10\xae\x83\x93\x0c\x9eH\xaa\xb8\xf1\x17\x1a\xdco\x88+uq*"\xa9\x80\xdd\xd65sU<\\\xbdy\xcc45\x91\xa8\xac\x03\xf2]\x1f\x97\xf1\x0eq,\xd6\xb1[p>\xbf$V\x06\xa8#\x1dA\x0c\x1d#\xb9^ j\x08.\xa1 \x81\x98\x10@\x87\xc2\x1b\x81\x89R\xa5J\xe8 \x82\x02Q\x13\x15\x98`\x9c\xc0\x1d\xcd9\xe8\xabn0D\xdc\xda\x08\xc7\xf1\x12& \xae\x823\x88\x8e\xd1\x9a\xcaJ\x13].,Zb\xce#\x17F\xa3?\x11\x8b\x16/W\xdc\xe2\xe1*\xa7\x1a\x9c\xfe\x8b\xe3\xa1\x12T\xa9L\x16\xa0\xf5\xa9X\xfe&\xa0\xdc\xb9\xb2j_J\xdc\xc6\xb7*\x15\xce\x0e\rx\xff\x00\x12\x95^N\xf1\xd6\xc5\xf8\xcf\xfb\x98z\x07yQ\xdb\x89m\x1c\xc7a\x16\xdb+r\xa2\xf5\x06\xeeW1j5\xe6e\xce\x19\x870x\xd4(\xd4\xb1\xdb\xdc\xc9\xbd|\xc4C\xa2(\x1eq\xb9\xc7Y3\x18\x11\xce<\xccX \xcfm\xbf\xc4\r\xe6\xa0*x\x00\xd0>\x96\x9e^q\x18\x9d#\xa4s\x06\xf1\x15}ZA\xd0N\x13HU\xf4!\xa8B\x07A\x1a\x88 \x90\xfb\xc1`\x1c\x906\xccy\x8e#\x80\x07\xcc\xa5!\xf9\x85R\xf5r\xe0\xcc\xa9\xe7\xa6\x9d\x0c\x13\xb2\x08\xc4\xe6$\x11%G\xa5u_\xa8\xc5\xccs\x1dt[\x8cX\xafS\xf7E\xfa\x9e\xa5\xfe\x8e&\xfa\'S\xa70\xe8t\xb9\xb2&:V \xd4\x1b\x7fF\x0c\xb7=\x08\x92\xe5\n^K-\xf7\x95\xc6\x0c\xbf\x8f\xe6P+\x1f$m\x9d\xce\x05\xd5\xe6,\x01^\x03\x89`v\x9av\xcc\xe3\xbcv\'\x12\xff\x00\x10\xce\r\xd0\xe0\x88\\\xb8\x86Y\xe0\xe2e\xe5\xedp\xbd\xb8\xdc\x1b\xbf\x13M\xddq\x05\xe719 \xb2,b\xa2]\xe2\x0bc\x10$g\x85\x11R)k\xe5\xc7\xe0#\x92,\x9a\xa0"fz\xbd\x9b_\x96\x9f\x99\xc4c\xd1\xa4\x10A\x13;\x86\x0b\x9c \x84\t\x94\x12\xa1\r@\xa8B\x89P\xdeb\rO,\x1e\xf2\xa9M\xdb\x05Q+\xcc\xb9)\xf7*\x00&PO\x17+\xb6\xab\xbcJ\xcddP\x19\x1c\xd3z\xff\x00j[W\xb0\x82\x03\x86X\x12\xec\x8b\x14U\xd4c\xd0\xb9\x8cC\xff\x00#\xab\xe9\xa9TK\x8b\x89qz1e\xd3\x16\xa2\xd1\x16,\xbcE\xc4X\xb5\xa9u.\xe5\xdc\xae\xa1\xff\x00\xc0a\xb9s\x8f\xfe&\x18=x\x98\x13\x03)\x91)q\x11\x16\xc3\xe8\xe6\rSP\x02\xbe3\x08\xa0\xd5\xfe#^\xf5\x12\xd5L\x03\xccS<\xcb\x1d\xc3\xa7\x9c\xc0\xdcKq\x89\x86\xad\x8c\xf5\x03\xff\x00e\x06\'e\xee2\xe9\x9e\x0b\xa8\xca\xc0\xf9\x94\x19\xc3\x05\x05\x8c\xae\xf2\x91\x80\xa1\xd8*\x17"\xeaU\xdaP\xfc\xa6%\xb0)\xfe\xf0\x11^\x8cw\x040\xc3\x1d\xcat\x9a\x82\xa0y\x81\x02\x10\x81\rB&\x07\x942\xf3\xd1o\xff\x00f\x90"M\xaa\x08\xd1\x0fq\x04\x00\xdea\xee\x96y\x9d\xb6\x006\xc0\x13J\xc2Ir\xd0xU2\x19[\xcaG\xb1@[\xc1,}\xc3\x98[&\xb13\x92\xe3qE\xa8\xb1z\x18\xc7s(\xc5\x9c\xa3\x19\xccX\xc62\xe5\xdcX\xc5\x8f1b\xf4\xb7\xbcb\xe2_\xdc:y\x8c\xdc%t\xd7R]\xf4\xba\x97}.\\%Ka/\xa9\x0f\xae\x97\x1cd\x8c\xe8\x0bPO\xccwv\xd7\xf6\xca\x85\xda\xa5\xb9kQ\xbd<@\xb4\xf9\x9e\xc7\x99\xc2\xcdC\r\xc1h\xb9\xb7\xf74D\xbb\xc4\xc5\xa9\x9e\xb3p\xd3\xc4\x07N\xf1\x86R\x95\x97\x95~nZ\xefs\x8f7\x0c\x0c|F\x9f\xcam|\xeaW\xa5\xba\xaf\x8c\xfe\xe4o;`(P\xaa\xd2\x98Ov`a\xe9\x9f\xc7\xf1\xd5?A\x10\xe6"\xe6s_38n\x04\x0b\x81\x88 \\ E\xa2V<J4\xcbV\xa3\xcc\xe2X\xee\xc1\xdc~S\x02^\xd8\xcc\x80\xe2\xd0\xb3c\x84\xff\x00y\x9a\x80\xd0\xa65i\xf7\x10\x8d\xb6\xaa\xf7n\x08\x16\x85;\xb8\x0e\xba5\x19\x1a\xab\xc8n.$\x10\xc0\x10\x13_0\x89{\x0ew\x00\x03\xb9v\xd3"-E\x8b\x17\xbc\xb8\xb1s./\x9e\x85\xb8\xc5\x97\x18\xb1\xdc^\x8b\x16\xa2\xc5\x8a/K\xe9\xf3\xd0\xef\xd0jq.]t\xdfLs/\xa6\xe7\xa9x\x9b\xe8=\xbaY9\xdc\xef\xd2\xa6\xb7\xd4\x9a\xcc\xb8\x9dA\xd2W\xa2V\xd4j~\xcf\xef\x1c\x16a\xc2\xef\xe2{\xf1\x0bv73F\xf0`\xa1\xafq`\xb9\xf7(\xc6\x08[\xd4\xc0x\xf3)y\xcdpE\xad\xe3\xee\x1e\x9ea\\\x0f\xa8\x85eE\xab\xbb\xf3\x1c\xdcKF\xd9\xcc\xdf{\x95\xb2\xe9\xf1(\xa1\xc4\x7f\x08\x00\xc2\xd6\xab\x98\xdbb\x97\xdb\x9f\xdb\xf3\x15S,\x13cr\x0b\xfe_H)\xe0h\xf8\xc4-.\\Q\xe9\xd2\nz`t\x83\xa0\xc9\x03\x15P!\x98\x10\x84TJ\x86\xa3\x17/\x18\x1eP&\x92\xbc\xc0!\x1d\xd5.cA\xd1\xd7\x07\xf3*I\xe2\x87\x138-\xb4\xff\x00v\x8c\xd7\x1d\xa1J\xdd\xf3\xda\xe6M`\xe2X^\x13\x14s;6{\x98\xaak\x8626\x97\xfb\xcc\xd4\x90CP\xae\xb6\x870\x9c\xb5\x13\\\xad\x14Y\x97qb\xc6\x17\x9e\x86\x8c[\x8c\xb8\xac^\xf1\xe8\xb5\x16.z>"\xc5\x8bq\x85\x8f~ff.-A\x84&\xff\x00A\xfa\xccM\xbf\xa6\xe0\xdb\xd0\x8d\xca\xb8\x15\xd0jn$\x11\xcc\xc9\xf2\x94\xa8\xec*\xc3\x83\xfc\x9fS\x01ov\xfb\xc4p\x13r\xf4y\x8d\xa6/\xb4\x14\x9f\xd4\xb1Gb\xa1C\xb1\x04j8\xf9<J0[\xf3\x03\xbf0\x00\xc4\xb7\xcb\x88\xab\xbc\xa9\x07\x17\x9b\x81\xc2\xc6)1\xea\x02\x86\xf2\xbcK\xef\xba\xdcdY\xb9r\xb2\xfa\x8c\'tV{\xc3\xb3v;\xd6\x03\xf6~\xe5\x03-y\x86j\xd1^b|\xd1\xf9\x97\x96\xb9\xe6\x0c\x18\xee,\xc6dTP\xf8\x98\xeb\x88\x1f0\x10\x86\xa1\x98t.\x1cCC,?\x88\x8d\tc\x98\xeb\x8d\x10\xd4D-;\x8a)\x9b7g\xe2\x14Z\xd0\xd5\xd3\x16\xd6gc\x99\x95z>\xe2\x0f\xe3s 0\x1a+\xfd\xfe%\x01\xee\x1e7\xfe\xb80\x1b\x8b \xb7\x8f\xf7\xa8m[\xae#o3\x92\xa5\xb9\xd4)x\xff\x000\xed\x17\x046\x162\xf0\x98"\xe6.\xe3\x17\x16-\xc7-\xc5\xb61c\x0b\x88\xb8\x97\x16;\x8b\xd3\xe6,\xb8\xb1s\x18\xc5\xa9tKa\xa8\x10\xe9pe\xf4\xbe\x97\t}.\\9\xfdc\\\xcb\x97\xa81\x95\xd5r\x95\xb0jS\xe8\x9f\x1a\xcc\xa4\xda\x1d3Y\xfe\xaaT\xd5\xe13\x15\x13;\xfc\xc1\xc1\xbc\xccR\xcf\xee:G\xb6\x98\xe8\xc6\xe3@\x15~!\xf0\x016\xa9\xc0\xd4\xc0\xa8e\\\xf7!\xe4\x9d\xed\x8e\xf2\xb2\x99\xbe\xc5\x9bo\xf1\x15\x07\xdeb\\\xb5\x1a\xcc\xb8\xd7\xe25v\x92\xbb\xccMW\xa7\x9a\xcf\xe6_l\xb9@pW\xca@\xa4\xba!\xd0c\x1f\x86\x0c\xb2^&c\xb9\xa7G)y_\xea\x86ht\x881\xff\x00a\x01\x08N!\r\x92\xd1\xf3\x06\xc2o\x12\xf3\xd8q\x12\xb9K\xd1\x99h\x16\'\x89\x9d)\xbf$\xa9^wq\xbej\xbdK\xc5\x16l\xc9+\xd9\xc4A\xf7\xdf2\x96\xe13\x8fr\xed)\xdf\x88\x06\xd0\xc7f_\xe58\xb8\xfb\x05"\xd9B`\xc7Z\xe46\xf8\'\x88\xd7(\x96\x92\x86/FDi\x15\xe8\xb2\xe2\xcb\x8b.\\X\xb1\x8b\x16."\xf3\xd1e\xcd\x92\xf1\xe7\xdfL\xcb\xf12\xc2\xea\x12\xaf\xccYu\x1a\x9f\xbc^\x97Q`\xa2\xe6\x0c\x19h=5\xfa/\x13Z\x82\xfa\x83\xd1\xccq*SY33?\xcf\xa1\x1d-\x01\xee]\x1f\x8a\x9d\xa6y!8e\xef\x18\xa6/\xc5\xca\x02\xab=\xa6\xd5Z\x88R\xf16>\xe1L\x93\xea\x17\xb0\xe3Fc\xc9\xe6*\xbb\x93\xc3^\xe1R\xff\x00h*D\x05\xeb\xf7\x85\x9e> \xb3\x9a%H\xb9w\x00\x16\xa6\x14\xfc\xc5\xbb\xdc\x16\xefe\xda\x8c\xbf\x81\x9c\x8c\xb3\xad9\xb8\x1f\xd9|FH\xa4\xd1\xe6\xbf\xf6(0\xb1r\xe2\xc7\xa1t\xe3\xb4\x1f\xa1i\x02\x1d\x02\x10f\xc9`\xc1\xbdAG\xb90\x87\x0e*e5*\xbcL\'\xe4 \x16r5(\x8f\xe7\x8cJ\xf2!\x8d\xcb\x80\xc8\xf6\x96\x94\xed\x99v\xd5\xfc\xfe\xd2\xb5\xba\xf7p\x00\xd7\xafp\xdd\xe0\x1e\xa5\xd7\xee\xc5NX\xf8\x87\xb0\xb6-\xac@\xb5}U\xb0\x08p\x9d\x12\xa2Y\xe24\xe6[/\xa2\xf3q\x86\x15\x8b\x16\xe6\xcf=\x17\xa2\xc6\x17\x11\x87\xdc\xbc\xc6\xd2\xe6\xa72\xf3\xd7\x10zs\xd7S/S\xa9\x02_\xdc\xb8t\x0bK\xfd,)\xe6\x0f\xc4\xb9}#6Z \x1f\tJ/\x00\xf3(2\x96\xf7g\x1d\xe4\x86\xb9?\xeck]\xa3\xad\xd1z\xa6/Hf0W|^cl\x19\x97>\tW;|K2|\xc0\xff\x00\xdc\xa4\x8c9\x80F\xe2{y\x8dKq\xee\\\x97\xbe\x02\x07\xd1)W\x9f\xb8*~n\x1b\xc5\xe7<\xb4\x7fs\x03\x18\x8a\xa0\x001\xc9w\xff\x00;\x8b\xd8\xd4\xff\x00\xbd\xac\xc5\x14\x19\xa4\xbf\xd0)pA\xfa!\x0e\x81*\x10\xc4\x16t}\x1a\x08P\xc8\xc3O\\\xae\xa28\xe7\xd8#\xd1\xe4/\x98\xd9m0k\xb2)\xe4\xa4\xbc\xb0\xa8,]M`d\xd8\xee\x13yV\xb8%\x8a\xac+5\x05\x0cd\xe0amU\x8e\xec\x15\xab\xf8\xdc\xb5\xbc\xe3\xbe\xa2\xe8\x08\x1f\xe6\x11J\x95\xcf\x89\xb1\xcdw\x99\xaa\xe5\x81\x15\xcb\xc4X\xb2\xe3\x0b.,X\xe3\x8b\xe8\xbd\x16,X\xb2\xf1/\x12\xfao\xa1\x96U\xbd*T\xa9_\x89R\xa5G\xa1\xd7_\xa7\x89\xc4\xe2\\\xbb\x83p\x83\xfa\x06\x11s\xe2R\xb3)vXA\xec\x12\xf8\xbf\xf9\x11(0\xee%\x1es\x19\xc3\xfc\xc3T\xec\xc6\xe1\xa4\x9axc\xd3\x98\x0b\x16\xea\x01\xcb\x12\x97y\xdc\xca\xddS\xea\x14+\xb4k0\x11Q\xd9\xd1(\x07h#}\xbb\xf3\x16J\xcf2\xbd\xf7\xde&\x86\xa2\x99n\xcb\xdce\xd5X\xa8\xc6\xb0c\x98W\xf6\xbf\x01\xfd\xaf\xd4X\xf1\x0f\x93\x0e\xb5\x92\xf93\x15\xa2\x96G\xb8\xa2\x83/\xab>\xd0fQ\x07\x88!\x99\xb3\x84\x0e\x87\xe6=\x08\xeb\xa1t\xa5\xd6\xc9k\x89P\x97\xb6x\x97pVK`\xe1O\xc5\xc5J\xfb\xf3\xe27\xcd]\x9c\x10\xd1\xc07\xda\x0b\x95d\x99\xed\xf7\xe5\x96\xe4\x0e\xd0\x83%^Su\x01^\x1eRQk\x9f\xb9\x98x.\x89PhuL\xab\x85U}\xb38\x89G0\x89p\xcd9\x94\xa2\xe6/\xc4an,Y\x91\xd1u\x07\x13Iqc\x0f@\xb9\x8b\x18\xd3\x1e\x86\xba\x1b\x95\tR\xa5J\xc4\xa9Q.\'Vk\xf5c\xa7\x13Pq.\x0c*\xfc\xcb\x97\xd2\xea_\x12\xf6zA-W\xc4\x1c\xb4\xb1?\xde\x98\x8d-\xe6\xae\x1d\x9fo\xfb\xf1\r\r\xfa\xc4\xd4W\x9fP\x97\x0f\xe3Pq\x9cG.`\x14\x15^H\x9fD\xe0\xb9\xe6+\xe1\xb9\x97\x8aX\x82\xb9\xee\xca\xcb\xe3\x88\x92\xaf\x0c\rd\x83\x9e\xd0\x10\\\xd7i\\\x97\\J\xcbs)\x92\xfbNoh\xa8o\x14\x04yr\xfe\xf0T\x17\x1a\xda\x07\x07\x96\x0b\x80\t\xf2V?\x7f\xc4\x1a\xae"\xf9\x8e\x102\xe2\xc5\x8b2e\xbd\xbf\x10C\xfa1\r@\x84\xd4&Du\xd29e\x0c1\x00\xad\xa6\x1cu\xe3Q\xd5\x9a\x95,S\\\x7f\xbf\xf2Zd\xc34\xf6\x9a"5\xd9\x9cZ\xafz\x95\r\x8a\x1c\xde.v\x1f1\x01\xabX\x12\x8b%\xe7\x98i\xc1\xfbW\xa9A\xae#6\x85\x0f\xcckj\x85\x0eLC\xcf0\xb76\x1a\x91\xac\x96\x0c\xdc[\x97\x18\xb8\xb1\xa4X\xc0\xf4\xb8\xc3\x16\x8a,X\xa2\xdb/\xf4\x84:\x19\x81\xd0\x9cg\xaa\xc5\x96E\xb2-K\xf3\xd0\xc7\xe9\x19}F\xe5\xf4\xe6,u\x12\x0c\xaf\x12\xbc\xf0\x1ap\x15\xf8\x96HW\xf4\xdf\xe6\xe5"7\xb3\xbc:\x18\xb7R\x80X\xa3yw0\x94\xd2\xc5\xfaB\xf7|J|5\x10\xe5}\xc7[n\xbc\xcf\x96X\xddF\x94\xb5\x8e[\xf8\x86\xecb^\xd6*&\xa5\xe6%Rj$\xa2\xdf1\xf6*\\\xd3g>\x15\xb8+\xb6\xa1;fbL\x06\tP\x96\x9a\xee\x8d\x7f3\xc2\xed\x83\xc5_\xf2A\x8f\x11E\x07\x89}\x18\xb1\x1e\xb0T\x1dC]\ru"L\x10fm\x9a&e\x16\x0f0\xd7\xd9\x19\xc1N^\xd0Ga`\xbb\x8fm%wIS\x87\n|Lf\x00\xee8\x8a\xca\xe0\xef\xf3\x88\xf6\xba^\xfc}E\xd0\x01{\xc7\x88\x0b\xc5\xe2\xb6Kl\xf9\xa72\x8e\xd9\xd4\xa1\x80n`O\xcc\xaf\xebb\x1d\xeb\x0f\x17\r6\x13\xa2",Y\x84\xb8\xc2\xee\\!\x85\x8f\xc2\\_\xa8\xb1\xfa\x8a,\xbf\x12\xfef\xaf\xa9\x08B\x0c;\xf4\xe2\\X\xea>\xe5\xc6n3];1\x06_\xea\xbe\x97.\xe5\xce8\x97\x89FR\xe5\xe2a~gg\x88\xfb\x84\xe2\xadV2\xe6d\xe5\x83\x8b\xe2\n]\x0f$\xccu\xc6Yv,\xce \xa3 \xf9\x89%M\x831\xbe\x07q\x1bO{\x97P/|\xcb%\xce\xe5\xc4\x1a\xadL\x19\xfc\xcc7r\xc4Lf&\xaf\xe2\x1a\xb3\xdf~"\xcd\xe7\xb4>\xed\xee:l8\xefU\x17\x18/\xcb_\xc9*\x01\x8c[b\xdb\xd9|\x0b\x10U: \xfc\xff\x00QA\x83qW0\xb4\xb9r\xe2\x8b\x89\x8e\xdd\x01\xa83\xd4!\xb9]B\xbfE\xdb2UCpo\xc4\xb8?d\xa3_\xb8\xb4O\x90\xa9N@\xf3\xfe\xff\x00jd\xf3\xab\xbb\x88<\x94_3\x1bw\xed}K\x02\xafu\xad\xf8\x85J\xcew\x1d\xf2\xf2L\xae@\xbb+\xfd\xe2\nQ\xf8\xcea\xc1Y\x037\x01UA\x181B\x87%\xcb\x15\xda\x1a`\xb2\x1ab9Y\x97\x86b\xc4\\\xc5\xa6[\xd1ioC\x17.,U\x97\\\xc6\x1cF_Rs\x06\x12\xee\x0c\x1a\x87\x96%\xf4-\xeb2\xe5\xe2,\x7fG2\xfa\x92\xea\rb\r\xfe\xab\xcc\x19qjV\xb31g0?\x13Q\x05\xf1\xaf\xe6\x15\'\xa4&\xe8k\xb4X\x14\xc7\x11Ft.\xce\xf1\xc4M\xf7\xb9\x94\xb0\xec\xc0b\xb8\xef*-\xfb\x84\x15\x9e\xd1SI\xcb\x05%\xe2\xf3r\x90\x1a ;\xc3(\xba*/\xbdy\x99\rS\x12\xea,\xe3\x92<\xb8}C\x13\x8d\xe2b\x8b\x8f\x04\x12\xdar\x91\x05c\x97\xc1\x9f\xe4\x89w\xb2\x1b\xfbd\xd1\xb7\xef~I\xd8WO\\~"\xc4\x18\xb2A\xb2\rK\x83\x16,x\x8e\xa5\xf9`\xe8\x1fs(\x10\x84:\x07J\x83\x13\x14\xa5zb\x82L\x18\xfe!Y\x1fQ\x023\x7f\xce\xe6h\x16q\xc4\xb6\x8f*\xaf\x89\x81\x90\xee\x81U\xdd\x9b \x03U\xe2T_8\xb7s\xb8X\xd5\x7f\xbc\xc2\\\xd7\x96\x00\xa7MB\xb6\xddx\xf8\x99_l-\xf5\xae\xc4sS&P\x03\x9d\xd70\x16X%H_@Z\x8b\x1e\x85\xc1\x96K\x97.+\x89r\xf8\x97\x16=\xe73\xf3*\xa1\xd2\xf8\x97\x8b\x97\x06\x0c \x8fh\xc3\x17\x17\xa7\x99s}w]._O\xe6{B/\x1d5.\x1d\x17-s\x11\x19Z\xdfym\x90-\xbf\xf7\x99]\xdd\xa0g\x84\xb9\x87\xe2\xe2\x98\x0cE\xbaQw\xc4j\x0bx\x8a\xab6q\x02\xe8\xe4\xd9\x00K\xa7\x10DYD\xc2]\\\xe6l\x7f\x12\xc5^\xdd0\xe5\xff\x00\x91\x17\x9cT\xb2g\'\x88\x01\x8f\xb8\xe85]\xe5Z\xed\x1c\x05\xeejM\x83\nM\xe81\xde\\\x7f\x93\x9a\xfcT\xb0\xd1\xb7\x80-\xfcJ\x8e\xa5\x1b\xdaO\xb8X\x08\xa1\x03\x15A\x83\x08X\xb1\x96A\x03\xbc\x08*\x10\x86\xe1+\xa5M\xca\x97KI\xdd\xe9\x02\x81\xef\x01\x1aB\xd0\x1dK\xe8\xac\xb9{J1T\x1b\xb1uM?\xef\xfb*\x06\x8f\x84\xcdt\xad@\xc8\x99?\xb8\xdbm\x8d\xc9\x97\xc9\x89\xa0Xvs\x00e\xc0d\x86\xd09u\x08\xb7DG\xd0Z\x84.a\xccwY\xa3\x99\x98.P\x8b\x16]GIs\xba\\c\xb8\xc5\xd4b\xc6w\x9cF\x89_\xa1\x8b/\xa5\xf4\x0c\xb9vK\x97/\xf5\\\xbe\x84\xb9w\xd6\xfc\xc1\xe8\xb8\xb2\xf3\x16.\x19[\xf7\xd0|\x06^y\xb6\x89`\xe2\xae[x\x96\xab_S\xbf\x00\x8dE\x97\x86{\xfb\x86hRE\xcfx\xed\xde,\xc8{\xed\x15)W\x8ee6l\xeds9c\xe6`\xb6\xf8\x86<\xfb\x94\x93\x87p\xb8\t]\xa1\xc1\x1a\x05\xba\xf3\x08\xb6\xb3+E\x08\x8805Bw\x8b\x91\x0c\x1d\xd9\xacv}\x05C\xc2\xaf\xe5PO\xc9\xf8\x86NPWp7\xfe7\x16z8e\x06\xe2\xa87\xfa\x16\xf1)\xda\x08\x17\x02Vg\x10\x84!\x02WB8u\x0b\xc9R\x89\xc2sv4K\xa4)\xab\x18\x8bk\xad\x1eHS\x0f\x19\x98@\xb8\xc7\xaf\xf7\xf3\x0f4\xe3)\x8f\xf5B\xd9l\xcb\xee\x11\xc1\xc46\xd6\xf9\xc72\xc3X\xf53p\xb35\x16\xd7\xb6\xe0Q\xac\xdf\x15\x0b\x95e\xe2\xb1\x1a\tk\xb3\xc5\xc0\nU\x1a\x8cf\x13\x89}g\x10\xc1\x14b\xe7\xb4\xb9\x7f\x12\xfd\xcb\x97/\x12\xe5\xcb\xe9P\x87@\xb9u\x1c\xb1\x97\xa9\xa9\xcfK\x97\xff\x00\xc2\xfc\xfe\x9b\x97\xd2\xfa\xf1\xd5}.T\xe5\xedK\x16w\x98U\x03\xbe)`\xd1,\xbcKvL\xce%\xc5&"e\xa9Z\xfd&s\x93{\x8c\x14}\xc4\xd0\xbbq)\xc6\xc2\xee\xd2X2\xb6\xf8 \xe5~\x99\x88\xdf\xb4\x01c=\xe0\xaa\xda1Z\x1e{JZj\xe3\x03\x9e\xf4\xc7\xbe\xa3\x1a\xc4\xb49N\xfd\xe2\xdf\x86K\xe13\xfcGU\x18\x05\x81y\n\xcf\xc1|\xc0L\x10Lw\xd7\xf1\x1d\xc1\x8a\xa0\xd9\x14!\xa4\xb8\xb2\xe2\xf4\xf0A\x02\x04:m\r\xfe\x8a\x953S\x1fC\xe5\x9b\xb1\tAw08u\x044\xeb\xf1\xfbEye\xe1\xf32\\\x86?\xdf\xbcj_\x17\xb2\xa5t\xbcw\xb8\xf4o\xe7P\x95\xc6{\xcd\xe5\xd3\xeea]\xf8s\x08\xc5#\xee)\xcd\xe7\x12\xa3\x0b\xf8\x8b\x8dx%\xb9\xad\x99\x8f\xce\xe0\xcc\xb8\xed\x9d\xe54^\xe5\xbbF\x15#\x1at\\\xb8\xe1/\xcc\xcdo\xa5\xf4a\xd0eJ\x8bl\xa9OJ\xfd\x1c\xce\xfd5\xfa.\x13\x99\xcf\xff\x00;\xe9pe3\x95M\xd9\xe2W\r8|\xc3\xb6\x1b\xc3\xb8:f\x1a\xea\x0bx\xdc\xca\xc6\xe6\xa27\xf9K\xd6\x08\xa6\x0fi\x94\xe0\x84ar\x0e\xa3\xc7\xfc"\x91\xc2r@RU\xda\xb7\x1f(-\xc70\x08\xbb\xcd\xe3P^E\xe2\x08a\xbbs*n\xb1\x1a\xd2\x8e>\xe3\xaa\xd2<JN\x14<\x02\xdc+B*V\x98d*\xd0\xf2\xda|\'\xc2\xa7\xa3\x1f\xc4}\x07@g\xb7A\x97\xa9}.\xe5\x10\x8a\xa9R\xba\x05Cp\xfb\x84\xac\xfe\x84\xb2Q\xd0\xbcI\\\xab\x86\xe9\x0fw\x8e\xda\x80\xc2\x8epbc\xf8b"\xf6\x07u\x98\xf7]\xe0 \xab1\x18E\xf7a\xaf\x9b\xfe\xe6j\xb7\'i\x8bt8\x86\x98/\xbce\xa7]\xa3\xb2\xccx\x99\x01\xacn%\x910~\xb0\xcb\x05E\xe35.\x0c\xca\x95\x15u.\r\xcb\x97p\xf7.\x0c\xfc\xfe\x80\xc4\xad\xcb\x8c\xa9R\xa7\x13R\xfa\xeex\x97s^zv\xe9\xeak\xa5\xe6_K\xfd\x17\xd2\xe5\xcb\xf9\xe9pq(S\x94\xdb,w(7y\x7f\xdf\x12\x8e\xa5;\xccj$\xb9\xf1\n\xd2\xfd\x90\x9b\x83MCG\x1f\x12\xa1\xc6\' \xe3\x88\x15\x80|N!\x10JSX\xd9\x89l\x9aYA\x17\xb6\x05M\xc5\x98 \x80\x16o^!R\xc5p\xcb\x049s\x08\xb5/\x96\x14\xbc_\xcdL\xd9\x02\xc5c_\xb8\xfd\xc2*\xb4S\x96=\xee\xcfM\x8fp+\xe6Z\x8a\xb3+\xdd\x8e\x0cPj\x0e!F\r\xf4\xb9\x7f1T\xb4\x08:T\xa8\x15\x02\x04\x0ea\xcf\xea76A3\xc0e|\xc2\xbe~a,?\xf2^)\x15Z6\xc6\xc2\xab9\xf35\x8a-\x7f\xbf3\x1a\xdf\xd0\xc0n\xccs\x9fs\x05\x9bu[\x96*\x95Z\xcc\xcf\x8c\xe30\x97\xb7f\xe6K\xcd\xa2O\'\x7f\xe6i\xbe\xf9\xdcN\xaa\xf0\xdc\xa9\xb95e\xc6\xf5\xec%i\x99pf6%\xb5.\x11q\xb4\x1f\xb8v\x97.WM\xc2|B+\xd1\xe8\xe3\xae\xe5\xe2=u\xd2\xfa/\x98\xb3\x89pu\xd2\xfa\\%\xcb\x97/\x1d\x0e\xabR\xb9V=)\x856a\x16;A\xda"\xff\x00S\xce=\xff\x00\xbc\xf9a?0oW\x08U|\xcb\x16\xcc\xcd\x83ip\xb57\xd9\xbf\xc4 i[\xc4\xe66\xe7/04\n\xf5\x18\x0c\x81\xcd\xf6\x98\x05\x83\xc1t\xc0)\x96\xa8aS83w\xf7.\xf7\x9e\xc7\x9f\xf5\xc5\x15h#0k\xa97\xc3?\x99D\xd8\xbc\xf7O\xc6B\xa8\xa6\xb4\xe7\xbf\xe7\xf3\x86"\x8b\xbc\x1b\x83p\x8a\x10B\xc6\x16\xfa\x05\x90%J\x95\xd1P @\xaf\xd4,\x98!\xdc\xb8\x82\x81pP\xc1^\xa2\xdd\xcb>C\x90\xc4F\xe4\x1b\x1dLUT\xf2K\xb2\x07\xbdKsx~IJ Y\x9a\xe2o|%\x1cQS5\xea:\x05g\xb4]w|\xfb\x95\x06\xf4Ek\xc4|; \xb9D\xe6\x1c\xc2\r\xcdf\\\x99\x85DYpf\x90\xcc\x1a\x86\xe2\xcc\xc1\xe8O\x1dYQ\xfd>:/C\xf4\x06nn3s\xe6Zt\\\xbct\xe2\\\xba\x97\xd6\xe3*\x8d)\x95\x99a\xbc\x03\x15\xdc\xab\x17\x0fM\xe6\x1f1\xfby\x8e]\xa1\xe3.\x81\x06\xf0\xd4$q^\xa7\x8e\x0bi\x14+\xf6@\r2\xca\xebU[\x80#1\xa4\x8f\x97\xecq\x048x\xd7\xfbP\x890^\x1c\xddKUqxME\xb9\x10\x9e\x04\xb7\xea\xfe\x98\x82>\x00\xc8\xf6\x9b~J\xf6\x10\xb4\xf4\xbf/\xfd`\xd4!\xd0\x1875\x14"\xe6%\xcb\xc4\xbf01\x03\x10\x89\x12V%@\xb8\x15\xd6\x98\xf5a\xb9T\xdd7@P^&\x11\xb7\x88\xbb\xec5\xcdG\x01V\xe0\x96\xa86y\x8c\xdb\xe7\xf3\x0b8\xc9\xb8CT\xfa\x18`4\x07\xe2 L\xb5\xc4\xb5v3\xee,\xdd\xf6\x8bB\xeb\xdc\xca\xd0\xe6\xf8\xf7\x10\x0c\xab\xc4\xadz\n\x12\xe2\x1a\xc0%\xa8\\\xc0\xcc\xba\\\xb87.\x0c\xd4\xba\x86]\xc3\x13p\xe2\x10\x97\tr\xff\x00A\xd0f\xba\x9f\xc4\xbe\x9ez\xdc\xe2\\\xf7.\xe5\xe6\x1e \xd7B\x8c\xbdE\xcc\x19w\xe6\\\xbe\x97\xb2\xd5;K\x7f9\xbff\xaa;/,R\xa9\xb6\xea}\xa5\xd9\xbb\x9be@\xef;\x8c\xb6\x03"\x00q\x0b\xb4\x01\x15\x9850z\x95\x88po\xc4w\xb1\x9e\xcc^ez\x86\xc8\xf2\x8c\xa56\xe9\xc4\xec\xe3%\xdbq\xd9R\r\x9d\x81\xfb/\xa9\xacAD\x11\xf9_\x81\xfcB\x10\xe0~\x1b\xfd\xd6\x06\x03\xbc\x0c\t\x02@\xf7\x81\xef)\x01{\x9e\xd2\x9d\xe5e{~`@\x95\x02\xe0\x12\x89R\xba\xd4\xa8\x9b\xfd\x06\x0e\x85\xc4\xbfR\x9fX\xa9\xb1\xbdG\x15\\\x1a\xb2\xa1\x11\x91\xdb5\xae\xf8\x95\xb8\xcc\xb6\xbc5\x8cE\x0f\xe31\x15\x96?\xeb\x89\x02\x8a\xa6\x8cK\xae\xf7\xa9\x83\xf8\xa8\xb5\xba\x8f\xf7\x8c\x18\x97\xa3bQ\x1c\xe8\xe6\t\xb9Q,\x0c\xe2Rt\xbe\x81\xdc5/0\xd4\x18@\x87K\xe8K\x9f=9\xfd\x0c\\M\xcb\x9c\xcb\xed\xd2\xc9}\xba^f\xa70e\xcd\xcb\xe9\xe6Y7\xa8\xe3\xa5\xe3;\x8b.V\xe6\x15s2\x96\x85\xb6\xccr\xf1\x15\xcf\xf0\x8d\xdfx\xb0\x98\xe2\x0f\x99d\xa1\x9f\x94\xb2\xe1\x05\xda\x0b_\xcc a\xe1y\xf1\n\x8b\xaa\x9eP\xd1+\xb4\xa1\xf11"\xd6\x15-\xa9\xd7h#t\x8bU\xe7\xfd\x99C-MS5\xb9\x99\xe0\xb7\xf2\xbe\x89\x83\xf9\x8fU\xda\xde\xc0-=\xd5|\xb1QZ_\xcbs\xc9\x03\xde\x03\xdc\x04\x0fh\x18\x18=\xe0;\xca\xd6\xe5\x0eb]\xb2\x90a\x95\x02\x05t\xa9X\xfd\x06\xa6\xba=6\x8b\x05\xcb\x08&8\x15\x0be\xf5ZV\xcaa\xcc%\x01m\xe60\x95\xc7\xe2P\x85\xf8\xdc&\xf3\xfcK\x97Z!\x1e\xa3l\xc9\x87w\x15o\x9f1\xc1\xad\xbec\x92\xd4\\?\xeb\xe84\xb4\xe41(h(s\x92\x0b\x14\x06.w\xd7\xea\x183\x06\x97\x06\x0c<\xcb\xc4;B\x0c\x0c\xc2q\xa8\xce:i\x9f\xb7M{\xe8\xf4|\x91\x8f^:\xdfK\x8c\xf7._\xe8\xb9\xc4\xb9u,^\x8b^\xa5\xd4\xb9[\xcc:Im\xba\xb8\xab|E\x12\xd2\\T\xabX\xa8:\nx\x86\x1d\x0b\x88\xbf\xd7.\xbfR\xf8\x80\x1c\xfd\xc2GO\xcc\x04\x94\x1fr\xbe\x9b\x88@\x01\xb9\x9ciR\xb3\x06<\xce\xf9N\x98\x81@X;\xb5\x8f\x984\x94}\x87\xfd\x03\xe2;\n\x96\xe4$\x0f.\xa5P\x03YV\xd9?\xdd\x12\xb7Vb\x1e_\x98\x12\x00\x11\xc33m\xca\x9c\xc3>R\x84\x18r\x9e\x89^\xe4zP@\x95\xd0!\x15\x8f2\x89W*T:;\xe8#2\x86\xc8R\xe5\t\x11\x83R({f\xb1\t\xd9=s6\xdcr\xed\x05\xb6\xaf\xf7\x8fw\x9b\xf5\x16\xf2W\x8ege\x9ee\x1b\xfd\xe2\xcds\x16\x0e"\xdf\xc4\xb3\xcea\xbf\xfb(?\xcc\x00\xc1O\xb8x\xbb\xb2\x02\x83D43+x\x9f\xeb\x83\xda\rCp\xfcB\x0f\x10!/\xa1\xf9\xea0\xc7D\x89{\x8cY\xae\x97Q\x97\x1cK\x8e`\xcd\xb3\xb4[\xe8V`\xd4\xbb\x83r\xe5\xcctX7\x1e\x8a\x86R\x89\xdex\x95k\xe2*\xaf1\xe71\xd6\xa7b\x0fo\xcc\xa9\xbc\xea\x05\xc0\x8f\x13\x15\xac\xc4\x12\x92j\x08\x83P\x8b\xc9.\xb3\x81\x11\xc1\xc6\xf1\xcc\x05Yn\xb3(0\x12\xb7P\x8a\xec\xc2\x14\x96>&\xa8s\x8b\x86k\x81mo\xff\x00!C@\x0fF\x08\xab\xab\xe5U\xef\xc5Kc\x81\x0e\xe8s\xf4|@[\x98\x13\x98g\xb8g\xb9\xef\x0f9^\xf0\xa3\x07\x9c\xf7\x8f\x94|\xe3Ng\xbc!*\x04\x08\x10%TH\x93L\xbe\x8fL\x1e\x85\x86f\x82\xael\xc4\x02V\x88o\x11\xf1\x0b\xdbb\xa5IU\xa12\xbcy\x8f\xed\x8c\x92\xd2Xx\x9d\xf5\x9dK\xf2\xff\x00\x7f\xaa37\xf33\xd9\xad\xc7C\xdf\xbc\nj\x8e\x93q@a\x1b#Z\xa5\x02\\#%\x13\xbc\xb0\x1b\xc6\xe5\xd5\x99A\x0cK\x86`\xc2\xe6\r\xc3\xc7[\x87C\xf4Tb\xe2/K\x8fE\x97\xd2\xfa\xf35\x16\\\xe6\\q\x16\xa0\xcb\xaej_[\xe6\\\xaa2\xb0\xed.c\xa4|\xcb\x95\xed\xb8\xdf\x9f\xccF"\x1e\x93\x1d/\x11\xa5\xba\x99y\xbea\x8d\x98\xf3\x049 \x0e\x12\x9b\xb5r\xa4\x1d\xa9\xcd\xd5\xcdJ\xcc1\xab\xb4\x02c\x10\r.c\xaa\xee^\x1d\xe2\xac\xbe\'X\xc3\xf6\x93\x03\xfd\x89\x95gp\x01\xedZ>Yp\xd6ge\xfe\xc8\xc8\x83\xc5\x0f9\xef/py\x90\xff\x00OE\x97?\x98>\xf0}\xe5\xfb\xc5\xf7\x96\x80\xc4\x14)\x08\x06m\xd6TTD\xb9X\x9c1\xdfL\x9e\x86.`\xb9\x8aZ8\x9b\xa0\xa2\xac\xa7\x88ty\xb5Qr0\xd6H\xa7(\xb8\xb3\x82\xdd\\\xc9]c\xeah\xa1\x9fP\xd5\xd5o\x12\x9c\x13Ix\xdc]\xce\xfa\xc4\xde]E\xbcB\x11:V3\t9 Kk=1`B\x10!\xea\rB\x10\xfd:\xe9\xde&g=/\xab9\xe8E\xf1.\\\xbe\x97\xd2\xe5\xcf\x89\xf34\xcb\xc9\x17\x1e%\xe2\\\xb9pa\xb9r\xb63\xc6T\xb6{L\xa3\xf5\x85\xd72\xf3p\x17\xa4\xb7A4\x03\x96\xe1l\x84.\x92\x96\xdf\x94\xba\xd6\xb6mj\xbe\xd0\xd4\xb0\xd8\x95\x88~"\xb8\xac\xa4)\x970\x1c\x08\x05\x82x\r\xa7\xe0\xfa\x85;G$x[7\x9e\xac\xf8L\x0c\xec\xef\x83_\x80K\xe6\x0e\xf4\xb5\xb8A\\\xcb[\x84\x12,\xb7\x98)\xda\x8frZ\x08@\xe9P\xdc\x1e\x8fD\x89\x1ebb\xea0\xf6\x821\x99\x93\x03\xd2\xb4`\x92\xaeX ;\xcc\xa4\xaece\xcc\xb2f"\xebO\xdcta\xfb\x95\xa5\x9a\x8e\xab1\x97\xb2v\xd9\xf3\x11\xdf\xe6=\xb57ML\x97\xa1L9#\xbb\x8c\tp\x02\x96\xeb\x17\x08\xa2\xc3\x92X\x1b\x8f4\xac\xc2m\x08O]._\x89}/\x12\xe5\xcb\xc4|\xa5\xf9\x8f[\x97\x17\x1d\xe7\xe2\\\xb9r\xfcM\xcb\xcc\xccYy\x8b\xd7R\xf3\x16\xe5\xea\x0f\x1d9\xb9r\xb8P\xe08\xfd\xca\x03M\xc7\xcaa\xb6\x1f\x19mf4.\xf2\xc8\x0e`\x9d\x90\x82\xcaV\xb0!\t;\x7fF-V\xaa\xbc\xcb\xfbo\x18\x04\x03\x13\xb40cP\x00*\xe07X\x95\xb34\n\x16\xf1.\xa2\xbe\xe4\xd1\xf8\x08\xb2\xd3\xd8\xe0\x0ba\xa0K5r\xd7\xa8j\x0e\x0c\x13\x0ea\x16\xb3\xcb1\xee=\xee]\xd0\x1c\xc20o\xa1o\xa0\xc4%W[\x86[\x97S2\xe3\xd2\xea6\x8b(\x82\xc6Q8A\x89B\xcbO\x13gh\x0b\x0c\xd4;Jn\x1aR\xbf\x10\xd3\x94\xc5\xe2w\x953\x98ns.u\x92s\x7f\x11\xd1\x97<\xb3h\xa6b\xed\x18\xe6\xe6\xb3\n\t\x19\x96\x02\x9cs\x07\x18\xa1\xde\\\x19\x95\x9c\xf43\x088\xf1.\x0c\xb9r\xf3._\x9e\x97\x17r\xe2\xdc\xba\x97.]\xcb\xbdK\x97q\x97.,Yr\xe5\xf3\xd2\xe5\xc7\xf4]K\xb82\xf17\x15\x0c\xadJ\x91sc\xe2&YT\x96\xdd\xc1w\x9d\xc7r\xe4\xcc\xd5\x99~\x98%f\x14\x00\x18\xc4E$9\x99GR\xef\xb4\x06\x9d\xc2v\xb3\xc6!\xd8>j\x1a111?\x1cS.cT\xc7\xc4\xc8A\x0fk\x9aA\x05sEK\xd1\xa6v\xc0\x93\xd1}\x14u\xc0\x9b\x9am~\xc2/\xe6=\x0b:\xdf\x93\xa9(b\x0c\x1b\xe9p{\xc0J\\\x06\xe1\x15\xa9^\xf112\x91\x84\xfb\x8e1IT\xc7)\xe8\xb1\x84\xa0\x97\\\xb6\xe5\xe2\xf7\x94\x04\xdc\x10\x8e\xed\x902\xf7J\x11\x11q(\x11c\x119\xaa\xa8\xb0\xd6\x1f\xa9W\x19\x8a,\xe5\xfcE\xb8\xbf$c\x18\x1b\xa6WZ\x82\xe1m/\xcc\x05\x06\xf3\t\xac\xca\xcc\xca@J\xa4\xafyIN\xf2\x95\x1c&\xf3\x03\xa3)\xbe\xe5\xff\x00@c\xda]s\x18\\f,e\xcd\xc5\xfd\x17\x99sR\xe5\xcb\x8b\xde0\xae\xfd\x03.V\xe5\x18\x98\\\xcc\x91V1\xadn\xd72\xfb\xba\x97.e\xb2\xd0\xb9\x84\x84\x0c\xea\x1f(\x03r\x81"\x8b\xaf\xcaR9}\xca\xb8\xe7\x984w)\xbd\xaf\xeaR1\xe2P\n\xfcL,A\x04r\xa9I\x11\xbas)F@\xf1\x97\xf1\x06?\xa8r\xc0\xc7jO\xd9X\xb9v\x1d*\xa7\xceLe\x82\x99\xbd fO=,Qf|\xd3"k\xd4\x183\x1ee\x8eb\x8ec\x97x\x1e\xf0\'$\x07yJ\xdc|\xa7\xbc|\xe3\xe7\x1c\xe0an`.\xe0=\x0c\x13&\xe5\xd0\x1f\xea9\'9\xa4\xac\xe2\x12j\xda\x8dw\x96j\x19\xd9Z\\\xc0m\x9b=\xcf\xa2U\xb4T\xb1q\x1c?\xdcc\xe2?q\xcc\xde&\xb8\x95\xd8\xa6\x99\x8c\xab\x88@\x8aB\n\x97\x88HfT\xe6W\xbc\x07x\x1e\xe4\xae%\x0eg\xbc\'8\x89[\x94\x81\x80a\xfa{X\xf5\xf8\xb3\x19^\xf2\xa3\x11\x10k\xeaW\xbc\x04\xa4\x04\xc9\x97/\x99\xc1*\xe6\xa2Hn8\xed\xd0\xb9\\\xd5\x93S7\x84\xeea\xfd\xa29\x82\xb1#\x11\x80[\x00o\xea\t\xcb\x99W?p)\x08j\xca:s\xdfR\x8bodd)\xcc\x10\xd1\n\xabO\x88\x00\xc4+&\x14\xa1\xe2;\xee[\xe3\xbb>(jr&8W\xfa\x18\xe1P\xab<-\xd9\x9e,_\xa2Q\xf8\xcb\xc5\x07_*e\x8ep\xcb\xa5\x93\xc4Y\x8f\xdcQ\xcd\xa3\x851\x97/\xa2\xbe\xe3\x8cS\x99\xdf\xc3\xbb\xf2\x85\x8d\xfdG\x95\x91\'1\x15\xb8\x1f\xfa\x95X\x1e\xf0\t\xbc\xc2\x82\xe8\xc5\xd4\xcc\x945p;\xc6s/7-\xe81\x18\r\xe1\x82b\xb1\x8cS\xcc\xc5\xd5\xf6\xa8\xcd]\x91P\xe691\x10\xa2\'\x98\x95\xb8\x90c\x12\xbcJ\x8c\x12\x1dF\xaeS\x96\\\xcc(\xcd\xcbL\xae\xf7\x10\x1b\x1e\xe1\x9d\xd3\x8c\xc6\x85\x1bc\xc9\x03\xde\x03\xbc\x0fr\x03\xbc\t\xbf\xcc\xef$\xa5W\x11\xc9\x06\x8c\xc0\xf7\x80\xdd\xc0\xee\x01\xe6\x05\xe6\x1e}>\xf3\x06\xe2\x10\x12\xf2\xfcE\xf7\x8b\xe5\x951\x84\xc9\x01\x02C02\xbb\x84^\xaaQsB\x18\xee^3/\x12\xe0,\xa1`*\xe3\x82\xb9U\x94\xfcEf\x12\x1c\x80\xe2\x18\xddL-\xe51\xa5>\xe6g5\xf3\x18 \xe5\xe7\xbc3f.Y\x83\xe6\xa1\x83\x1a\x95V\x90\xc0V`\x94\x04\xa4,\xdc\xc7\x12\x83\xdf\xcc@\xa4\xb3_\x88\x8a]<KX\xa77\xc1\x83\xf9\x95\xf0K\xb7c\xc5\xec\xa5\xf4\xb0VN?h\xda\xfd\xc7(I\x1f\\\'\xa1\xaa8\xfc\xf4(1z/\xd4\x0b\xdcj\xb9lA1\x1b\xe2>k/\xe7\xf3\x1c\xe8e\xb2\xb4\x8dkq3\xa9\x83;\x96\xb5\x14\x8a\xb4d\x98\x19\x88\xaa\x8e\xbc\xe6\x12\xb6\n\xd6/\x98\x96\x0f\xdc\xa4f%7\rw\x0e\xaa\xe5y\xd4\xca?(I\x1c\xd9qJ\x98\x87"\xe4.Z\xbdB-\x8cZ \x02^\xa2^\xa5\xf3\x88\xb7\x8a\x8a\x8a\xf9\x97\x8a"\x17\x98\xb5\xa8\xd70\x81{y\x96\xa5\xaf\x8b\x86\x15\x9b\xe6\x189J\x1b#\r\x90\x1c\xf4\x01`4\xc3t\x11p\x90k\xf2\x86\xaa\x01\x8e3\x12\x11LF`\xfa"\x82s\x15\xda#\xda%j:t\x05q\x82-\xf33\x98\x00Q\x81\x18Y%\xe1\x99S\x0fN)\x95\x98\xbb2\xec\x99\x89\x98\x14\x94)\xbcK\xbd\xee.^0?\xdfq\x9c?\xb4\x01s\x02\xb5\x0b\x942\xf3)\x18\xb2\xf4&\xc0\xcb\xc4\xad\xe5^\xd0\xd5\xe6Y\xa4*\xd9p\xa8T!\x82Q\x0c\x96\x1a\xe3\xb4))\x8b\xfc\xa1G\x9cJ\x8f ?0\xdd\xc8\x8d\xf8[\xf9YV\xf9m\xd4\x90b\x8d\xbd\xb25\x9f\xc7\xdd\x99\xd9\x99\x98J\xef\x1ch\x99\x93q\xcdb\xcc\x1dO$\x1b\x8b]\t\xda-\xe2*\xea)b>\xda\x9b\x92\xbe"1\x99V+\x11\x05x\xf9\x95\xe2_q\xff\x00\x99)\xd5\xa8*Y\x00h@\x1b\xac\x1a\x8a\xf6\xf0\x08\x87\x01\xd6#\xfa0\xb9\xe8\x1a\x93\xb5\xdf\xed\tH\xa8\xd8\x1f\xf6\xc8}\x06\xfc\xc2J\x1e\xee<G\xdc\xb6\xc6\x01\xb6\xc4a`\xf1\x16\x14\x9cB##\xbc\xb1\xb0\x8e\x00\xae"\x96\xf5\x04U\xae8\xd22\xef8VUGaTy!|\x9f1\xbb\x1f\x1f\x112\xa9pV\x98!\x0fj\x82K\x11ww\x1d\xe0\x7f\x91\x04\xe7\xf3\x02\x93i\xef\xb8U5\xf7/N\x0fHr\x1a}\xc2\x06\xef\xeaX\x7f(o\'\xccr\x9bB\x06\xe0\xc2**Q1\xccz\x86\x10\xa40\x81\xa9\xd8@\xccU\xe2k\xa8\x96\xc5F\x08X\x1d\xb8\x96k\xe6X\xae(3\x15\tj\x95\x0e#\xa5\x1a\xf1\x9c\xe1*\xad\xa8\xe1S\x05{\x85\x9f\x80`\xbfm`E\xc2\x0c\x1e_\x99A\xcc0v\x94\xd8C\xa7oQ\n\xae",\xb5\x80\x7fD\xac\x00\x84\x07y\xb4MP= O\xeb\xa6\xf0\xe6V\x17\xe73\xb2\xeaT\xcb\x06\xdf\x17\x9f\xc41i\xaa\xd4\x15%^Y\xc2\x1e\x9a\xc6O\x11\x8d5G\xdb\xf5L\x9b\xcc\xb2\xc1\x99\x9b\xe93\x14\x10k\xa0\xc4\xa8 b&&<\xc3\x80\xeds6 \x87\x12\x93\x89\x99\x89\xab\x14\x84\x0e&\x0cJ\x024\xad\x90\x00f\x13N/\x99r\x15\xe2]g\x11\x13_\x987)\xf3\x03\xa3u\xca!\x80\xb3G7\xe7\x88\xc3\x0f#a\xc5\xa5%\xfbf\x9e\xe7\xc5\x96Y}\xcb\x11\xe6\xc8\x84\xa1\xd4\xb0\xd0)\xed_\xc2^\xe1\xc1\xb9Ie\xe9\x95b\x0e\x980\xa1pM\xe6q\x16\xa8\xb57=\xealc\x05\x01L:\xc57\x06\x98\xab+\x1b\x9a\x7f\xbcG\x1f\xd4Y\x82\x9e\xe4\xcdUnp\xc57\x9b\xea&\xbc\xe3\xaf\xf3b\x1b\xfb\xc3\x95?\x10}\xcfj\x95P\x87\x00\t\xcdE\x0c\xd2\x15-~`\x00\x7f)QF\xd3\x172\xb2\x8f\x88\xe1vG\xa8\xfb\xe6\\e|\x11v\x99E\x14+\x98U\x9e\xd8Y\x9a^\xf2\xce\x18\x05\x86\xa1\x82\\7\x1c\xa9\xed\x98\x95\x99A\x80w\xa9Q]\xd3\x03S\x10\x0c\xa30\x81\x141\xd6\x18\xf6\xd3\x96W\x14\xfdE\x02\x98\xc0c\xa4g\x0e\x99\xf4R\xa4q,\x12\xa0esV\xda\x9f\xbeJ\xb9\x92~P2]\xb0.\xd4+\x1fI\xdeC\xa6;\xea{FM7p\xea\x9b\xd4\xe5@!\xfd\x90\xca\xafIJbR\x06\xe6(\x14\xef\x1a\xc6\xc9\xfb\xcd\x11\xb4\xc9\xf3\x05\x08\xba\x8c\x96\xfc\xb8\xfeX\xf7\x1c\xb3\x07\xb4\xa5=\xfd\x08\'\x08\xcap5s\xe1g\xb3\xa4m\xff\x00\x90\\\xd5<_\xa26\x08\xbb\xe9\x96u\x08)\xb8\xf4JOX@\xa4\xb5K\x96"\x89\tQ\xb8\xa2n&\xa6N\xd2\xd4\rw\x8c\x19_\xda\x1d\xb8D\x1c*8\xee{\x8d\xb41\xde\x11\x0b*\xcc\tV\xbbIi\xda\xf5\x97\x7f\xb4H\x8a\x9bZ\x87\x9c\xb8y\xa0\x98\x89\x90\xdc\xc1X>\xd4\xbe\xaa\x16\x84\xd5\x07\x04\x03\xdf+\xf1\x1c0\x0cs\xcf\x91\x87u\x8fIR\xc4\xfd\xe5k\xf3s\x04\x18\xc4\'\xd4\xb1y\xd4\xa0O\xa8T\x05\x17(\xb1\x0c\x8a{\x8bF1\xb9\x8d,\xb4}\x91\\G\xb7\xfb!\xa4\xdf\x88\x9f\xf2%w\xf0\x83b\xbc\xd5J\xd2\xbe\xa1R\x8b\xe2\x05\x0e2*oW9\x95eT\xc1\x0b>\'\x03\x1e"t\xb40\x17>"+?\xa8\xd0\x0b\xea p\xf5\x1d\xbb\xea=9v\x95\xf7?R\xb9\x0e\r"\x9cA\x9cz\x85\x1df5\xe2\x10\xd4\xa3\xc4S\x0cC\x99^\xf0.\x1c\xf7a\xb5\t\x85|Y\x15\x9e\xd9=A\xa5Es\x1d\x1cI\x8eZ\xe3\x89Mj\x19HT\x87\xf0A#\xbcM\xefU\x07rj^\xd18\x95\x1c\xca<\x91\x9ae1\xebVX\x05\xdb\xdajt\x86\r%5fa\x15PCP\x86e\xd3\x18\x8d\xa5+\x98\xba\x91\xcf2\x97R\xebq\xa5Vf\x9d\xa5\xf5D\xcb\xf4@\x19}\xcb\x1dF\x9a\x10\x1a\xecU\xbe\xe2\x8d\xb5\xf9\xe6\xfeP\xecAq/k0\x8eH\x0e?\x10Ud\xed#\xf6\xe8x\xa2v\x82\x83\xed\x17UR\xec\xf4~\x97EAi\x95\xa8\x94\xb9`\x8e`\x1e\xf1\x1d>\xa6<,\xb6\x05\xfdF \xca\xdd@\x18\xc9\xbb\xe25{lX&\x1ae\x84l\x95\xa6\xe7\x81\xc5\xfa!%\xd2l(\xdd\xfbZ\xf0f\x07\x08AMVyX\x0e\xbf\xee%sB\xce\n\xc7\x81k\xbd\xbe \xab+\xc5B\x8e^\xa2\xbb\xb9\xe0\x82\x164D\x8b\x15\xcd\x12\x82\x7f\x98\xe60\xe6X\xf8\x19\x8e\xd1\xa7x\xe5J^\xd1m\\\xf0\x9b\x98\x1b|\x11\x1d\x89\r3\xe6\x99cY]\x9c\xff\x00\x9c\x83<<A\xe2\x95\xeaZ?\x84Cu\xfa\x8b\xab?R\x889z\x8a;\xbb\xd4\xa3\xfdz\x11\xa3\x87\xd4[_\x84\xe3\x9fSX\x0f\x89\xa8\x1fP=>\xa5?\xeb9\x19\xfa\x8c\x7fI\x98\x9d|\xbabz\xc85\x89R#\xb4\x08E\xca/\xb4\xad\xd4(\xddOH!\x894\xb3\x15!*\xc0WS\x88\x86\xef\x00\xc4\x04\xa2`c\xa4\xb5iq\x1dn\x04\x08\xf1g\x0b\x1d\xdc\xe5\x967`;B\xe0\xc7j\xdf\xc4&_\xb0\x8c\xa4\x934I\xea7\x84\xfa\x95\xa6G\xc4\x001\x08\xe2\xa5|K\xe9\x8fS\x08\xf3\x06\x8a5\x1ff/3\x02l\xcf\x83\xa3O\x98\rZb\x10GKP\x0b)jy\xcb\xf6C\xe2\x16y?\xb8$&8\x02\xf5u\xf3\xc1\xf8#?\n\x10p\x86\xb7\x08y\x02\x1aWg)\x0b\xc3\x0f\x88B\x92\xf8\x97o\xd5*\xa5\xe1.\xb5\xae\xe9)\xc5\xdd\xc9P\x17\xfa\x8b\xb2\xb7\xc94c\x9e%0\x16\xd5\xf35by!\xce\xe3{O\x07\xdaS\x1aG\xce \x9b%\x83/\'c,\xae\x1cP\xa8\xdd\x85\x984\\K\xe2\xbe#]j\xb9\x98\x94[j-\x06\xda\x975\x0b\xf1\xb8=B;d\x03\xb9\xba\x11\xa8"\xb3\xc3\xf8\x080\x1frS\x8b\xe0\x82\x7f\x08"\x0f\xc9\xa9x\xd0wC\x06%\xc8\xa0$\x88\x8d\x97\xde=\xcb\x9f\x10\x11\xfce\xaf\xe1\xb8`\xd5\xf5*{%j\xc2)5ma\x18?P|>\xa1`\xbc`R\xa4\xc2\x0c\x0c\x010\xb1\x05\x94\xd6\xb1)\x8e\xc1\x11\xc19(`\\\x1d\x03\xd0N\xf4\x0fdI\xc4\x1e\xd2\x8e!Xe\x0e\xd3(\xbb\x88\xdcW\x8b\x97\x92\xd6\'\xb4A\xd2\x06\xd1\x02\x80:\x82\xc3\x13d\x02y\xa2\x184\x16\xe1\n\x97\xb3\x8c\x86\x97(\x17\xc4e\x0e\xf2\x8c\x19\xb3 :C\xdc\x15\x838\xe6h\xdf\xa8\xf3B\xfdA\xde\xdf\x04\xbfQ\xf1\x1d7\xf5\x12\xcb\x95m~\xa5E4\xf8\x81\xc1r\x89\xe6)\xda,\xc0\xd4NN\xfbM\x9d\xe3MK\x1b\xb9i\xa5\x1c\xcc\x96\x8c\xf9a\xff\x00L\x0f\x06\x08\x0b\xb1w8_\xd9\xbe\xd2WB\xb3\xb5p\xff\x008\x84\xa1\xae\x0f(5\x00\xf7\x18\x9b\xe9\xe6>\xcb\xefY\x88l\x0f\x10]\x96\x9d\xe1\'\x05\xb2\xa6h9cr\x8c\x16g\x12\xef\x91e\xc0J\x170HYy\r1+\xaa\x9a\x80X\xa3Cpi\xf2"\x81\xb3\xda\x89\x14[\x98$\x13\x98G0Cp[\xcc\xdb\x98\x95n#_\x10Yg\x13\xc2K\xf8\xfa\x9e+\x99V5\xe0\x8b\xe3\xf5\x08\xb6>\xa2\xab\xa7\xd4\xa6\xd1\x1fR\xfc$\xc1\x08\x96!Z\x84\xb2\xb4\xf4f%Y{0]j\x1e\xd3\x91S\xdf\x98~\x18\x8f-a0\x00\xa3\xee\'\xa0\x89q)\xaa\x82q8f=@\x7f\xc4\xac\xd4\xc3\xa3\xea\x1e\'\xd4\x08\xd5J6@\xbaB\x1fi\x8b\x88\xde*W\x87\xf6\x8c\xec\x8eL\xc6rEUK\x0e!\xfeXF\xc3pX\x86\x16\x98\xe2U\xc5;\xc3\xca^\x98#\x11\x04\xc0z5f\xa7\xb2b\x88\x10LA\x82\x88K\x11\xe0aoP71\x15\xa5\x9cA<\xc7|\xa8j8{\x8b\x8ct\x14q\xdfE/5\x13\xc8\x86f@\xd0\xf8\x86\xb4\'\x1bb,>!\x8dR\x12\xd4\x85\xa5\x90{D\xf0>&\xe0Oq\xd5\xd7\x11\xb8M\xff\x000\xfc\xca\xb8\xba\x82\xe9\x9a\xde\xd5\xaf\xcdKg\xc71\xa3\xf2\xac\xb0MC\x95`\x07\xb0\xc1\x1d+C\x83\xb4\xcf\xde\x1b\xef/\x08\xd2T\xa4\x18\x167\n\xed\x01\xaa\x85v%\x16%e%\x92\xc6V%\xc7=\x16 s\x11\xcc\xef\'q\x88\xfc\xcb\x1d\xca\xb5\x98\x0c\xaa!z\x95\xf5,f\xa1^\xa5\x07\x12\xa3\x00\xea\x0bl\x94<B\xb7\x00\xa0\xb7\xbc=\xd1\x1c\xad\xf6\x87|K\x1dbm\x13\x1c\xc2r\xcaU& \xa4(\xac\xa533\x1e\xff\x000CH\xf8oivV\xd7@\x07U\x12\xbcJw\xb9k\xbe\x99\xd1pb\xb3\x02_\xe5\x19\t>b\xe9O\xb9Q \x7fhU\x7f\xba^\xaf\xdf\x15\xa8dU\x80@=\xcc[\x98w\x0e\xf7\x03{\x9d\xc4\xa7\xfe\xa0\x0ee;\xc4.\xff\x001\t\x05\xe6\nB\xef\x1d;\x0b\x85x"\xe32\x9d\xe23i\x04FC2\x86\xe19\x80\x1b\x96\xf3\x18\xf7r\xc6\rD-\rF\x97\xb0\xce\xa5\xce$\x9c\x91G\xa8[\x98\xe3\x1c\x1f\xdey\xca\x0b\x84\xa9jk\x18l\xdbq\xa7\x8cC\x1a&\\a\x8d\xe4\xf1\x05h\x9e\xa5\xc2\x98]E\t\xbdu\xc8D\x83\x1eH)\xce=\xc1\xb7\xe6[\xb9(\xf7r\xfe\xc4\x1b\xe6\x15e\xadx\x0c\xfd+*\xc1\x86\x0f\xda5\x80\xcb\x1c\xea\xe7\xf10E\xfb\xa0D\xa2\xcasvAv\xc2\xe5\x985\x08\xb4\x1bs\x1cMy\xe8\xb2\\\xb7\xb4|\xe2%XB\x12\xb5,\xe2Q\xc4\x03\xbc\x12\x8aA\xbc\xc1y\x94\xb8)\xb8\xa8\xdb\x08@.\xa3w\xa8\xe8\xe9\x0c\xf7E\xdd\x8f\xb8\xec\x08\xcbL\xe6XM\xde\x12\xcf\x18\x83\xcb\xdc\xc8\xfd\x0c\xce/\xf3\x0c\nz\x94\x14\xa8T\xaf\xcaw\x9f\xb9I\x86Rq9\xd6&\xb8\x8e\xe5\x88\x93\x96\x14\x08\x10\xa5\x0c1\x84J\xe21_\x82^\x18!\xe5\xdf\xdc=w\xf3\x00\xc5\xa4\xbd\xb6\x10\xdc\xf2\xfe\xe5\x8d\xb06\xa6\x194\x82\x1aB\xad\xcb\\Kr\x92\xceOPC\xfbJ\x96l{=\xc2x@\xad"C"\x07\x02\x0b\xc2\x01\xcee\xbc\xc2\x0c\xa4\xe0\xc0\xdb \x86\xe0\x8b\xfc\xa2\xae\xa4\x0c\xc1\x87\xb3P\xc1\x88d\x9e\xd9\xc0\xfe\xe1\xf8\x1fqS\x07\xe6+\xd8e\xea\x97\x13\x00m\xbfS\xc4&\xd5&\x98}\xca\xbc\xc0B\xdc\xcb|\xe2X\x8d\x17q\x82\xfa%\x89w\n=\xe0\xf3\x16]\x13\x0e\x10H>w\xc4\xa7>(\x89U\x8a5\x88i\xef\xff\x00DS\x02\x8e\x8a\xe3\xf6\t`\xe0\n\xc7\x05K\xbf\xba\xac\xba\xb9\xb7\x11\t\xa6\xd4\xf0El\xe0\x11B\xc9\x8c\xc7\x8a@\x98\xb1\xecf\x80|D5b\x17,\xe5a\xe5*\x97\xeeT\xae\x9b\xe8\xc6\x1as\x00w\x07\xbc pA\xee"\xc7y;\xae\x9a\x86\xe1T+\xde2Gy\x8c\xe1\x08U\xd1\x18j\xc9aW,\xb6+\x06j\xc8L*\xb4\xfdK\xe0\x9d\xa6H\xba\xdf1\xbc\xfe\x12\xd6C<s\x16,\xb7\xef\x11\x1fb\x04a\x9d\xd3\xbcx\xecA\x08I\x99K\x9dJ\xf9\x9a\xd7\x07W4@\xaebM\x08s!\r\xc7\t.\xb6\xc5o\t~\x84\xa7iyW0?P. F\xa0[P.\x99\xdcH<v\xda\xc5\xb75\x9b5!E\xc0\x17k\xe4\x8e\ry&5\x9fs9\xa4X\xdaQ\xfe\xf2\xa3\xc2m\x1dw\x18\xd6#\xf3\x0b[~X\xa2\xd3\xeeY4aD\xdf\xe6\x10\xa3|D$\xb8Gx\xf7\x0e~\xc3\t\xe5\xbe\xccf\xc5>b\x81\xfd\x99\xb1\xa7\xb6\x12\xbf\xce86!\xc8\xa4Yd>\xc5\xda06\xf8\x89\xb4?\x13\x94\xb1\xd0i\x1b\xc8\xb9\xa4\xca\t\xbcD\x8b\x9c\xf2\xa6\xba\x1a\xc0S\xbf^\xfb\x86R\xb7-B-P\xe8\x18~\xd3\xbd8;)j\xc0\xbfK\x1cWv\x1e\xca\x085q\x9aP;\x95Gkr\xa9\\*9\xa0HO\x10: B\xdeH\x08\x15\xbc\xc0\xcc\x17\xdc0\xa8\xc1\xbb\x9b\xc8\xc3p\x0c\xac\xb1\xeb\x90.Q\xc4U\xa8\xec\xc5\x1f\xf6w\x10h]d\xc7\x1c\xc10,)W\x18\x81\x17\xf9\x83Z\x87\xe3\xa3~\xc4dO\x08\xbe\x13\xb7_\xa9a\x0bi\xf5\x15\\\x9f\x13\xff\x00\n4i\xf2A\xf0\xf5\x01\xe1\xf5+4\x80\xd4a\x83\xb4J\xf8%\xae5;4\x1e\x92\x04\xe9)u\xfb\x95q\x94\xf6\xfc\xc0\xa0\xb6-\x86e\x0c2\xe4\xc3\xb4HvA\xf1=&!W\x89IYb\xe0^\'\x05@V&\xdc\x8c\xc5Y\x98G\x02\x06\x06\x15/)\x04b\x8fR\xeb(:\xbd\x12\x84\xbf$\xc9]\x9e\x18\xdd(\x1e`\x92\xaa{\x94\x87\xe1\x00f\x8cvPxg\x0e&\xd0\xf8\x9eI\xf5\x00\xa7\xf1\xc4\xd7\xa9\xee\x1b\xa4\xcd\x08K\xc1\xa3q\xe0m\xe5\x95l\x0f\x17\x00`\'\x86\x00R\x07\x98\x03\x97\x81+\xc6\xc1:^\xf5\x11\xaa\xfd\xc2\xca\xb9\xe1\x82-_P\xb7\x92\xbbET\'\x88\xd6\xe1\x1a\xa2\xd4\xaa\x00|\xc0\x84?p[\x03}\xa5>&p\xc4%\xb8\xb9\x9d\xcc\xc8R\x1er\x9c\xfe\xd2\xd6w\x06\xb7\xd2s2\x8bC\x80\x05\xed\xb4\xa2\xd0\xe5\xc4\x08.\x04\xd0Y\x01\xeeJa\xb9\x02\x13\x80e\x92)\xf1,\x9f2W\x96j\x16\tK`\xc4\x0b\xabK\xc8oh\x14\x95\xeeEh\xce)\x061 \x07x\xd1\xac\xcf:W\xdb\x0f\x0f\xe2\x0f\x9f\xb8v\xe9\r\x97p\xa8.\x15l!\xdc6\x14\xef\xa2\xfc\x91\xa3s\xb8\x08\xe4\xc2\x01\xd2\x0f\xba%\x15\xb7\xf79(\xa6\xe1\x7f\xf6%F\'\x06\xa7\t\x96\xdd$v\x8b\xc8\xbe\xa7\x1a\xd9\xa7\xb8\xdf33\x1c\xf3\xe2r\x8b\x13\xe2\x11\xc2\xcc\\\'\xb8\xae"\xb7S\xb4\xfcK\xde}D\xf7\x9eTZ\xd33j\x1e0\xaf\x08\x07a\x99\xcb\x96pD\xc2\xd4qA+\xa38\xad\n\xa9h\x7f\x17R\xf5\x97\xa2\x0b\xb7\xe2\x15\xeb^*ZdE\r)\xee:\xc2\x86\xed\x98\x85\x98\xf1@\xf6\xa8\x8f\x15\xe23\x86\xfe\x18\x80c\x18L\xbfD\x11\xb0_8\x96\xab"F_\xa6g\x1bN\xe4V[\xecM`\x17Y\x8aTe\x8b\x14v# \xc3\x8dEM\xe8\x84!\xbd\xb0\xd5\x15\xf9\x89\x82\xb7h\xa1\xb7\x99\x1b"\xa6s\x981!\xdc\x94\xb8\xef0\x02\x0f\xb9\x8c\x05\x96[\xcc\xcdA\xe9,\x96=K\x162\x0e1;\xc4\xc4\x07\xcc\xac\xa3~XqK\xf3-\x87=B\xe1x\xe8\x12e3\xc4\xbc\xdf\x88\xbbG\x83\xbc85\x8c\xf6k\xe4\x10\x11\x19\x7f\x12R\xfa\x94\x82,\xcc\x80\x8f\xaa2\xb5\xf4\x98\xb2\x92\xf6K!j\xa8v\x93,\x88\xa5\xe5\x0e\xec\x9c\xeb\x17\xcbs\xbf\x17\xd9<x`\xf7+\xb9A\xccd\xec"\x0c6\x1db\x03\x89u\xe2g\xd6{\x90\x80qPs3\xb7\xd0\x1b\xde:\xe35\xd1\xbb\x98\xdf\xb8\xf7\xe3\x08\xb1\xca\'\x95Fr\xfb\x896\xf5\x1a\xc2\xb1+\x95\x8f\x94=\xa3a\x15\x1b\x96E\xcfC+!XA\x8b\xac\xf7\x85\xac\x12\xc1X\x8c\xdc\xec\xe0\xeb\x15\x00j\x08\x80p\x81p@\x0c\x13\xc0C\xd2y\x8f\xb9O$\xaf\x98\xf7\xe7\x81\xfa\x86\xe0c]#7\xb4\xe1He%\xc4Tg\x88\xb0\xeeRF\xaf\x98\x15\x05\xf6\x98\xb6D\xe1\xa6:\xaaPP\x17\xccl\x908\x8d6=\xd84\x8b^n1\x1b\x13bZ\xad\xf1\x98\xfb\x15\x95Z\x84\xcaWl\xb0\xe8\x92Y\x94\x0fhMD\x97\xeb\'\x86#!N,\xca\xa3\'0\x96\x05\xe2\xa5\x91\x1e\x90\xc7?h4kXj$\xed\xc6\xa5\xb1\x91\xba\xb8\\\x9dsd\xba\xaa\xaf0 X\xebp\xd6!\x8c\r\xee\xa2\x81#E\xb7\x10\x85h\xa8\xb0umCBP\xcd\xd9\xe6\x0c\xd0l\xed\x10W^"\x04\xc3\xccj\x929\xa9J\xe7\xe6\x1e\xa0>\xe0E\xa3\xcc\xc3\x8d{\x87\x9c\xc9\x1b\xe9\xdeb<Em\xc1Z\xf8\x80\xc2% *\x84\xf7(>\x08\xdbc\'\xccP\xccb\x8c\r\xcd\x0b\x86n)\xc83\x86\xcc4\xc1r\xc5\x04\xf5.ag$\x86\x81;1\x1b\xa2/\xc3s\x8dg\xb6c\xa2\xc1\xdf\xcc)^\x92\xc70D\x1dL\x89w\x1d\x91.\x17h\xc8\xd1\xd0\xd8\x8c/@\xb62\xca+0\x04\x17\xb4m\xccq\xd4\xb2zF\xd0;OYO\x12\xd7\x13>\tvL\xc2\x1b3/!*g\xc6;\x03\xef\xdc\xa1\xcf\xda\xc4\x0cc\xa9\xa2\x1a\xb4C\xc5\xf5/\xe7\xf1\x07\xe5<\xc87k=\xe1\xf6\x94\xe7\xa9r\xe0#\x86\'\xb5\x8f\x91\x15S\r\xb1* \xdcn\x85\xcb3\x0c\xd4z`v\x95\x02j\x9f1j\xaf\xee:\x1aN\xd9\x89(\x8fr8@\x06\x9e\xd1\xa0\xa1<\x92\xb24\xd3H\xd6*!Z\x04y\x94\xe5\xaf\x9a\x95\x8f\xcc!\x94\x1b\x8b\x82\x9c1\xdc\x96\xcd\xc6\xecn\x00\x8bn\xe4L\x97|n6Ho\x16"\xf1\xdb*]F\x0e-dU\xce4\x03x\xcb\xa5]\x80\xaf\xed-i\x1e\xcc\x10\xca\xc6\n\xfec\xad\xcd\xc8\xf8\x8f\xda\xddZ\xeee\x1f85p\xd0*8L\xc4\xc2\x14\xde\xa5\x05\xd6\x0f1\xda\x92\xa8.\x9c\xca\xaf\x98\x94>\xa2V\xb9\x8b\xc1\x0b"\x9d\xbd\xa5\x01v\xc4V\xf7\x81G\xe9\x8f\xb0|T\x1b"\xe4*q\x00\x10\xe0"\x97q\xc0(\xdd)ek\xbc%2\xbf\x19\x98a\xe5\x92 K\xd4R\x805\x16\xb5,\x15\xb7}\x89\xee\x13\xc1\x81O\xbf\xdd\x16\x8a\x85a\x86@\xaa0\xc0n\x08\xe6]\xf4\x14 e\x89\x14%2\x04s$\xd2D8\x97\x95\xd0F\xc8\xb9K\x88\xb8\xc1\x9dL\xce\xf0\xe8\x89\x02\xff\x00in\xd2S\xe6S\xd0\x9a\xdc\xa4eSQn=\xdd/dX\xb1\x83\xbc\xc7\xb9\xeb\x1d\x18cQ\x13\xb7\xdc\x07,\x1c8\x9e\xb1\xa7\x12\x8ee3\x82\x04\x07\tC3\\C\xb5K\xba\x9b\xf4h\x86\x12bRc\xf1\x06\xce\xd2\x80\xb3\xf11\x1f\xb4\xa0\x96\xeay&\\\xc3\xce\x1ep=\xeaR\xf7*\xe6R\xf7\x01\xdeS\xfe@0\x11\xc7\xa7\xc6Y*Z*\x00\xc1(ff\xa2\x90C\xdc\x9b\xaet\xe1/\\4X\x12\xdc.\xd4\x11\x9bf\xedd\xc7\x1dj\xd6S5]\xdc8\xe1\xc83\x15\x82\xc5\xb5q \xb3V\xeb\xbaQ\x04\xe3\x00}\\\x00\xc8\xdf\x88\x90+\xad`\xfe\xa5\x99\'4\xab\xfcMh4\x1c7\x05.[\xcf!\xf31\xa3\xf0\xa9}\xd4\x1d\xc6\x16g\xd4\xadT\x9c\xc1\xbfg\xb7\xff\x00\x11D\x1a\xd0_8`\xcb\xd0$\xf8\xe5\xfc\xcc-\xa0\x00\xdb\xf7\xa9w\x90]\x11\xda\x81>\xe2\xf3\x02\x94\xb2k\r"\xd8\xfcA\xa0\xa2f\xdf$Q\x82*J\x06\x1b\xd8\xfa\x86\xc2S$\x01n\\q\x14{ \xd8\xfe%nS\xb8\xfd\x88\xe26;\x97\xf1\x12\xe8\xa2\x00\xf6e\xed\xa3\x81y\x0b\xd4|\xaa\x00a\xe2\x9c\xe6\xeem\x9c\xff\x00\x11+\x88\x1a\x0e~\xd8$\xae\x15\xb8\x966\xee\x98\xb3\x93N\xf0N\x13\xc0\x991|\x8aUa|\x99\xac.\xc8\xfd\xd2\x93&\x07F\x8b\x82\xca\xca\x16\xdd\xbd\xf8\xdcg\xcdE\xd5\xedv\x08\xb8\xc4UhU\x92\xa0{\xfcT\x14\xf8\x10\xc3u_#0\xa3X|\xca\x1d\x81\xd0Cq%`\x81\xb9l[\xc4E\x923\xda\x03\xa8\xe1\x0e{J\x85\xcb\xb1\xa9lV0|L\xb0~\xc8\xa6~q\xb1\x89\xc1/Q\x87=\x0b\x111w\x18#\xcb\x99\x93\x059\x9d\xf4\xc9\t\x161\x10b!\x11"\x8dDs\x17\xb7\xe6 v\x86\xc5X\xc3\xb0\xef\xb4\x004D9\x97\xac\\P\xc7\xe2#\xd4j\\\x16?0\xce\xf1\xef\xa9"\xc3\xb9\x06\xe6\n\xb7\x13\x19\x83\x92\x0c.i>\xa6\xe1\x98\x10Z\x86\xf75p\x96\x90\xb5\xce\xa0x\xf9\x82\xa1)\xb2\xe6\x84)\xd4\x99\xbb\xc4\x1a\\\xab\x12\xa8\xcd)\xfa#/\xee\xd0\xedP\x95\x97\xba\x9b\xf9\x98\x01W\xa3.>\n\xf4w\xcdBh\xfd,\xd9\xe4\x98\xd3eZ8nQA\r\x94\xd2\xc5M\x04\x94\x06+\xf7\x1f\xcd\xba\xff\x00\xd2P\xb6\xdeg\xf0\xc3\xccc\x119I\x95y\x98b\xa2\x05r\xabC\xf3\x18\xd4K\xdc\xb3H^9\x9a\xe8\xf0\\h\xaag\xb0\xbd\x9b\xfb \x9b\x13\xb2\x7f,MX\xed\xb2\x0f\xe2,\xd7\xc5\xff\x00\t\x81\xc5\x80\x19}\x96\x7f,r\x99\xdd\xb7\xf6AZ\x84A\xf8\x8eR2\xaf\x96\xcc1\xe7\x9f\xca"\x817\x9c?h|U\x16dL\xea.C_I\x88\xa3\\4p\xaf4\x01\x95@/\x11N\xc9?`Q\xf9\x99\x8dv\xa2\xbe/\xf1\x00\xdf\x0cw\xfbcB\x96\x85\x13\x85T_$\xb3\x9f;h\x9f$`\xa1\x0e\x02\x15;\x8b\xe1\x8d\x02\x98~\xd2\xea&\xb0\x16.\x15w\xbb\xc4pU\x0f\xf8\xc5\x8fZ\x87\xf3\x14r\xaa\x92\xec\xa8\x98D\xb7\x94\xfcAY\xea:\x94\xb4h\xe0\xafK+\xb8\x05\x90\x86\xb7\xe2"\x80{\x93k\x83\x86/_<\x12\xaf\xdem\x16z\x86k#\xccJb\x07\xa9\xbe\x9cGqg\x04\xee\xcb\x97D\xafhf\xba@7,\x0c\xd2\xc0b\xb6B\xea\xb1\r\xdc\xad\xd4&\x8e\xe0\x05\x91\x0c\xf1\xde\t\xef\x14s/Y%\x05\xea\x0ff\x03\xa8\xdd\xe9a]\xa3\x86\xda\xf2M\xcc\x15+\xcc"\xc3\x17\x86\n\xf2|\xc0\x19\x8b\xc3\xfbDW\x89\xc7a\x06\x81\x88)\x18d\x80h\xe18\xad\xdcj\xdc#\x9c\xc0*\x01_\xc4\xafR\xe9\x8e\xd9\x82\x0e%.o\x12\xd0\xdc\x1a\x9bw\x84 \xc2\x1d\t\xa7\xa5w\x84(\xc5K\xc2\x90s\x10\xbfsm\xdb\xf0\xcbiT^\xd7q\x8fX\xac\x92\xb4\xa01\xea*\xe8\xb4,}\xc1\x0c\x8d\x02\xf7\x98\x8dr\xb1"\x8b@\x16\x8e\xd0\x1c*&\x0b<#\r\xf7S[\xb2%J\xe9\xfb\x89\x1a\xbc\x17\x182\xbf\xe1\x98\xf0\xb3\xf9\xfe\xc8\xf5Pa\xb1\xfd\x94U\xb4\x9b\xc1~\x08#\xec\x88\xcf\x82\xe0\'\xf3\x0e\xfd#\x03\xe0\xfa\xf5~\x029b\xc7\x93\xfc\xc2\x9d\x13\xcd\x17\xee\xc4\xdd\xfc+~\xf3n\x81\xe0\xff\x00\x10\x1e\xabmn\x8f!kYk\x89\xae\xa9=\xbe\x02\x08\x18\xa0\xac;\xd5W\xf12\xb4jS\xe0\xdf\xd4P\x1ap\xff\x00\xca\xc3\xf1\x96\x05jU\x95/\x94\xb6i\x8c\xa0a \x1b\x14}!\x9f\x13H\xb7\xd4\xc7\x82j\x82\x1el9\xa8\xba\x03xe\x9e\xce\xd1\xa1\t\t&\x1c\xc0h\xfa\xa2(\xe0x\x8d\xcc\x10|\x12\xc1\x80\xfa\x8e\xcf\xf1\x15\x82\xc5b\'\x88y\xc4;.\r\xa9k\x05z\x8fQ\x8c\xd8{\x90v\x16\x13H\xcezE]1*61t{F\xd2\xd8D\x91\x91\xad\x93\xfeX\x9c\xe2\x83d\xbbi,\x9c"\xadJ\x97\xa9l\x8cA\x08\xa1\xab\x85#\x14\x98j6\xdc\xdec\xae#\x7fp\x95V\\\xaah\xce\x02t\x05R\x85\xc7;\xb9a\xb8\x05\x08J9\x8a\xed\x072t \xacG\x1a\xd0}\\h\xa3\xc5L\x86%\x92\x9a\x95\x14Q\x08Wd\xb9\xa2\x01S\x00\xdek\xb4\x0e%\x93%\xf1\xd0\x9a<A\x83\x00\x93(0\x84\x1c@\xef\x08j{\x99k3\x99\x9e\xe34\xb7\xe1\xbf\x88\xc5|\xc2\xfd\xc9\xad\x0e\x7f\xbe\x81\x07\xc3\x7f\x01a\x18:\xbc\xa6\xbe\x88\x96\xda+8s\x9d\xa3\xea\xc3\xb3\xfe\xe17\xa7\xe3\xfeH:\x19\x8c\xaaH\xacU\xbd\xc7\xf5)l\x9c\xff\x00U&\xc8\x7f\xab,q\xab}\xdb\xf7!\xc77G\xf4K\x03\xc6\x916\x16\x87\xb8\xc8\xb72\xeeF\x0cE\xb78\xf6\x8e\xb6\xdf\x8b\xe24\x85/\xccp\xbc\x1c\xe2\xe0\xb3\x8a\xabj\x14\xe2\xeb:\'p\xa2\x1d\xa3\x8a\xbc<L\x84w\xab f\xce\x7f\x11\x1e\x7f)tY}\xb1\x105W`\xf0%Pc\xcb3\x8a4\xfb\x82\x96\x1f\x02h\x00\x80\x00\x00;\x13d\xcc\x08\x10Ur\xaa\xc2\xdc\x0c\xb2\xa9aH\x96\xb1p\x1a\xdb2/3\xc6P\xe8\xac\xca\x85w\x94\xe5\x0b\x04\x8d\x1a\xa8S\xcc\xa4\x83\xdc\x85J"X\x8e\xb3)\xd4\x16\xb3\x0b\xb9\x863\x1f\x19U\x88`\xaci\xcc\xd2VS\x97,p\xd91\x86\xd9\x99\xfc\xa1\x90\xddK\xf0#\xc4b\xa4\xec\x84\x86{\x8cX\x15vn\x14\xb1~eUA|\xe65E.47\x89g%\x8f\x0c\xa5\xa6:\x82\x1d\xe2k\xb8\x06\xc8<\xf1\xe6)d\xf0\xc0-S\x86\xa1\xd0\x0ff?7\xee\x03\x9cG\xbc\x8fp\x1b^}\xc1T\x18\x138b5\xfb\xa1\x9a\'\x99\x94\xb8\xd7\x922\xc2\x9d\x98^\xef$-\x15\xa146\xa8\x85!\\\xee\x17O\xc0> \x0etj\x07!\xe2Q\xbf\xd90r\xb3\x02\xf1\x15QWhN\x99xG\xec@\xc5>\xcb\xf7%-\x17\xf8n\x16e~\xd2\x16\xd8v\xbf\x8b\x8dG\xd1V\x8c\x0bO;\xf7\xa8\n\xfab>)\xff\x00\xdd\x98vc\x9aG\xe29\x7f\xfe\xf8c8\xf7\x8f\xf3\x1c\xbe\xeb\xfe\xc8\xb3c\xbb\xfe\x8c\xa6xA\x0f\xc4\xbb\x93\x1e\xa6Q\xba\x89\x1c\xa7\xdc9\xa2\xf2$\x1a\xc1\xd7\xf6LM\xf8\xd9P\xe2\x8d\x0b\xd9\x07+\x83?\xd7\\\xc3/\xfc\x18"\xea\xff\x00\x87bP\xd9\xf7\xd3\x8b\x19\x7f\xee\x88{pk\x05\xfd\x11\x95\xf0\x82?"^\xde\xf8O\xdf\x00\xf4?\xc3,\x01\x98qJq\xcc;$\x9b\xac&\xae\xa9X\x8b\xa7b\xfa\x11\xbc/\xfb\xd0\x94Q:\xac\x84\x81|\x95\xbb\xf7c\x93o=\x97\xd8\xcb\x95\xe4\x077\xaf*\xaf6J\xfa\x07\xed8\xc2\x95\xa3\xef\x04\xc2\x98\xa8\xfc!\x02\x1a\xd6ei\xf8\x7f\x10\x08\xbc\xe5\xad\xf6\xc0(\x01\x073q\xc3\xd0\'0\x83\x89w-\xf4\xa9\x959\xa7\xcc\x04\xe2\x050\xc3\xcaY\xde\\\xbe\x97?\x11\xf7\x0c\xb7\x06x\x0fQ\xc3\x19\xf2E\xd1\x99n\x90nj\x1e\x1b\xe8:r\t\xa0\xfc\xc2\xec1\x0c\x96Ak1\x0eS\x03\xb8\xb7B\xc0\x1ee\xf6BW\x8c32\nM\x9d\xe3\r\x83\xc9\r,\xa7\x99F\x1a\xdc\x9c\xcb\nWfT\x85\x8ds\x04\xc2l\x15\x11V\x18L\xb0\xc8N\x17\x8cG\x8a\\\x98\x9a\xe1\xda\x16K\x18[\x96\x19\xe6\xea\xea(\xab\x9e\x19#\xd4\nwSFe\xec\xbb\xba\x82\xb9\x02\xef\x89\x94\xf42B\xc0\x9c\xd0\xacbt\xed<\x08w\xc0\x1a~\xe1\xf6\x9f\xb7\xf7O\x19\xcbu\xc1`\x8b\x01\x16\x03\xbc3a\x05\xd6<\x99\x95v\xc3\xb8\xc7\xdc\xc3)D/\x06\xfb\x1b\xfa\x8b\xb8{;\x8e\xcf[p8^,\x90\x90n6\x17\xf6\xd4\x01\x855;9\x13\xc4tXo\xf2\x024\x89\xdcK\xfd\xe6\xedk5\xfbA\x96\x0c\x9e\x16\x0b=L\x1f\xc41\xa0.\xf1\xdb\xf3\r}\x00\x7fy\xdeO\x80~\xf0\xa39\xc5_\xd9`\x94\x1b\x87\xf6\xc7\x13gd_\xf6$\xcaV\xb1\xfdRa\x85\xe4_\xc0\x9b\'w\xfe\xc8\xb4\x8e>MK\x8c\xff\x00\x81\xda\x83d\x87o\xfb\xa8\xf3\x91`\x1a \xb1\xff\x00\x8c%\x85\x87\x81\xf5L\xbf\xce\xf6_\xd9\x88\xa3\xf2\xc3\xf7\x8a9\xad\x97\xfe\xec\xfc\xf6\x0f\xdd\x8aW\xca\xb1\xfc\xb3"\xc7\x9f\xfaG\x0f\xe1\x0f\xe6 g\xfaH\xeb\xb9\xee\x9f\xc4=\xa6yP\x83\x1f"\x7f\x89kH\xf3o\xe6\x1e\xd7\xf9\x1d\xe6\x8f\xd6_\xdc]\xc3\xea8C\xd0\x8a.\xff\x00l~a\xe1E`\x08\xfa\x02\n\xa1\x8fe"\x83\xe92(\x82\xebx\x85\xa6\x96\x93\x80\xb7\xf1s\xd1\xc8\xc5\x1c4\x08\x97\xb1\x15_q\xed%\x05_\xe6U/\x94\xf5\xff\x00\x8ee\\y[\'\xa7\xf3p\x80m\x1f\xb2\x08j\x8b\xe2[r\xefMA\xbb\xeeM\xcb\xe2\\[\x9bzj\t\x94\x8b)p\x8b\x19[\xa9\x8dM\x90\x1c\x92\xd3p|\x18[\x99~e\xcb%\xd4\xb9r\xcea\x03\x11\xb1\x15\xacE\xe9\x10\x83.\xe6p\x10\xebW\x11\xda-\xe2\x03\x18\xba_\xcc\n\x01\x1d\xd9 *4\xf3.\x04\xf8\xc4\xc8\xa36\n\xeb\xf9\x80\x96\xb3\xb1"2G=\x98T\r9U{8\x86\x83ic\xa1\xf1\xdeYk0\xdbg\x87\xd4\xad\xe7\x910\xf8H\xc4\xd4\x98v?Q\xacT\xbaH\xb5+@\xcc\xd2\x8b\xf9\x89f\x80j\xf0;\x8cm\xaf\xc0\xe8\xfe\x7fy\xa8\xe5r\x94\xe6Lf\x1e\x12 \xd2\xd0\xa4\xfd\xec\xdce<\x85\xd0e\x1c?\x1b\x8bo%\x05\x80\xddU\xf1\xfe\xdcA\xa5\xab\xb9{\xe87\xc3\x11A\x83sfJ2rTW\x82\xf0d|\x82\xa1\xd2\x06\x957\xc1\xb3\xfc{LR\xba\xbc?\xc4\x17\x98\x1d\xc7\xf3\x07\xbf\xf3\xf9\x94\xf5\xf2\x7fd%\xadwo\xfb\xcd0\xac]\xef\xed86j\xb6\xcc\xe5\xca\xe0\xdf=\xa7\x83\x90\xbf\x06\x07\xe9{\x9a\xc8VF\x81\xe4\xcd~\x12\x82/\xb8\xf1a\xf8R1\xe4\x95\xc1{l\x9fP\xf6\x15S-\x1e,\xfb\x04\xa5\x80"\x87\xdc?\x92\x04,H\xde\x07\xc6\x12 \x81\x93CO\xd3\x1a\xd4\xbe\xd9&|\xc5\xecD\x0f\xfd\xc7\xb35>\x15_\xccY\xb5\x1e\xff\x00\xf6\x87\x17\xc3\xfd\x92\x85_\xe3\xfe\xd1\xdc\xf9\x87\xf3\r\x07\xc9?\x98P\xbb>\x14\xb3!\xe4\xfdT\xb0\xbb\x8d\xd8\xdf\xc4\xbe\xc4l\xd7\xf8\x9b\xa3\xa2\xff\x00\xf0\xcf\x04\x00\x87\xed*\x85\x9a\x15\x8f}\xa0\x17<\xdc)\xefQ/\x06\xd6}r\xc2\x00\x9e\x88_5q\xed\x80\xfbaX|\xcap\x98US\xe4$\x18\xa6,l>\xe1t\xa1\xa5\x7fe\x98S\xa6\x1c\xd0\x1c\x00E"\x13\xc8\xe1H\xfeP\xf4U\xd1h\xfb\xb4Ja\xadOmHh\x81\x82\xa1\xf3A\x00W\xec\n\x7f\x92\x06=\xf2\xc7\xab\xc7\xfb\xe5\xdb\xac\xd5\xdd\xc7\xcd\xb4\xfcV\xa5\xc9\x08\xbb\x8c\x9a0\\Y\x7f\x950|\xa4\xf8\xce\xe5q\xa0\xe9v\xbd\x03\xf5r\xc8\xf1b\xfc\x9f\xc90-J[|\xd6\n\xfb\x94\xc1\xa8p~B\xcf\xe2W\x0b\x85\x07\x1f4TJ\x1a|\x8f\x85\'\xd4\xb5\xa2\xc3\x95\xefP\xd1yk\x1f\xaf\xfb\x0cC\x19\xba\x9e\xeb\x7f0\xeb\xe1\xc6A\xe8U\xe2c\x8f\x88\xec\x975\xacA\x9e]\x17.P\xe6m\xe0\xfc0\x07\x02\x1dD{\xf1\x02"[W\x99p\x14@\x9e\xf1\x1cN\xc6e}\xc8_\x94O\x99n\xf0\x800\xbfA\x1d\xc9\x87=9\xf4\x19nX\xec\x88\xacnS\x06WP\xe8\x9dS\xa0\x1d\xe5\xee\xe6\x1a2\xf9K\x1e\xd8otv@\x85\xbe\x9d@\xb8\xddp\xbf\x98\xc2\x07\x90\x15P\xcb\xa0\xec\x1b\x89`\xac\xd6\xc4*\x99k\x88\xf6\x8e\x02\x8cW\x99Ap\xbe{\xcc\xa7\x99\xab\xf0\xcb\x92aip\x8fZiU\xee\x03\x9c\xdb\xa2\x01\xfb\xa4h\xb2%\x8a#\xe6T\xae\xa5\x81\x98\xd5\x98\xe4\x1b\x17\xd4@[Y\x1b\xb2W\x9b\xb6\xbb\xc3\xb5\xf0\xfdKG\xc4\x18\n\xc6\xf5\xe2\x07\x12\xc5\xb5\x17\x83\xce>\x99\xab\xc0\xc4_c\xe4\xe3:8\xbd\xc0\x1eaT\xd4\xd3\x7fR\xce\xf3\xdc\xcfx\x1bM\x04[\xcf\x88q\xef\x8d\xd7\xd7c\xc0\xc4:\x02\xd0\xa2\xfas\xfb\xc0>A\xc6\x08|8>\x02\x0c\xa8\xd5\x1c\xbd\x17\'\xc2z\x98\xdf\xa9\xc0\xed\x9a\xfc\x98**\xbb\xd4}\x87\xf21\x05\\\xc2?t\xc7\xed\x1d\xa0N/~\x04\xe6\xb4 \x83\xe3BY\x16dP{\x05#DG \x17\xc8H\x94\x93 \xa3\xe0S\xf52\xea\xa6\x04\xfda\xf5)\x89d\\>\x89\xaa/"?hp)\x84T\\")B\xcf~\xdf\x88EB\xb9(\x1f\x10\x80\xa1\xbc3\xf8\x84\x0b\xbal\xfd\xac\x8e\xb2\x9b\xe4>ayw\x10\xb0\xfdO\x07`\xa3\xe9\xdcr\x177\x953\x0e\x0eT\x0f\x9a\x88\xed\\\xb8%\xfb\xdf\xe6.\xda\x95\xa5\xfe#\xf1]\xae\x8d?\x1f\xc9\x04\x05I\xce\xcf\xad~"\xb3\xeb\x90~g\xff\x00"y\xcd\x80\x0f\xf7\xb8\xa4\x120&\x7f\xaf\x89^\xb6\x0bi\xf9\x80\'d0\x8cR\xecw\xa3\x10UZ\xbb*G<p\xc2\x87\x1e\xe0aW\xba2\xe7\xcf\xadM\xc1gd\x19@\xff\x00]\xe2\x00\xc9{\x06`Q\xb0V\x08\xa7\xd8\xd3\x02\xfd%\x16<\xbf\xe1,L\xc0\xce\xc6\xff\x00\x11\x01o\x16\x01?1\xbb\xa8\xbb\xac\\(\xab\x0eA\x01\xc1\x80\x1a\x8b]5\xfaPs\x08\xcc\n\xe1\xf7\x11 yat|\x96\xc1y\x8d8BMS<\x96\xf7`8}NP=\x13\xf8\x95L<z\x8a\xf9G\x0c9\x8e\x99.\x07\x04\xda(\xf32J<A\xa9\x84 \x83\xa2@@\xc2\xde\xba.\xfa\n\xf4\xbe\xb5r\x87\xa3\xa9^c\xc9\'7)+\x11\xc7$\xb1SL!\xb9_s\xb8\x81\xa3\x02@)\x15\xc8\xe9\x8a\x86\xf8\xf6\x95\xb5\xadA4hmp\x80\x97\xc2\xc7-e\xde\x19\x0e%\xa2\xca;x\x81\x9b+#\xb8X\xe6m\x94@Ao\xbci\xcc\xb4y\x95\x81\xaeJ\x82hL\x18\xa9\xb3\x04\xdb\x8f\xf7yi\xf3\xb3\x99h\xc4\x0b\xac?\xb22S\xa8k\xc0\xe0\xfd\xe5\xdeb\x87\xfd\x80\x96:\x86b\\\x15\xb6\xd3\xba\x03\xc9e\xda\xdf\x1e|\xc7\x13\xbb\xbe\xd7a\xfe\xee\x03j\xeb\x12\xdf:\x9a\r\xa9\xdb\xfe\xf9\x80w%Y\x81\xa1N\xcd\xc8j\x80i\xa9\xddN\xfb\xff\x00\xb3T\xdfq\xcf\xfb\xe6f\x94w?\xdf\xc4\xc4$\xeeb\x1c\x07\x96\x99T@v\x178g\xb6\xd0\xc6\x9f\xbb\xb9VE|\xca\xe0>\xe0\xe9Zw\x8e\x98/52\x9e\x16[\x85\xfd\xc3\xe4\x1fS 1\xefP\xa8\xa5<Cr\xefQ\xfeH\x05A\xf5\xdc\x10\xc2\xd1\xedP6\x84\xee\x11|\xde\xc9-\xe4\xf7\xa9o\xe4\xc8d}0\xc1\x13\xb2A[>d\xd9\xc9\xdd#q]\xcb\x8fd\x87\xbb\x01d\x91`\x10\xcdE\x97e\xd3\x88R\xdd\xf8\x99\x8c\x1f1\x81Q\xe2\x19\x12\xaf0"\xfei\xa4\x13P\xcdk\xf1.\\w*]K\x97\x10s\xf9\x9b\x91\x03\xd2_X>`M\x7f\x1bF\xa4{\xe8\x81\x96D\x05h\x88sX\x11{,\x98\x8b\xe1\x8akQO\x10\x830\x93p\x1d\xc8\x07L\xc8\xe1\x8aAM2\x8e\xc1\x83r\x92\xc6\xb3\x10\xf8\x8fa\n\x12\xab\x98\xa9\xda\x0c\xda,UK\x8c \xb2\xf8A$_\xa4\x8b%\xc5\x8fW\x06\xcbVaUE\x00\x07\xbcW\x9e|\x19N\xdd\xb2\xed\xab\xdd\xc0n\x948\xf7.#\x97i\xa3F\xb8\x98W\tL-\x0e2\xce\xe9\xbe\xfc@\x90\x06\xbdK\xa44{BZ\xb1\\F\x92\x80/<\xc0\xd3\x93Qb|1c(2\x9d\x98\x99\xbf\xdcux\x82\x92\xc5\x83\'\x98\xd2e\x0c\xf4 \xc0J\xeb\x82%2\xd6\x8b\x97v8\x19gv\x1c\x9e\xb0\xaa1W\x96[\xe6\xe0\xbc\n\xc6=\xca\xa9\xba\x8d\xaa_\x88\xb6i\xee\xa3\x86\xa5\xf8\x8b\xff\x00B!\x9b}"\x17K\xe2<\xef\xc2k:D\x80f@\xba}@\xb8\xfdC@}O\x17\xea\x12\x03\xd4\x08\xd6Q\xc6\xa0f\xb0\x1e\x136\x91\xff\x00\x81\x01\xc1?\xf3:A^>\xa8Y\xfcP?\xea\x81\xeb\xea\x81p\xfa\x94v>\xa1I\xae\x89Du\xe6 \xa2\xdf\x1d\t\xa5\x104\x03\xff\x00\x85\x08\x96\xd2o\xc7\xdc\x0f_\xb8\n\x8b\xe6\x06\xd8v\xc9\x87\x05;\x98?1\xf1\xed\x16\xc5\xa9\x1c\x97G\xe2e\xe6\xfd\xb2\x9a\xfa3\x01\xd1\xaaX\x84\xf3H\xa8\x10\xf2\xca\x84\x11\xd53Z#F\xe3m3\xe4\x87pL;\xb9~\xe05\xcc\x08\x16\x02\\\xfb\xc0<J8q\x05%\x19\x88\xc0\x8eQ\xc3\xb4\xde\xee\x1d\x880\xd4E\x80\xc3\x1b\x98\xc2\xd8\x80e\xc1\xcfE\x97.Y,\xaev\x91\x87#\xd9\xd91F\xfd\xc6=\xa7\xa7\x9d\xdc\n\x0c<\xcaJ\xe3\xbc\xc6&=\xc0;}\xc3\x8b/0\xaff\xf6D\xbd>\x98V\xbd\x99\xa7>#\x06\xe3\x9b\x80\x84\xb1\xdcqw{\xf3\x18\x06\xe0`\x8a\x00\x8c+1\xf3\xde\x1a\xf0P\x04X\x8b\x06\xe5\xf9\x96\xcbR%\xdaJ\xa5H\xac\x1d\x88;\x82Q\xc4\x80 \x03%B\x000t\xd2\x01\x94\x8aK\xebpf\xa72\xc2Y\x16\xd9_\x12\xcc[\xcc\xbb\xc3\xeaX\xe7\xf1\n\x1b\xfcL\xb9\x8b\xff\x00\xc4\xff\x00U0\xe6W\x99\xa9x\x84\xb83\x89\xae\x9a\x97\x889\x95\x89u\xccA\xccKb,p\x9b\x038\xff\x00\xdc\xfe\xe2\x81\xaa_2\xdb\t\xdc\xc4\x03\'q\xfc\xc0\x11>U\x1f\xccE\x19v[\xf9\x88\xa8o\x16\x0f\xa2_,_\xb8h\xa7\xcc\xe7\xdfI\x01\xdf\xd2!j\x8e/(\xfb\x9ed\xb8\xf8\xe4\xd4HO\xb6\xdb\x07\xd30L\xfbSS\xc9N>\xe1\xaa\x84\x14\xcfy\x83\x08_L9d\r\xa4\xaf\x12\xb80\xb8\x97;\xc1\x1af+Y\xde@@\xb2\xac\x1aQ\xe65\x136\x8d\xb8\x8f\xc2\x1a\xf7\x00\xc0\xca\xc6U\r\x90[\x83=B\xb9\xebV\x01\x99\x82\xe3\x0c3\xacl5\x0b\x05\xe7$\xc2]\xbbF\x08\xbfq\xd8\tO\xdc\xc4hy\x8eq\xa6,\xe4=\xcc\xa9G\xec\xcd\x15\xb1\xc4*\x16]]\x8f\x15\x18!I\x14C/\xde\x01\x05.s\x19\x00\xbb\xb2\x00,\x83Q}Ax\x1c\xc3\xee/\x92\x1d\xf8\x8e\x1fqr*k<y\x9a\x00\xd8\x9e$\xb3\x84\x1b\x8c\xbb\x87\xdcK\x87\xdc\xf1\'h\x95p\xfb\x8fx!\xd9Dp\x811\x03\xf3<\xd2\xbeIg36\xe09\'\x90\x88rG\xbaL\xfb\'e\x19\xe7\x85\xfb \x9c\x9fpnIw0nO\xb9\xe4\x88\xf3\xf9\x94s\xf9\x94r}\xcf4\x13\x99Iw\x10\x8f\x86sD\x1f\'\xdc\'\x02\x07\x87\xdc\x11\xc4\xf9\x9f\xd8\x90\xe7\xe7F\r\xafYC\xf3\x02l;A\xa4\x17\xe5\x89\x95\x8f\x06\xa0\xdb^\x17Pm\xa5\xf9\x804}A\xec"\x0f\x0f\x89\xdd\x13m(`0\xabX\xbe\xab\xf1\x03\xb6!s\x0c\x1b\xe2\xfcBP\xdfdh5\xbd\x88\xba\xfc\x1cE\x03\'-0P\x11\xa0?\xbcD\x0b\x0eL\xc4`\xdex\x80\x89I\xa5\x83\tc\xe6=c\x1e\xe6&\xf7\x00a\x85\x8b\x18\x84\xa1\xcc[\xdc\x10K\td\x0c\x03\xcc\xafx\x0e\xf1a\x963w\x08*\xa1@\x17\x98\x9e\xf1\\\xc0?\xfb\x02\x95>\xd3/\x10j\n[\xb4d6\xefqkUq\xa5\xb7<KVo\xb3\t\xe6\xbe`\xe4\xdfs\x98G\xe6h/\xccv\xcf\xe6_\x16\xd2fs~\xe6h\x15\x02\xfb\xf3\x14\xd6\xc9\xdb_\xc4\xb1\x96UkP\x01\x0f6\x97{<\xdb\xbf\xdel\x9a\x9eP\xfe\xf0\x03\xf0\xec\x98\xf6\xef\xb9\x11}\xe6\xee\x7f\x11\x01\xf4\xff\x00\xe2RV\r\xa0\xc5X>\xec\xfe`\xc7\x89e,\x00\xcc!_\xe0\xfe\xe5)\xb7\xd3\xfb\x83c\xe8?\xb8\xb2\xbe\xbf\xfa\x8d\x00\x1d\x8c\x9bbW\xe7\xd7\xf9\xcc\xbd\x8f\x8b?\xb8\x85\xab\xe17Hy\xff\x00\x89\xc5^\xd7\xf5\t\x8d/\x97\xf5\x18\xe8<\x9f\xf1\x1d\x01<\xff\x00\xe2\n`\x8c\x80\x1fqS\x00\x9e\xe3\xc4>\xe7\x14\x0f\x98\x9eG\xdc\x13W\xa9n\xc7\xc1\x0e\x17\xeavd\xf5\x053G\xd4\xec\xdfP=\x17\xe2p\x8e\x92yC/l"\xb9\'\x01\x18^\t\xd9#1\xc3\x88n\x91\xe1b\xf7Y\xc3\x1e\xa2{~k\xa32\xbb\x17\x95\x1er\xe1.\x13\xc2\xb9a\xa7\xd4[FX\xc0\x9c\x81\xf1\x06\xf8\xb2\xbc\n\x9d\x81\x05\xc4h\xd1\x0f\x84\xa7!\x11\xc5\x10#;\x92\xc9gf%uP+\xf9\x80&\xf8\xa8\x07\x8b\x81P0$U\xf8\x96U\x87\x14\'\xc9\x13R\xbeX\x97\xc4\x07\x0bR\xa4\xc6m\xd9\x11\xab\xb7\x06,\x9f0L\x1fr\xc0\x17\xe6n\xd2\xcc@\x93q\xe5\x0e`\xf8f$\xb6e\x84\r\xe6(\x9c\x8c\x14\x98\xdc\xc5/1\xcfp\xfb\xc3\xbd\xc5Gu+K\x96LD\xa8\xd39\x94\xaa\xe6+\x94\r\xdc\xc7zL{\xa6\x1b\x0bo\xa9\x9f\x130O\xb84\xf4\x14\xd2\xfeff3\xea/O\xd9\x1d\xbee|\x12\xf0K\xf3\x14M\xe0)a\x98\x92%9\x19X\xed\xcc\x03F\xaam`\x80[\x80\x9b\xce\xe7ij\xb2$\\\xac\xc3\x15\x95\xa8\xa7\x06x\xa9W\xc8e\x16H\x07p#\x088\x1c\xc6\xa3\xaf\x99I\xde\x07$\xb4\xfe\xe1au\xe6Xo3&H\xf8\x8c\x17D\xc6Y\x1f,\x0c\xb9\x18\xc9\xf3;,\xa1\xd4A\xfe\xa0#\xdespg\x98w\xc3<0F\xcb;\xcbr8\xf3\x01\xea\x0b\x9dJ#/\x89T\x07\x0cuX\x99\xbbL\x95\x107\x88 \xdc)\xe6g\xc40\xdc\xc7\xb8\xae%\xfac\x0b\x88\xdf1_^\xa1Wp\xae\xe2\xdb\xfd\xe5\xfc\xc7\xf3\x05{a\xfc%\x0c\x03\xdaw\x96Kt\xca<\xc0c\xb9\x92\x01\xfdK8\x967\x88\xd8\xc3\x12\xb5\x88\x95\x130\x83\xb6_\xb8fC\xf1\x08q<\x84\xce]x\xa8\xa9\xbb\xf9"\xc3\xe5\xa3xhve \xdcwe5a\xe6U(\xfb\x84\x80XV\x91\x18*S\x02\x9b\x97v\x80\xbe\x9c\x84\xf2\xcc0\x02\n7QP\xc7\xcb\x0e4\xcb\xde+5\xfb\x82`|\xca\x02\xe2\xd2+\x06\x84\xc9\x95\xef\x03\xbe_\x12\xff\x00\x82{\x11\xecJ\x8d\xcb\xdd\xc8\x82\x9a\x808\xb8\x1d\xf3\xde%\xe7s:g\xc4B\xddb\x18\xa5\xc7F\xaa\x93\x7f\xfb\x01\xad\xdc\x1d9"&\xf1\x14\x8a\xc3\xbb\x8e\x98\xb5?k\x82\x97\x0e88\x85\xb1\x0c73\x80\x81\x95\x19\xe4\x8b\xc2\x1a\xd3\x08*nV\xd5\'0B6;\xc5\x02\x14@\xd4q\x04]^!\xa1\x82\xe0\x13,W\xcc^\x88\xed\xae\xd3\x10\xe6Z\xc3.r\x11\xdc~#9+\xdc0\xbc\xa8\xe5\x00\xee\xe6\x85\x9c\x84\xa3\xc8\xca\xaf$\xbf\xa8\xf8g\xfe,\x1b\xc6%\x98w(\x80\xd8\xce\xe4\x01\xb8\xbfx\x85 ,\xc5C\xb4\xa8%\x9c\xd4\xdfs\xbf\x06\xcc\x18\xdb\x9a\x8d\xb9\xc4|\xb1\x02\xaa\x08\x7f\xb9Q\x86\xaa!a\x88\xb8\xe6,\xe6\x7f\xeaJ\xf9b\xac\x18\xa5\xd4\xa5\xc3q\x14\xae\xe3\x1c\xbf\x98\xbc79\xdb\x87\x94|%\xdcHn\x107\x95\x88N"x\x85x\x96\x11S\x0c6+\x84\xdf\x08\xe5\x94|M\xf8zI\xa8G\x984\x17\xcc\xe4\xa1\x90L\x00\x1a\xca\xa7\xf7J\x88i\x9c\xa0L\x9fpH\x16\xa9\x9eX\x15\xb9G3p\xdcV\x17\xcc\xc64\x0ea\xdbq\xdeY2\xe6\xa6b\r\xc06\xe6\x11#T\xee+\xa7I\x97\xf7\x87\xc3\xd1\x15\xa3\xb8r\x06"\xa3\xc7\x11\xc2[\x8d\xa5\xa5^cO\xae"<E=\xcbVe\x8b\xd7\xc4\xb3oF\xd37\xf5\x0e\x1b\x9b\xbd\xa6\xb5\xbe%6,\x82)\xfbs\x1cV\xc4u\xbb\x80\xbe{C+\xf6\x98G\x10M.\xf9\xa9b\x9a\xa8\x19i\x8f\x92l1L\xe3\xe6\x18\xe2`\xb4BC\x81\t\x85D}\x9d\xe6\r\xe7\xcc`g\x9c\xcbz\x89\xb2\xe6\rFu\xa4\nA\xb0\x8c\xcb\x15!\xb5yB\x19\xfc\xce\xeb\x88[\x98w\xbf2\xa9G#-%G\x99\xacaI\x83\x0c\xbbpD\xb0\xa8\xf3\x19r\xd0\x8a\xe1e\xa0\x06a\x1b\x89\x1d\xc7\xbb\x80\xafP\x94\xee\xa6\xa8\xd1;\xe9\x889\x99)ee\x95\xe1\x8ar\xc3\xe30\x86\xb3+uLS\x0c\xc0\x0cD-P\x8e!\x0ef\x12\x96`\x91c\x10d3\x83R\xb2\x97\x86(\xc1\x88\x87i\x83\xa2\x9b\xd4\x0b\xc4\x07y\x80\xf1St>bn\x8a\x9d\xbc\xc6\xee\x9fI\xc8\xb1\xac\xac\xaf\xbb\x049@\xa7\t{+\x81e\xc1\x1b\x847.\xbb\x95\xee\xf6\x89Y1\xc1\x19\x84\x95\xb4\x08\xc8?0\x984J]\xce\xe3,\xbc\xcfxa_\x986\x15\xa0\xe26~\xa3\x00u\xc4\xbc\x8a\xa2\xa1\x8dn_\x84\xbf\x98\x82)op\xb23\xf1\x17%\x89{\xc4\x17ln\xde}\xc7z\x97\xe1\xa8\xe8\xbb{L\x9b\xe6bh\x94\xa7^\xe5\xc6*]\xc9\xa8\x8d\x06%h\xc4DZ\xd7x\x0cE\x1d\xe7.\xcf\x10\xa6C\xd4\xa0\xa2\xce\xf0\x15c\x88a\xdf\xcc\x07A4\x8cx\x85\xf8\xa8\xae\xea\x118\xf7\xd1WW(u\x985d\xc0\x10\x07\x14\xc3\x82\x13\x1c\xae$l\x86\x8c\x8e\xd1\x8a\xbaK\xf1s\x11\x02\x9b\xbf\x98+\x94=a\xc32\xc4\xc0\xd6 $\x0b\xc9\x88\xf1\x98X\xf8\x81O0*\x19&;\x84G\xacA\xddC\xb9`\xb9\x94\x15p\xa5E\xa6i\x9a\xce\xe5d\x13\x86#\x89\xe2\x94\xd5N\xd1\x01UR\x97\xa9Sd\x11\x80\x88\x04I\x86Hw\xa2\x1f\x0c\xc2\xc9`s2\xe2W\xc4Z\x96\x96!\xce\xe2\x1c\xc0y\x94X\x83x\x1f\x98\x91\x07ER4\xdc\tu\xc7\x96l\xe8 \xe0\x89\xbaG,\xb3\xa5\x10-5\x01\r>e\xc3\xf9@\x02;\xbb\x9c\xe8\xee\xbfx\xe7g\xdcMF\x8e\t\x86m\x98\xdf\x98\xd9\xdc\x05\x12\xb2\xeb\xee]+\x99J\x1cJ\xf9\xd4\x1c 2\xf9\xdcA\xdd\x91\x9e\x1d\xc1=\xa2\xc5\x8d\xc2;\x94\xadDJ\x1b}Em\r\xe6\xa0\x84-\x84\xcf\x9cA\xd5\xcb\x0e#)#\x0b\t\xdf\x84\xfd\xd8\xe6.5\x9fQO02!\xf5\x0c\x97u*\xe3$]\x9a\xec\xc6\xfc~ \x02\\\\bh\xb2\x10\x0f\xf1\x0bU\x98\x0b\xc9\x98\\#\x02\x00L\xb3R\xde%G\x11\xf4\x86&\x0e\x82\x83\xa5\xb8\xaap\xf1(\xd3\x0c\x8b\xd4\x06\xd8\x8c\x8c\xa3/\xa9ef\nn\x14J\xba\x9bC,\xc2\x90(\xec\xca\x13\xcc\xaa\x8f\x08\xf1%\x9cA\xe1,8\x85\xears.q\x00\xeb\x11\x8e"\x95;\xd2\xa9\xe6\x8d\xb5.\xe3\x96\xa3W/\xc5\xc3LN\xf9\x1e\x96\x88\xd7\x15*\xe9\x8dj%\x8a\x1b"pN\xe4[w)\xa9hJ\r\xd4\xcd\xe2\x01\xe6Q\xe6\\a\x9bq\xd0s\xce\xa1\xba\x88\xa4\x9b\xee0\x11i*\xa3\xa8\xad\x14\x8e\xe6\x10\xab\xfc\xa1QxM\xd39b\x1a\xcc\xac\x87\xe20;\x10\xd1\x0c7;\x0c\x1fxbfa\xea\'\xb7h\x078\xf5)\xdd\\\xaa\xb2O\x19\xa9\x8b&Q)\xf3\xcdE[\x80+\x9f2\xd7\x1f\x89f\xee\x19\\\xa7\x8c\x82_1`\xef\r\xe1\xdc\x19\x8f\xa8\x90\xf1\x0b-K\xca\xfb\x8bf\xac\xf5\x15\xb8\xb2Vqsh(\x96\xa91\x0b\x8f\xb9\x9b\xb9\x0118\x03dK\xd4\xa9\x18\x07\x19zA\xdaP\xca\xb1\xc2X\xc6\xa3]\xea\x0b7\x1c<F\x9b\x8f\x97C\x93#\xa4\x86\xa6\xd1\xf8\xc7(\xd3:\x8e\x8cK\x01\x83\x04\x16\xc2\xef\t\xe6\x02n\x13\x00DJ.\xa5S5\x1a\x96\x11<%\x13D\xba\'\x80\x82#\x00\xed)*@\xe1\xc4\xaa(R\x0f|J\x1c\xcaM\xf4A\x1a}\xc0\x99\xf1\x01\t\xba\x89Q\x0f\x99W\xc4m\xe6qAc]n)<0\x0f\x11\xa2\xe7\xe2\x13F\x98M{\xc4\xbc\xcc\xa6\x8f2\xae\xe5\xfc\xca0\xb4JK\xc6Rh\xfa\x89L{\xc1\xdc\x81\xd9e}\xbf\x99\xcc#\x90\xc7\xfdE\xe6\x05\xc3\x06\xc39}\xca\x7f\xea\r\xc1b\x1d\x0c\xdf1\xb9d\x18\xdb\x86<\x8c\xf8\xa8_"\xc4ioh\xe1\x8f3R\xb3\x1b\x8d\xc6\xcc\x02\xd7\xcc!\xbb\x84rC|\xceB4\xf9\x8d\x1c\x93k\x86>`\x8bq1B\xf9\x0f\xc4\xa0\xfe\xe5\xc5\xd6;J2\x0f\xd4\xd7W\x1e\xfb"\xaaO\xc4pGG>%k\x8b\x85L~ \xfd\xe70\x86\xb9\xf5\x017\x98|\x89`\x8e\xa6\xe5Y\x9ae\x0bF\x93>\t\x9c\xa1,?\xcc\xb6%\xc6\xefF\xb1\xfaJ]\xcbi)\x11\x88m\xa8 \xcdB\xa6ny%\xa5\xdc\xb6\xa9\x99J3\t\x05\x8d\x19SS\x08N=\x14;\x1d\x08fD{\xc1N\x88\xc0T\xaf\xc4\xa7\xbe\x9c\xa0bjc\xf3\x10\xcb\t\x8f8O0\xedg\xd6\x04`#\x00\x82\xeaxg\xdd\x1a3\ti\x84\x04)\x0b\xc2\xc5\xc7\x8f\x13(:\x8a5\x0cB\x0e%L\x13\x84Cq\xf17\x87L[9\x06\t\xdfH\x02@g\x9d\x1938\xc9B\xf6J\x89C\x92\x18s*\xf5\n\xadc\xa6\x8d\xf4\x00>xe\x8b\xb8\xd8<N\xe2\x01\xe8Uz\x80\x03\xbc\xab\x1a\x11\xf0\xa6/\x11\x1d\xe1\x9a\xe2\x01\xcc<\xe2f\xd4u\xd7\xcc\xa3\x88]\x82\xa2\xa2}\xd3\xc9\x04fY\xea+\xa6\xe1B\x9c\xc05<\x97\xd0\xee\xb2\x94fR\xe2\x81\xde7\x8d}\xce\xd9\x9cE\xddET\xb9\x0f\x08\xc3m\xc6\xce\xa6\x17)\xbb \xb2\xa2\x9f\x89A\x98H]<\xc3;\xc4\x0e\xf3\xcb\x01\xdb\x0f\x94\x0e"b\x86*+1\xc1q\xb3\x88\xf9u\xb1\x88e\x93\x0c\x1c\xc2\x02Jq\x11+\x01\x18\xa2[y\x96\x8ec[\xcc^\xba"\xe6$\xb7\x99\x977\x14\xe9\x8c\x16x\x88\x0b}\x16Qs|L\x90aI\x92DA\xb6\x14\x8d\xa2\xcc\xb1\x07\x84\'\x89\xc0N\x12\x07h\x0b\xc5\xce#\x11m\x88h\x973\xb8\x8d\r\xb1\xaf\xfdK\x7f\xea o\x1d\xa2d\x82SM\xc3,\xcb\xc5\\\xf6\x88\tse\xfdK\\M5\x8f\xdarn\n\xe6\n\x11\x04\x8eX\x80b4\x9d\xbc\xd42Va\xf3{\xc0\xc3O5.\xf5\x115\xd4\n\xc6\xa3K*\x13,(L\x18\x87\xc4\xbd\r\xdb\xff\x00\'b\x02E\xc5\xee\x16i\x86\x9ee\x98\x96{\x8bs$\xcb\xa0,\x99\xfcF\x9d,z\xca#x\x0e\xdd\x0c\xa2=\xd3\x19\xfc%\xa1\xcc\x12\xdb9LLA\x8e\xfc\x18\xdc\xb7\x99\xe7\x96s.7\x01\x82D8\xe8\xb6\xbeg\xdaa)\xe66C\xc2\x16\x82\x9e\xa5\x825\x98\xc7(\xbe\x19b^7\xe6y\xa2^\x8eo\xccD\xef,b}\xe3i~\x18-n`\xcc<\xe1\x05\xea\x11w\x10q\x1af]BH\n\x83\x0e\x86\xe5C(\x98\xc9*\x0f\x98m\xc7^"8\xb9\xc7g\xa1\xc2G\x16\xec\x84D\xd1}*Q\x9cx\x8a>\xe2\x89\xba\xfe \xc7u\x98Y{\xcb\x97(\xde\xe3)q\x0f\xfc\x99\xe5S\xe3S{\x11\xccTw(\xf3\x18\x05\xca$U\x00\x97\xb9\xf5qT\xbf\x98\xcbL\xb3\xb4s\x9e\x9a\xa3\x11Qr(n3\xe2\x15#\xa38%\x0c\xcb\xfb\x88=!\x1f}\xe6\x0b\xd27r\xc8H\xdc\xc3\xd1_\x11.!\xe24\xb9\xc4\xdfG{\x8dD:\x1c\xd1\xc4\xb9U(s\x1f\x9dE\xc5\x86Y\xcc*f\x13\xcc\x17\x99\xe4\xc4\x03\x98\x0c\x11\x08\x84o\x1b\x13,e(\xd4Q9\xf46\xe21\x87=\x08\xef\x13\x12\xc6\x91\x96F\xcfN\x9b\x8d,y\x968\x82\x990\xc7q\x0c\xee\x17\xdc\xf7\x82\xf8\x84Q\x96E\xf9\x972\x82C<\xcc\xcc\xc1\x97P\xf9\x10\x04Q7\x14]\x0c\x91n!\x80\xb4Q\xa1\x9b\x80\x82)\x88\xe2\xa3\xa0\xbb?r\xc76J\x8cv\x8d\xad\xfcJ\x1c\xcb}\xcb\xb8Y\xf1\x13\x19{\xc7e\xe6\xa3\x859\x95\xe6\xa5\x17\x11\xe9Q\xee8f\xf8\x83%1j\x17\xd2\x0b\x06\xb3\xe2 \xf8`\xbf\xf1,\xdc\xcd\xb9\x97,\x17\xb1\x99\xf1\ry\x9d\x94S[\x811\x98\x18#\x13H\xfeb\xb0\xad\xf4\x07\xdcD\xef\x05\x1c\\\x0e.\x11T\xa6\x04;\xe1h\xaf\xbc\xd9\xe6S*$H\x93\x08\xdcu0\x99\x0c\\A\xe2>c\x1e8\x9a\x06\xa2\x14\xb8\x8c9f|\xb0Z\xcc6\xb3-\xe6Z\xeeXn\x16\xe6Y\nH\x0ca\x1d*cH\xe5\x06u\x05D\x92\xe3\x97A5\x94`\x832\xc8\x0eX7<\x19\x8a8\xb9I\x12!=M1\x0b\xc4\xb2]\xd4i\xff\x00#K\xe9<\xa1\xf3\x9eH=\x15d\x0f\xf3\x12[\x98\xc7\xa8\x12\xfa\n4\x8d\xdf\x11\\t\xc22\x938\\\n%\x8d\xc0-\xe6a\xac\xe6\x1cv\x80s6\xcb\xa6U-\xc4i\xf1\x05f-\xc3Z\xed\x00\xdcD\xaa\xbc\xc4@\x94\x98y\x8b~&Yb\xc5\xd0\x13\xcc\xbc\xf8\x9b\\\xa1\x14c,\xe2\xa2p\x8c\x1eb,\xad\xcc-\xb7\x0c8\x83q\n\x82\xba\x1e\x08F\x13\xe7\x94\'y\x86`\x94\x9e\xa7h\x91*&X \xa6\x08!"\x8e\xa2F\xc8@\xdc\x1c)\xe98V\xcc\x1b\x83\x8c\xc0\xef\x98.\xdf\xb8o2\xb7p\x153\x81\xa8\x08\x04\x1e7\xd0\xeet)\x94/I%$\xb7\x98\xc1j4\x8e\x12\xc4\x89\x1d\x18\x90\x18\x9e\xd1\x10\x80\x90\x8aDp\xc4\x1dG\xba\x05\x85\\)R\x87\xa0^\x05\xe8\xb2Y\x14^\xf0CGE]\x05\x89\xb3\xa1A,"\xcaE\xe2>/qo\'\xc4.\xe0\xae\xfe\xa6x\xb6\x17\xe5\x999\x86\x10\xbf\xa4\xcb\xeae\x8d\x13\x06n\x141a\x9b\x94\xb4\xab"x\x86q0H\xae\x0c\x7f\xf1\x16$\nc\x12\x8e\xf2\xf9\x8e|\xb3?R\xf9\xe0\xa8\xa2\x7f\x98\x8b70sqC\n\xe2.\x9b\x8e\x93=\xa6\xd0/\x89X\xa2\x0b\xff\x00\x90\x9bn\xa5\x89E\xac\xb5\x96\xc2\x06\xe5D\x89\x9e\x87\x95F\xfctvE \x8d\xb3\x1f\x8cb\x91\x83\x02\xce\xd0+SC\xf5\x18\xac\xc59\x8c%\xac\xb83\x99}@r\x96Ky\x809\xea\x03\xa0=\xbfB\x94L\xbc\xcc1\xacr\xc7E\x9f,\xb6\xba\x11\x1abq*\x98A\xf9\x98|\x1d\x18\xa2\xc7\xfb\x8d\xb8\xb9_P}\xe2\xf3\x06\x14\x84^\x0f\xbfK|j0\xb3$s\x9e\xe3\x8b\x136G\x86*\x8bE\xcav\xfcLc5\xe6^w\x96<EE1Z1\n\xef<%\x1e\xa0\x89,\xbct\x0bn9\xd7\xd4\xcc\xe2\x1c\x9b\x85\x9f\xe6\x1e\x11*\r\x1f\xc4=!\x87Ec\xc4\xaf\x10\xcf\x88\x17_\xbcu\x19\x83\xfb\xc4v#\r\xac\xa9\\\xc2>7\x1b8\x97\x19\x94\x13\x08#,\xe2\xe78:\x85<\xcaWhR\x15\xe31\xae\xa1L\xc5\xa8a\xe6b\xf72\x99F<\x13\x1e:2\x8fL\x9d\xa53\xd69\xc6\xd8\xc4g\x19\xa4\xca4\x96\x9ab\xa9G3.\xf1(\xe6\x1dR\xc5s\x07\x0b\x86x\xe8\xd9\x0bM\xf7,je\x112\xc6~\xd9O\x12\xc9\xd8\x95q(\x8a\x93\xef\x11qrLN\xd0\xee\xd4\x03\nc\x7f\x11m\x9f\x07\xb8\xfe#)\x83U;\xbd\x03\x08|\xa0\x8dq\rtacG\xc4\xc7;p\xb3\xd0E\xcc\xa3\x98\xa2\xa8\xda| \xe37.\xc9s-]L]\xa5\xd9\xfd\xce$3\x85G\x83\x8e`~f\x12\xf3\r\xc1\xcc\x1f\x89\xe0G\xf9\x9aq\x0c#\x06q\x05\xba\x83\xfe!\xdc\xc7\x83\x88\xd5Kj*\x830`\xb0\x9e{\xc5\xbd\xc7\xc2er\xbcF\xf2\xc3\x88*.X5\x1eq\x11Y\x81\x13\xb7\xe2w@\x95\xf1)\xf7\x0c\xb5+\xb1\xf7\x02Z8e\ne-\x88\xc3\x1fx\xe1,\x8f\x84m\xc4\xf0G\xbbS\x128ssy\x8f\x88RU\xc4F3\x91\x1a\x1c\xe6y\xe7\x9aw\x9f\xb8\x0f3^a\xb5\x98]\xe7\x92\x16\x861\xdb\xbc\xb1\x8d\x9e\xa7\x0fn\x867\x19\x94\xf1\nv#^#d\xb9\xb9X\x16^\xee\x18D1\x08\x91D\xf1\x08;\xa1""`\xe6\x0e/\xa1\x87)l\xbc\x9f$]\x0c1\x8b\xa1\xdeb\x97\xba\x9eK\x9e\xf10u\xeeYV\xdc\x11WR\xb6e\xab\xb8\tO\xc40\xf3\x1cJ\xab\x85\xcaH\tQ\xcd\x8flL\xe9\xccK\xd7\xdce\xd4\xc3*m\n\xb2\xde\x88\xe3\xfe\xc1\x88t\xc5\x9f\x10\xefpx\x9c\x87>\xe0+\xbc\xab\xe31\xbf\x12\xc6f{\x81\xedr\xaf\xb8"\xb1\xd0\x1d\x03\rJ\xc4\tP;J\xff\x00\x92\xa8\xcc\xde\xa1\xb8a\x82\xb9DVM\xcc\xa3\x18\xcc\xee;F\xd1\xa7\x1dA\xab\xd1]G\xe3\x1a\xca\xa8\xf4\x0cUD=G1lC\x99\xaa\x15\x99\x9eRY\xcc\\C\xef\r0\xfeay\xca\x17\x85\x86"\xe2\x11\xcb\xa6,\xed\xc4\x98:\xad\x12\x92\x0c\xb2U\xcb\xa9ss87\x08\x17\x88}BW\xdc\xa5y\x8e\xb1(#)\x8c\xdb,\x8d\x95\xca\xc8\x17-\x8b\xd0\xaez\x13\x15\xccu(N<M6\xd4\xaf\xbe&?\x1d\n\xa1f\xf9\x83\xda\x18\xf5\x08\xee|\xa0\xdb\x10\xfb\x8d}OH\xd2P\xc6\xc1\xcb\xd2\xd0\xb31/\xcc\x044\x8b\x13H2\xc41\x06\xb5\xa8g\xcc#\x04\xcf\x11\xbdt\x19M5-p*\x11E\x8b\x84 \\\xaf\x89X\x95\x03\x19%@\xbe L"T-\x08\x12\xa3\xd0\xf4\xe9i-\x8d5\x1a\xc6\xb1\xc2Y\xc4p\xe8\xbd\x06\x1aJ\xfa\x96"\x11\x0ec\xf7\x9c\xf7<\x93Fg\x9e\x0bY\x96\x1b\x87\nB3\x99\xe29!\x18y\xc4\xc5*X\xd3\xa0\xdf\xc4g\x96"\xe2\xc9\xec\x8d2\xa1dS\xb9\x01\xc4\xc2TX\x8eb\x90L:\xa8\xde\xeb\xcc\xd9\xd26U\xcc\xa7\xa1L\xd9+*E\xaa\x96\xda\xe7\x02\xd1\xfbJP\xd6e\xb4\xfd\xa5X\x828\x9e\x89\xe6\x82s\x06\xa2\xf1/\x1c\x11\xdfi}\xe2\xc4\xecM\xfb=\x12\xcebW\x88v\x95\xe2T\xf2\x83\xf7\x16H\xbf\xccO\x13\xb9D\xc1\xe6e+\xf16\xfe\xa5\x90\x92\xec)\xd0r\x8c\xa8\xd4T\xed\x98e\xdac\xed\xd0C\x08F\xd2\xaaq\xe6\x017\xee\x04\xef*\nf\x10M\x90n!p3> Y?\x08\xcb\r\xa5\x15\x1e\xfb\xa9\xf0\xfe\x85\x7f\xcb\x8c\xaex"Ti\xce \xe1\xb5*wR\xbc\xde<\xcb\xe3\x1af]\xc2M\x90yC\x08Z\x19\xcc\xe6Ya\x16\x0b\x8f(\xfc\xe36\xdck\x1a\x1a\x8f\x84\x17\x89Z\xd4Y\xc5C\x1b\x85|\xc0\x98q\tMD\'\x11jT\xcas(\xe8\xd9\x1dG-\xcf\xc3\x0f\xe3\xc4\xb9ze\xcc+\xdc\xa9e;"\x83?\xea\x82\xe6\xf9\x8a&n\xe2+\xdcr\xd7\x98\xb6\xf5\x18\xf3\xa8\x8c\xc8\x89C\xe6!y\x96\xb9`b\xfe\xd0n\nz\x119\xce\x8f\xee&\xa2Z\xb5\x9e\x8d\x90\x0f\xcdN\x0f1?z\x94\xab\x86\x8fD\x14\\\xc1\xa4\xf3\x13prF\xd2\xeeN\x0c:U\xb9\x99@\xc4\xe6\xa5\x11\x16\x91(\x89\x97\xc4\xde\x04Xg,L\xc5\x98)R\xe9&\xea8\xfb\x86\x99x\x82\x82\xd9\x11\x82F\x0c\x1c\xb0X\xd8!\xc4\x1a\xfa\x9b\xaf0\xe6\x0e\x0f1\xc3PQ\x12P\x97\x04\x04\x01IW~\xea!\x0f0\x15\x11\x02\xa0\xc4\x18\x82\xc6\x1a/\x9a\x8e\x13.s)\r\xcc,\xce\xfb\x89\x8d\x99\xdfCVb*\xe3~"\xcbU\xc5Es\x18\x8a\xea.\x19\xda!.\x02\xd8\x9cD@\x08\x00y\xfe\xa3k\xf5\x11O\x88\x96\r\xcdE\x98f!h\x99;E\xdb\x16&\xa2\x8f\x0cNQ!\x13\x9c\xf1\x1b\x1e\x9c\xc4b\xb1s\x19y\xd1)-\xf1\xd0\xff\xd9\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="fileName"\r\n\r\nfile_name.jpg\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="useUniqueFileName"\r\n\r\nfalse\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="tags"\r\n\r\nabc,def\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="folder"\r\n\r\n/testing-python-folder/\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="isPrivateFile"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="responseFields"\r\n\r\nisPrivateFile,tags\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="extensions"\r\n\r\n[{"name": "remove-bg", "options": {"add_shadow": true, "bg_color": "pink"}}, {"name": "google-auto-tagging", "minConfidence": 80, "maxTags": 10}]\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="webhookUrl"\r\n\r\nurl\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteFile"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteTags"\r\n\r\nfalse\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteCustomMetadata"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="customMetadata"\r\n\r\n{"test100": 11}\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="transformation"\r\n\r\n{"pre": "h-100", "post": [{"type": "transformation", "value": "w-100"}]}\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="checks"\r\n\r\n\'request.folder\' : \'/testing-python-folder/\'\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="isPublished"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteAITags"\r\n\r\nfalse\r\n----randomBoundary-----------------------\r\n'
        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(url, responses.calls[0].request.url)

    @responses.activate()
    def test_base64_upload_succeeds(self):
        """
        Tests if  upload succeeds
        """
        URL.UPLOAD_BASE_URL = "http://test.com"
        url = "%s%s" % (URL.UPLOAD_BASE_URL, "/api/v1/files/upload")
        headers = create_headers_for_test()
        responses.add(
            responses.POST,
            url,
            body="""{
                        "fileId": "fake_file_id1234",
                        "name": "file_name.jpg",
                        "size": 102117,
                        "versionInfo": {
                            "id": "62d670648cdb697522602b45",
                            "name": "Version 11"
                        },
                        "filePath": "/testing-python-folder/file_name.jpg",
                        "url": "https://ik.imagekit.io/your_imagekit_id/testing-python-folder/file_name.jpg",
                        "fileType": "image",
                        "height": 700,
                        "width": 1050,
                        "thumbnailUrl": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/testing-python-folder/file_name.jpg",
                        "tags": [
                            "abc",
                            "def"
                        ],
                        "AITags": [
                            {
                                "name": "Computer",
                                "confidence": 97.66,
                                "source": "google-auto-tagging"
                            },
                            {
                                "name": "Personal computer",
                                "confidence": 94.96,
                                "source": "google-auto-tagging"
                            }
                        ],
                        "isPrivateFile": true,
                        "extensionStatus": {
                            "remove-bg": "pending",
                            "google-auto-tagging": "success"
                        }
                    }""",
            headers=headers,
        )

        with open(self.sample_image, mode="rb") as img:
            resp = self.client.upload_file(
            file=base64.b64encode(img.read()),
            file_name="file_name.jpg",
            options=UploadFileRequestOptions(
                use_unique_file_name=False,
                tags=["abc", "def"],
                folder="/testing-python-folder/",
                is_private_file=True,
                response_fields=["is_private_file", "tags"],
                extensions=(
                    {
                        "name": "remove-bg",
                        "options": {"add_shadow": True, "bg_color": "pink"},
                    },
                    {"name": "google-auto-tagging", "minConfidence": 80, "maxTags": 10},
                ),
                webhook_url="url",
                overwrite_file=True,
                overwrite_ai_tags=False,
                overwrite_tags=False,
                overwrite_custom_metadata=True,
                custom_metadata={"test100": 11},
                transformation={"pre": "h-100", "post": [{"type": "transformation", "value": "w-100"}]}
            ),
        )
        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "http_status_code": 200,
            "raw": {
                "AITags": [
                    {
                        "confidence": 97.66,
                        "name": "Computer",
                        "source": "google-auto-tagging",
                    },
                    {
                        "confidence": 94.96,
                        "name": "Personal computer",
                        "source": "google-auto-tagging",
                    },
                ],
                "extensionStatus": {
                    "google-auto-tagging": "success",
                    "remove-bg": "pending",
                },
                "fileId": "fake_file_id1234",
                "filePath": "/testing-python-folder/file_name.jpg",
                "fileType": "image",
                "height": 700,
                "isPrivateFile": True,
                "name": "file_name.jpg",
                "size": 102117,
                "tags": ["abc", "def"],
                "thumbnailUrl": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/testing-python-folder/file_name.jpg",
                "url": "https://ik.imagekit.io/your_imagekit_id/testing-python-folder/file_name.jpg",
                "versionInfo": {"id": "62d670648cdb697522602b45", "name": "Version 11"},
                "width": 1050,
            },
        }
        request_body = b'----randomBoundary---------------------\r\nContent-Disposition: form-data; name="file"\r\n\r\\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="fileName"\r\n\r\nfile_name.jpg\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="useUniqueFileName"\r\n\r\nfalse\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="tags"\r\n\r\nabc,def\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="folder"\r\n\r\n/testing-python-folder/\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="isPrivateFile"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="responseFields"\r\n\r\nisPrivateFile,tags\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="extensions"\r\n\r\n[{"name": "remove-bg", "options": {"add_shadow": true, "bg_color": "pink"}}, {"name": "google-auto-tagging", "minConfidence": 80, "maxTags": 10}]\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="webhookUrl"\r\n\r\nurl\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteFile"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteTags"\r\n\r\nfalse\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteCustomMetadata"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="customMetadata"\r\n\r\n{"test100": 11}\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="transformation"\r\n\r\n{"pre": "h-100", "post": [{"type": "transformation", "value": "w-100"}]}\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteAITags"\r\n\r\nfalse\r\n----randomBoundary-----------------------\r\n'

        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(url, responses.calls[0].request.url)

    
    
    @responses.activate
    def test_upload_succeeds_with_url(self):
        """
        Tests if  upload succeeds
        """
        URL.UPLOAD_BASE_URL = "http://test.com"
        url = "%s%s" % (URL.UPLOAD_BASE_URL, "/api/v1/files/upload")
        headers = create_headers_for_test()
        responses.add(
            responses.POST,
            url,
            body="""{
                        "fileId": "fake_file_id1234",
                        "name": "file_name.jpg",
                        "size": 102117,
                        "versionInfo": {
                            "id": "62d670648cdb697522602b45",
                            "name": "Version 11"
                        },
                        "filePath": "/testing-python-folder/file_name.jpg",
                        "url": "https://ik.imagekit.io/your_imagekit_id/testing-python-folder/file_name.jpg",
                        "fileType": "image",
                        "height": 700,
                        "width": 1050,
                        "thumbnailUrl": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/testing-python-folder/file_name.jpg",
                        "tags": [
                            "abc",
                            "def"
                        ],
                        "AITags": [
                            {
                                "name": "Computer",
                                "confidence": 97.66,
                                "source": "google-auto-tagging"
                            },
                            {
                                "name": "Personal computer",
                                "confidence": 94.96,
                                "source": "google-auto-tagging"
                            }
                        ],
                        "isPrivateFile": true,
                        "extensionStatus": {
                            "remove-bg": "pending",
                            "google-auto-tagging": "success"
                        }
                    }""",
            headers=headers,
        )

        file_upload_url = "https://file-examples.com/wp-content/uploads/2017/10/file_example_JPG_100kB.jpg"
        resp = self.client.upload_file(
            file=file_upload_url,
            file_name="file_name.jpg",
            options=UploadFileRequestOptions(
                use_unique_file_name=False,
                tags=["abc", "def"],
                folder="/testing-python-folder/",
                is_private_file=True,
                response_fields=["is_private_file", "tags"],
                extensions=(
                    {
                        "name": "remove-bg",
                        "options": {"add_shadow": True, "bg_color": "pink"},
                    },
                    {"name": "google-auto-tagging", "minConfidence": 80, "maxTags": 10},
                ),
                webhook_url="url",
                overwrite_file=True,
                overwrite_ai_tags=False,
                overwrite_tags=False,
                overwrite_custom_metadata=True,
                custom_metadata={"test100": 11},
                transformation={"pre": "h-100", "post": [{"type": "transformation", "value": "w-100"}]}
            ),
        )
        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "http_status_code": 200,
            "raw": {
                "AITags": [
                    {
                        "confidence": 97.66,
                        "name": "Computer",
                        "source": "google-auto-tagging",
                    },
                    {
                        "confidence": 94.96,
                        "name": "Personal computer",
                        "source": "google-auto-tagging",
                    },
                ],
                "extensionStatus": {
                    "google-auto-tagging": "success",
                    "remove-bg": "pending",
                },
                "fileId": "fake_file_id1234",
                "filePath": "/testing-python-folder/file_name.jpg",
                "fileType": "image",
                "height": 700,
                "isPrivateFile": True,
                "name": "file_name.jpg",
                "size": 102117,
                "tags": ["abc", "def"],
                "thumbnailUrl": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/testing-python-folder/file_name.jpg",
                "url": "https://ik.imagekit.io/your_imagekit_id/testing-python-folder/file_name.jpg",
                "versionInfo": {"id": "62d670648cdb697522602b45", "name": "Version 11"},
                "width": 1050,
            },
        }
        request_body = b'----randomBoundary---------------------\r\nContent-Disposition: form-data; name="file"\r\n\r\nhttps://file-examples.com/wp-content/uploads/2017/10/file_example_JPG_100kB.jpg\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="fileName"\r\n\r\nfile_name.jpg\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="useUniqueFileName"\r\n\r\nfalse\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="tags"\r\n\r\nabc,def\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="folder"\r\n\r\n/testing-python-folder/\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="isPrivateFile"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="responseFields"\r\n\r\nisPrivateFile,tags\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="extensions"\r\n\r\n[{"name": "remove-bg", "options": {"add_shadow": true, "bg_color": "pink"}}, {"name": "google-auto-tagging", "minConfidence": 80, "maxTags": 10}]\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="webhookUrl"\r\n\r\nurl\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteFile"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteTags"\r\n\r\nfalse\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteCustomMetadata"\r\n\r\ntrue\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="customMetadata"\r\n\r\n{"test100": 11}\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="transformation"\r\n\r\n{"pre": "h-100", "post": [{"type": "transformation", "value": "w-100"}]}\r\n----randomBoundary---------------------\r\nContent-Disposition: form-data; name="overwriteAITags"\r\n\r\nfalse\r\n----randomBoundary-----------------------\r\n'

        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(url, responses.calls[0].request.url)

    @responses.activate
    def test_embedded_metadata_recieved_on_upload(self):
        """
        Tests if  upload succeeds
        """
        URL.UPLOAD_BASE_URL = "http://test.com"
        url = "%s%s" % (URL.UPLOAD_BASE_URL, "/api/v1/files/upload")
        headers = create_headers_for_test()
        responses.add(
            responses.POST,
            url,
            body="""{
                        "fileId": "fake_file_id1234",
                        "name": "file_name.jpg",
                        "size": 102117,
                        "versionInfo": {
                            "id": "62d670648cdb697522602b45",
                            "name": "Version 11"
                        },
                        "filePath": "/testing-python-folder/file_name.jpg",
                        "url": "https://ik.imagekit.io/your_imagekit_id/testing-python-folder/file_name.jpg",
                        "fileType": "image",
                        "height": 700,
                        "width": 1050,
                        "thumbnailUrl": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/testing-python-folder/file_name.jpg",
                        "tags": [
                            "abc",
                            "def"
                        ],
                        "AITags": [
                            {
                                "name": "Computer",
                                "confidence": 97.66,
                                "source": "google-auto-tagging"
                            },
                            {
                                "name": "Personal computer",
                                "confidence": 94.96,
                                "source": "google-auto-tagging"
                            }
                        ],
                        "embeddedMetadata":{
                            "XResolution":1,"YResolution":1,"DateCreated":"2023-06-21T11:49:39.850Z","DateTimeCreated":"2023-06-21T11:49:39.850Z"
                        },
                        "isPrivateFile": true,
                        "extensionStatus": {
                            "remove-bg": "pending",
                            "google-auto-tagging": "success"
                        }
                    }""",
            headers=headers,
        )
        with open(self.sample_image,"rb") as img:
            resp = self.client.upload(
                file=img,
                file_name="test.jpeg",
                options=UploadFileRequestOptions(
                    tags = ["test"],
                    response_fields=["embedded_metadata"]
                )
        )
        x_resolution = 1
        y_resolution = 1
        date_created = "2023-06-21T11:49:39.850Z"
        date_time_created = "2023-06-21T11:49:39.850Z"
        self.assertEqual(resp.embedded_metadata.x_resolution,x_resolution)
        self.assertEqual(resp.embedded_metadata.y_resolution,y_resolution)
        self.assertEqual(resp.embedded_metadata.date_created,date_created)
        self.assertEqual(resp.embedded_metadata.date_time_created,date_time_created)

        # self.assertEqual(request_body, responses.calls[0].request.body)
        # self.assertEqual(
        #     camel_dict_to_snake_dict(mock_response_metadata),
        #     resp.response_metadata.__dict__,
        # )
    @responses.activate()
    def test_upload_file_result_on_upload_with_non_breaking_changes_in_response(self):
        """
        Tests if  upload succeeds
        """
        URL.UPLOAD_BASE_URL = "http://test.com"
        url = "%s%s" % (URL.UPLOAD_BASE_URL, "/api/v1/files/upload")
        headers = create_headers_for_test()
        responses.add(
            responses.POST,
            url,
            body="""{
                        "fileId": "fake_file_id1234",
                        "name": "file_name.jpg",
                        "size": 102117,
                        "versionInfo": {
                            "id": "62d670648cdb697522602b45",
                            "name": "Version 11",
                            "decription":"Removed Background"
                        },
                        "filePath": "/testing-python-folder/file_name.jpg",
                        "url": "https://ik.imagekit.io/your_imagekit_id/testing-python-folder/file_name.jpg",
                        "fileType": "image",
                        "height": 700,
                        "width": 1050,
                        "resolution":120,
                        "thumbnailUrl": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/testing-python-folder/file_name.jpg",
                        "tags": [
                            "abc",
                            "def"
                        ],
                        "AITags": [
                            {
                                "name": "Computer",
                                "confidence": 97.66,
                                "source": "google-auto-tagging",
                                "description":"automatically created tag"
                            },
                            {
                                "name": "Personal computer",
                                "confidence": 94.96,
                                "source": "google-auto-tagging",
                                "description":"automatically created tag"
                            }
                        ],
                        "embeddedMetadata":{
                            "XResolution":1,"YResolution":1,"DateCreated":"2023-06-21T11:49:39.850Z","DateTimeCreated":"2023-06-21T11:49:39.850Z","DPI":120
                        },
                        "isPrivateFile": true,
                        "extensionStatus": {
                            "remove-bg": "pending",
                            "google-auto-tagging": "success",
                            "image-enhancing":"pending"
                        }
                    }""",
            headers=headers,
        )
        with open(self.sample_image,"rb") as img:
            resp = self.client.upload(
                file=img,
                file_name="test.jpeg",
                options=UploadFileRequestOptions(
                    tags = ["test"],
                    response_fields=["embedded_metadata"]
                )
        )
        self.assertEqual(resp.embedded_metadata.dpi,120)
        self.assertEqual(resp.resolution,120)
        self.assertEqual(resp.ai_tags[0].name,"Computer")
        self.assertEqual(resp.ai_tags[0].description,"automatically created tag")
        self.assertEqual(resp.extension_status["image-enhancing"],"pending")


    def test_upload_fails_without_file_name(self) -> None:
        """Test upload raises error on missing required params"""
        try:
            with open(self.sample_image, mode="rb") as img:
                imgstr = base64.b64encode(img.read())
            self.client.upload_file(file=imgstr)
        except TypeError as e:
            self.assertEqual(
                {"message": "Missing fileName parameter for upload", "help": ""},
                e.args[0],
            )

    def test_upload_fails_without_file(self) -> None:
        """Test upload raises error on missing required params"""
        try:
            self.client.upload_file(file_name="file_name.jpg")
        except TypeError as e:
            self.assertEqual(
                {"message": "Missing file parameter for upload", "help": ""}, e.args[0]
            )

    @responses.activate
    def test_upload_fails_with_400_exception(self) -> None:
        """Test upload raises 400 error"""

        URL.UPLOAD_BASE_URL = "http://test.com"
        url = "%s%s" % (URL.UPLOAD_BASE_URL, "/api/v1/files/upload")
        try:
            responses.add(
                responses.POST,
                url,
                status=400,
                body="""{
                        "message": "A file with the same name already exists at the exact location. We "
                        "could not overwrite it because both overwriteFile and "
                        "useUniqueFileName are set to false."
                    }""",
            )
            self.client.upload_file(
                file=self.image,
                file_name=self.filename,
                options=UploadFileRequestOptions(
                    use_unique_file_name=False,
                    tags=["abc", "def"],
                    folder="/testing-python-folder/",
                    is_private_file=False,
                    custom_coordinates="10,10,20,20",
                    response_fields=[
                        "tags",
                        "custom_coordinates",
                        "is_private_file",
                        "embedded_metadata",
                        "custom_metadata",
                    ],
                    extensions=(
                        {
                            "name": "remove-bg",
                            "options": {"add_shadow": True, "bg_color": "pink"},
                        },
                        {
                            "name": "google-auto-tagging",
                            "minConfidence": 80,
                            "maxTags": 10,
                        },
                    ),
                    webhook_url="https://webhook.site/c78d617f-33bc-40d9-9e61-608999721e2e",
                    overwrite_file=True,
                    overwrite_ai_tags=False,
                    overwrite_tags=False,
                    overwrite_custom_metadata=True,
                    custom_metadata={"testss": 12},
                ),
            )
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual(
                "A file with the same name already exists at the exact location. We could not overwrite "
                "it because both overwriteFile and useUniqueFileName are set to false.",
                e.message,
            )
            self.assertEqual(400, e.response_metadata.http_status_code)


class TestListFiles(ClientTestCase):
    """
    TestListFiles class used to test list_files method
    """

    @responses.activate
    def test_list_files_fails_on_unauthenticated_request(self) -> None:
        """Tests unauthenticated request restricted for list_files method"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files".format(URL.API_BASE_URL)
        try:
            responses.add(
                responses.GET,
                url,
                status=403,
                body="""{'message': 'Your account cannot be authenticated.'
                                    , 'help': 'For support kindly contact us at support@imagekit.io .'}""",
            )
            self.client.list_files(self.options)
            self.assertRaises(ForbiddenException)
        except ForbiddenException as e:
            self.assertEqual("Your account cannot be authenticated.", e.message)
            self.assertEqual(403, e.response_metadata.http_status_code)

    @responses.activate
    def test_list_files_succeeds_with_basic_request_tags_with_array(self) -> None:
        """
        Tests if list_files work with options which contains type, sort, path, searchQuery, fileType, limit, skip and tags
        """

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files".format(URL.API_BASE_URL)

        headers = create_headers_for_test()
        responses.add(
            responses.GET,
            url,
            body="""[{
                "type": "file",
                "name": "sample-cat-image_gr64HPlJS.jpg",
                "createdAt": "2022-06-15T08:19:00.843Z",
                "updatedAt": "2022-06-15T08:19:45.169Z",
                "fileId": "62a995f4d875ec08dc587b72",
                "tags": ["Tag_1", " Tag_2", " Tag_3", "tag-to-add-2"],
                "AITags": "",
                "versionInfo": {
                    "id": "62a995f4d875ec08dc587b72",
                    "name": "Version 1"
                },
                "embeddedMetadata": {
                    "XResolution": 250,
                    "YResolution": 250,
                    "DateCreated": "2022-06-15T08:19:01.523Z",
                    "DateTimeCreated": "2022-06-15T08:19:01.524Z"
                },
                "customCoordinates": "10,10,20,20",
                "customMetadata": {
                    "test100": 10
                },
                "isPrivateFile": false,
                "url": "https://ik.imagekit.io/your_imagekit_id/sample-cat-image_gr64HPlJS.jpg",
                "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/sample-cat-image_gr64HPlJS.jpg",
                "fileType": "image",
                "filePath": "/sample-cat-image_gr64HPlJS.jpg",
                "height": 354,
                "width": 236,
                "size": 23023,
                "hasAlpha": false,
                "mime": "image/jpeg"
            }]""",
            headers=headers,
            match=[
                matchers.query_string_matcher("type=file&sort=ASC_CREATED&path=%2F&searchQuery=created_at+%3E%3D+%272d%27+OR+size+%3C+%272mb%27+OR+format%3D%27png%27&fileType=all&limit=1&skip=0&tags=Tag-1%2C+Tag-2%2C+Tag-3"
                )
            ],
        )

        resp = self.client.list_files(self.opt)

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 200,
            "raw": [
                {
                    "AITags": "",
                    "createdAt": "2022-06-15T08:19:00.843Z",
                    "customCoordinates": "10,10,20,20",
                    "customMetadata": {"test100": 10},
                    "embeddedMetadata": {
                        "DateCreated": "2022-06-15T08:19:01.523Z",
                        "DateTimeCreated": "2022-06-15T08:19:01.524Z",
                        "XResolution": 250,
                        "YResolution": 250,
                    },
                    "fileId": "62a995f4d875ec08dc587b72",
                    "filePath": "/sample-cat-image_gr64HPlJS.jpg",
                    "fileType": "image",
                    "hasAlpha": False,
                    "height": 354,
                    "isPrivateFile": False,
                    "mime": "image/jpeg",
                    "name": "sample-cat-image_gr64HPlJS.jpg",
                    "size": 23023,
                    "tags": ["Tag_1", " Tag_2", " Tag_3", "tag-to-add-2"],
                    "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/sample-cat-image_gr64HPlJS.jpg",
                    "type": "file",
                    "updatedAt": "2022-06-15T08:19:45.169Z",
                    "url": "https://ik.imagekit.io/your_imagekit_id/sample-cat-image_gr64HPlJS.jpg",
                    "versionInfo": {
                        "id": "62a995f4d875ec08dc587b72",
                        "name": "Version " "1",
                    },
                    "width": 236,
                }
            ],
        }
        self.assertEqual(
            "http://test.com/v1/files?type=file&sort=ASC_CREATED&path=%2F&searchQuery=created_at+%3E%3D+%272d%27+OR+size+%3C+%272mb%27+OR+format%3D%27png%27&fileType=all&limit=1&skip=0&tags=Tag-1%2C+Tag-2%2C+Tag-3",
            responses.calls[0].request.url,
        )
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )

    @responses.activate
    def test_list_files_succeeds_with_basic_request(self) -> None:
        """
        Tests if list_files work with options which contains type, sort, path, searchQuery, fileType, limit, skip and tags
        """

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files".format(URL.API_BASE_URL)

        headers = create_headers_for_test()
        responses.add(
            responses.GET,
            url,
            body="""[{
                "type": "file",
                "name": "sample-cat-image_gr64HPlJS.jpg",
                "createdAt": "2022-06-15T08:19:00.843Z",
                "updatedAt": "2022-06-15T08:19:45.169Z",
                "fileId": "62a995f4d875ec08dc587b72",
                "tags": ["Tag_1", " Tag_2", " Tag_3", "tag-to-add-2"],
                "AITags": "",
                "versionInfo": {
                    "id": "62a995f4d875ec08dc587b72",
                    "name": "Version 1"
                },
                "embeddedMetadata": {
                    "XResolution": 250,
                    "YResolution": 250,
                    "DateCreated": "2022-06-15T08:19:01.523Z",
                    "DateTimeCreated": "2022-06-15T08:19:01.524Z"
                },
                "customCoordinates": "10,10,20,20",
                "customMetadata": {
                    "test100": 10
                },
                "isPrivateFile": false,
                "url": "https://ik.imagekit.io/your_imagekit_id/sample-cat-image_gr64HPlJS.jpg",
                "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/sample-cat-image_gr64HPlJS.jpg",
                "fileType": "image",
                "filePath": "/sample-cat-image_gr64HPlJS.jpg",
                "height": 354,
                "width": 236,
                "size": 23023,
                "hasAlpha": false,
                "mime": "image/jpeg"
            }]""",
            headers=headers,
            match=[
                matchers.query_string_matcher("type=file&sort=ASC_CREATED&path=%2F&searchQuery=created_at+%3E%3D+%272d%27+OR+size+%3C+%272mb%27+OR+format%3D%27png%27&fileType=all&limit=1&skip=0&tags=Tag-1%2C+Tag-2%2C+Tag-3"
                )
            ],
        )

        resp = self.client.list_files(self.options)

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 200,
            "raw": [
                {
                    "AITags": "",
                    "createdAt": "2022-06-15T08:19:00.843Z",
                    "customCoordinates": "10,10,20,20",
                    "customMetadata": {"test100": 10},
                    "embeddedMetadata": {
                        "DateCreated": "2022-06-15T08:19:01.523Z",
                        "DateTimeCreated": "2022-06-15T08:19:01.524Z",
                        "XResolution": 250,
                        "YResolution": 250,
                    },
                    "fileId": "62a995f4d875ec08dc587b72",
                    "filePath": "/sample-cat-image_gr64HPlJS.jpg",
                    "fileType": "image",
                    "hasAlpha": False,
                    "height": 354,
                    "isPrivateFile": False,
                    "mime": "image/jpeg",
                    "name": "sample-cat-image_gr64HPlJS.jpg",
                    "size": 23023,
                    "tags": ["Tag_1", " Tag_2", " Tag_3", "tag-to-add-2"],
                    "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/sample-cat-image_gr64HPlJS.jpg",
                    "type": "file",
                    "updatedAt": "2022-06-15T08:19:45.169Z",
                    "url": "https://ik.imagekit.io/your_imagekit_id/sample-cat-image_gr64HPlJS.jpg",
                    "versionInfo": {
                        "id": "62a995f4d875ec08dc587b72",
                        "name": "Version " "1",
                    },
                    "width": 236,
                }
            ],
        }
        self.assertEqual(
            "http://test.com/v1/files?type=file&sort=ASC_CREATED&path=%2F&searchQuery=created_at+%3E%3D+%272d%27+OR+size+%3C+%272mb%27+OR+format%3D%27png%27&fileType=all&limit=1&skip=0&tags=Tag-1%2C+Tag-2%2C+Tag-3",
            responses.calls[0].request.url,
        )
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )

    @responses.activate
    def test_list_files_fails_with_400_exception(self) -> None:
        """Test get list of files raises 400 error"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files".format(URL.API_BASE_URL)
        try:
            responses.add(
                responses.GET,
                url,
                status=400,
                body="""{"message": "Invalid search query - createdAt field must have a valid date value. Make "
                                            "sure the value is enclosed within quotes. Please refer to the "
                                            "documentation for syntax specification.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
                match=[
                    matchers.query_string_matcher("type=file&sort=ASC_CREATED&path=%2F&searchQuery=created_at+%3E%3D+%272d%27+OR+size+%3C+%272mb%27+OR+format%3D%27png%27&fileType=all&limit=1&skip=0&tags=Tag-1%2C+Tag-2%2C+Tag-3"
                    )
                ],
            )
            self.client.list_files(self.options)
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual(
                "Invalid search query - createdAt field must have a valid date value. Make "
                "sure the value is enclosed within quotes. Please refer to the "
                "documentation for syntax specification.",
                e.message,
            )
            self.assertEqual(400, e.response_metadata.http_status_code)


class TestGetFileDetails(ClientTestCase):
    """
    TestGetFileDetails class used to test get_file_details method
    """

    file_id = "fake_file_id1234"
    file_url = "https://example.com/default.jpg"

    @responses.activate
    def test_get_file_details_fails_on_unauthenticated_request(self) -> None:
        """Tests of get_file_details raise error on unauthenticated request"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/details".format(URL.API_BASE_URL, self.file_id)
        try:
            responses.add(
                responses.GET,
                url,
                status=403,
                body="""{'message': 'Your account cannot be authenticated.'
                                    , 'help': 'For support kindly contact us at support@imagekit.io .'}""",
            )
            self.client.get_file_details(self.file_id)
            self.assertRaises(ForbiddenException)
        except ForbiddenException as e:
            self.assertEqual(e.message, "Your account cannot be authenticated.")
            self.assertEqual(403, e.response_metadata.http_status_code)

    @responses.activate
    def test_file_details_succeeds_with_id(self) -> None:
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/details".format(URL.API_BASE_URL, self.file_id)

        headers = create_headers_for_test()
        responses.add(
            responses.GET,
            url,
            body="""{
                        "type": "file",
                        "name": "default-image.jpg",
                        "createdAt": "2022-06-15T08:19:00.843Z",
                        "updatedAt": "2022-08-19T12:19:22.726Z",
                        "fileId": "fake_file_id1234",
                        "tags": [
                            "{Software",
                            " Developer",
                            " Engineer}",
                            "tag-to-add-2"
                        ],
                        "AITags": null,
                        "versionInfo": {
                            "id": "62a995f4d875ec08dc587b72",
                            "name": "Version 1"
                        },
                        "embeddedMetadata": {
                            "XResolution": 250,
                            "YResolution": 250,
                            "DateCreated": "2022-06-15T08:19:01.523Z",
                            "DateTimeCreated": "2022-06-15T08:19:01.524Z"
                        },
                        "customCoordinates": "10,10,20,20",
                        "customMetadata": {
                            "test100": 10
                        },
                        "isPrivateFile": false,
                        "url": "https://ik.imagekit.io/xyxt2lnil/default-image.jpg",
                        "thumbnail": "https://ik.imagekit.io/xyxt2lnil/tr:n-ik_ml_thumbnail/default-image.jpg",
                        "fileType": "image",
                        "filePath": "/default-image.jpg",
                        "height": 354,
                        "width": 236,
                        "size": 23023,
                        "hasAlpha": false,
                        "mime": "image/jpeg"
                    }""",
            headers=headers,
        )
        resp = self.client.get_file_details(self.file_id)

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "http_status_code": 200,
            "raw": {
                "AITags": None,
                "createdAt": "2022-06-15T08:19:00.843Z",
                "customCoordinates": "10,10,20,20",
                "customMetadata": {"test100": 10},
                "embeddedMetadata": {
                    "DateCreated": "2022-06-15T08:19:01.523Z",
                    "DateTimeCreated": "2022-06-15T08:19:01.524Z",
                    "XResolution": 250,
                    "YResolution": 250,
                },
                "fileId": "fake_file_id1234",
                "filePath": "/default-image.jpg",
                "fileType": "image",
                "hasAlpha": False,
                "height": 354,
                "isPrivateFile": False,
                "mime": "image/jpeg",
                "name": "default-image.jpg",
                "size": 23023,
                "tags": ["{Software", " Developer", " Engineer}", "tag-to-add-2"],
                "thumbnail": "https://ik.imagekit.io/xyxt2lnil/tr:n-ik_ml_thumbnail/default-image.jpg",
                "type": "file",
                "updatedAt": "2022-08-19T12:19:22.726Z",
                "url": "https://ik.imagekit.io/xyxt2lnil/default-image.jpg",
                "versionInfo": {"id": "62a995f4d875ec08dc587b72", "name": "Version 1"},
                "width": 236,
            },
        }

        self.assertEqual(
            "http://test.com/v1/files/fake_file_id1234/details",
            responses.calls[0].request.url,
        )
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("fake_file_id1234", resp.file_id)

    @responses.activate
    def test_file_details_fails_with_400_exception(self) -> None:
        """Test get file details raises 400 error"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/details".format(URL.API_BASE_URL, self.file_id)
        try:
            responses.add(
                responses.GET,
                url,
                status=400,
                body="""{"message": "Your request contains invalid fileId parameter.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.get_file_details(self.file_id)
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual(
                "Your request contains invalid fileId parameter.", e.message
            )
            self.assertEqual(400, e.response_metadata.http_status_code)


class TestDeleteFile(ClientTestCase):
    file_id = "fax_abx1223"
    bulk_delete_ids = ["fake_123", "fake_222"]

    @responses.activate
    def test_bulk_file_delete_fails_on_unauthenticated_request(self) -> None:
        """Test bulk_file_delete on unauthenticated request
        this function checks if raises error on unauthenticated request
        to check if bulk_delete is only restricted to authenticated
        requests
        """

        URL.API_BASE_URL = "http://test.com"
        url = URL.API_BASE_URL + "/v1/files" + URL.BULK_FILE_DELETE
        try:
            responses.add(
                responses.POST,
                url,
                status=403,
                body="""{'message': 'Your account cannot be authenticated.'
                                    , 'help': 'For support kindly contact us at support@imagekit.io .'}""",
            )
            self.client.bulk_file_delete(self.bulk_delete_ids)
            self.assertRaises(ForbiddenException)
        except ForbiddenException as e:
            self.assertEqual(e.message, "Your account cannot be authenticated.")
            self.assertEqual(e.response_metadata.http_status_code, 403)

    @responses.activate
    def test_bulk_file_delete_succeeds(self):
        """Test bulk_delete  on authenticated request
        this function tests if bulk_file_delete working properly
        """

        URL.API_BASE_URL = "http://test.com"
        url = URL.API_BASE_URL + "/v1/files" + URL.BULK_FILE_DELETE
        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())

        responses.add(
            responses.POST,
            url,
            body='{"successfullyDeletedFileIds": ["fake_123", "fake_222"]}',
            headers=headers,
        )

        resp = self.client.bulk_file_delete(self.bulk_delete_ids)

        mock_response_metadata = {
            "raw": {"successfullyDeletedFileIds": ["fake_123", "fake_222"]},
            "httpStatusCode": 200,
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
        }
        self.assertEqual(
            '{"fileIds": ["fake_123", "fake_222"]}', responses.calls[0].request.body
        )
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(["fake_123", "fake_222"], resp.successfully_deleted_file_ids)
        self.assertEqual(
            "http://test.com/v1/files/batch/deleteByFileIds",
            responses.calls[0].request.url,
        )

    @responses.activate
    def test_bulk_file_delete_succeeds_and_recieves_extra_non_breaking_changes_from_apii(self):
        """Test bulk_delete  on authenticated request
        this function tests if bulk_file_delete working properly
        """

        URL.API_BASE_URL = "http://test.com"
        url = URL.API_BASE_URL + "/v1/files" + URL.BULK_FILE_DELETE
        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())

        responses.add(
            responses.POST,
            url,
            body='{"successfullyDeletedFileIds": ["fake_123"],"nonDeletedFields":["fake_222"]}',
            headers=headers,
        )

        resp = self.client.bulk_file_delete(self.bulk_delete_ids)

        mock_response_metadata = {
            "raw": {"successfullyDeletedFileIds": ["fake_123"],"nonDeletedFields":["fake_222"]},
            "httpStatusCode": 200,
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
        }
        self.assertEqual(
            '{"fileIds": ["fake_123", "fake_222"]}', responses.calls[0].request.body
        )
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(["fake_123"], resp.successfully_deleted_file_ids)
        self.assertEqual(["fake_222"], resp.non_deleted_fields)
        self.assertEqual(
            "http://test.com/v1/files/batch/deleteByFileIds",
            responses.calls[0].request.url,
        )
    @responses.activate
    def test_bulk_file_delete_fails_with_404_exception(self) -> None:
        """Test bulk_file_delete raises 404 error"""

        URL.API_BASE_URL = "http://test.com"
        url = URL.API_BASE_URL + "/v1/files" + URL.BULK_FILE_DELETE
        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())
        try:
            responses.add(
                responses.POST,
                url,
                status=404,
                body="""{
                    "message": "The requested file(s) does not exist.",
                    "help": "For support kindly contact us at support@imagekit.io .",
                    "missingFileIds": ["fake_123", "fake_222"]
                }""",
                headers=headers,
            )
            self.client.bulk_file_delete(self.bulk_delete_ids)
            self.assertRaises(NotFoundException)
        except NotFoundException as e:
            self.assertEqual("The requested file(s) does not exist.", e.message)
            self.assertEqual(404, e.response_metadata.http_status_code)
            self.assertEqual(
                ["fake_123", "fake_222"], e.response_metadata.raw["missingFileIds"]
            )

    @responses.activate
    def test_file_delete_fails_with_400_exception(self):
        """Test delete_file on unavailable content
        this function raising 400 if the file
        is not available
        """

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}".format(URL.API_BASE_URL, self.file_id)
        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())
        try:
            responses.add(
                responses.DELETE,
                url,
                status=400,
                body="""{
                    "message": "Your request contains invalid fileId parameter.",
                    "help": "For support kindly contact us at support@imagekit.io ."
                }""",
                headers=headers,
            )
            self.client.delete_file(self.file_id)
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual(
                "Your request contains invalid fileId parameter.", e.message
            )
            self.assertEqual(400, e.response_metadata.http_status_code)

    @responses.activate
    def test_file_delete_succeeds(self):
        """Test delete file on authenticated request
        this function tests if delete_file working properly
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}".format(URL.API_BASE_URL, self.file_id)
        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())

        responses.add(responses.DELETE, url, body="{}", status=204, headers=headers)

        resp = self.client.delete_file(self.file_id)

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 204,
            "raw": None,
        }
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(
            "http://test.com/v1/files/fax_abx1223", responses.calls[0].request.url
        )


class TestPurgeCache(ClientTestCase):
    fake_image_url = "https://example.com/fakeid/fakeimage.jpg"

    @responses.activate
    def test_purge_file_cache_fails_on_unauthenticated_request(self):
        """
        Tests if the unauthenticated request restricted
        """
        URL.API_BASE_URL = "http://test.com"
        url = URL.API_BASE_URL + "/v1/files/purge"
        try:
            responses.add(
                responses.POST,
                url,
                status=403,
                body="""{'message': 'Your account cannot be authenticated.'
                                    , 'help': 'For support kindly contact us at support@imagekit.io .'}""",
            )
            self.client.purge_file_cache(self.fake_image_url)
            self.assertRaises(ForbiddenException)
        except ForbiddenException as e:
            self.assertEqual(e.message, "Your account cannot be authenticated.")
            self.assertEqual(403, e.response_metadata.http_status_code)

    @responses.activate
    def test_purge_file_cache_fails_with_400(self):
        """
        Tests if the purge_file_cache fails with 400
        """
        URL.API_BASE_URL = "http://test.com"
        url = URL.API_BASE_URL + "/v1/files/purge"
        try:
            responses.add(
                responses.POST,
                url,
                status=400,
                body='{"message": "Invalid url"}',
            )
            self.client.purge_file_cache("url")
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual("Invalid url", e.message)
            self.assertEqual(400, e.response_metadata.http_status_code)

    @responses.activate
    def test_purge_file_cache_succeeds(self):
        """
        Tests if purge_file_cache succeeds
        """
        URL.API_BASE_URL = "http://test.com"
        url = URL.API_BASE_URL + "/v1/files/purge"
        responses.add(
            responses.POST,
            url,
            status=201,
            body='{"requestId": "requestId"}',
        )
        resp = self.client.purge_file_cache(self.fake_image_url)
        mock_response_metadata = {
            "raw": {"requestId": "requestId"},
            "httpStatusCode": 201,
            "headers": {"Content-Type": "text/plain"},
        }
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("requestId", resp.request_id)
        self.assertEqual(
            "http://test.com/v1/files/purge", responses.calls[0].request.url
        )
        self.assertEqual(
            '{"url": "https://example.com/fakeid/fakeimage.jpg"}',
            responses.calls[0].request.body,
        )


class TestPurgeCacheStatus(ClientTestCase):
    cache_request_id = "fake1234"

    @responses.activate
    def test_purge_file_cache_status_fails_with_400(self):
        """
        Tests if the purge_file_cache_status fails with 400
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/purge/{}".format(URL.API_BASE_URL, self.cache_request_id)
        try:
            responses.add(
                responses.GET,
                url,
                status=400,
                body="""{"message": "No request found for this requestId.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.get_purge_file_cache_status(self.cache_request_id)
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual("No request found for this requestId.", e.message)
            self.assertEqual(400, e.response_metadata.http_status_code)

    @responses.activate
    def test_purge_file_cache_status_succeeds(self):
        """
        Tests if purge_file_cache_status succeeds
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/purge/{}".format(URL.API_BASE_URL, self.cache_request_id)
        responses.add(
            responses.GET,
            url,
            body="""{"status": "Completed"}""",
        )
        resp = self.client.get_purge_file_cache_status(self.cache_request_id)
        mock_response_metadata = {
            "headers": {"Content-Type": "text/plain"},
            "httpStatusCode": 200,
            "raw": {"status": "Completed"},
        }
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("Completed", resp.status)
        self.assertEqual(
            "http://test.com/v1/files/purge/fake1234", responses.calls[0].request.url
        )


class TestGetMetaData(ClientTestCase):
    file_id = "fake_file_xbc"

    fake_image_url = "https://example.com/fakeid/fakeimage.jpg"

    @responses.activate
    def test_get_file_metadata_fails_with_400(self):
        """
        Tests if the get_file_metadata fails with 400
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/metadata".format(URL.API_BASE_URL, self.file_id)
        try:
            responses.add(
                responses.GET,
                url,
                status=400,
                body="""{"message": "Your request contains invalid fileId parameter.",
                                 "help": "For support kindly contact us at support@imagekit.io .",
                                 "type": "INVALID_PARAM_ERROR"}""",
            )
            self.client.get_file_metadata(self.file_id)
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual(
                "Your request contains invalid fileId parameter.", e.message
            )
            self.assertEqual(400, e.response_metadata.http_status_code)
            self.assertEqual("INVALID_PARAM_ERROR", e.response_metadata.raw["type"])

    @responses.activate
    def test_get_file_metadata_succeeds(self):
        """
        Tests if get_file_metadata succeeds
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/metadata".format(URL.API_BASE_URL, self.file_id)
        responses.add(
            responses.GET,
            url,
            body="""{
                "height": 354,
                "width": 236,
                "size": 7390,
                "format": "jpg",
                "hasColorProfile": false,
                "quality": 0,
                "density": 250,
                "hasTransparency": false,
                "exif": {},
                "pHash": "2e0ed1f12eda9525"
            }""",
        )
        resp = self.client.get_file_metadata(self.file_id)
        mock_response_metadata = {
            "headers": {"Content-Type": "text/plain"},
            "httpStatusCode": 200,
            "raw": {
                "density": 250,
                "exif": {},
                "format": "jpg",
                "hasColorProfile": False,
                "hasTransparency": False,
                "height": 354,
                "pHash": "2e0ed1f12eda9525",
                "quality": 0,
                "size": 7390,
                "width": 236,
            },
        }
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(
            "http://test.com/v1/files/fake_file_xbc/metadata",
            responses.calls[0].request.url,
        )

    @responses.activate
    def test_get_remote_file_url_metadata_fails_with_400(self):
        """
        Tests if the get_remote_file_url_metadata fails with 400
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/metadata".format(URL.API_BASE_URL)
        try:
            responses.add(
                responses.GET,
                url,
                status=400,
                body="""{
                    "message": "https://example.com/fakeid/fakeimage.jpg should be accessible using your ImageKit.io account.",
                    "help": "For support kindly contact us at support@imagekit.io ."
                }""",
                match=[
                    matchers.query_string_matcher(
                        "url=https://example.com/fakeid/fakeimage.jpg"
                    )
                ],
            )
            self.client.get_remote_file_url_metadata(self.fake_image_url)
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual(
                "https://example.com/fakeid/fakeimage.jpg should be accessible using your ImageKit.io account.",
                e.message,
            )
            self.assertEqual(400, e.response_metadata.http_status_code)

    @responses.activate
    def test_get_remote_file_url_metadata_succeeds(self):
        """
        Tests if get_remote_file_url_metadata succeeds
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/metadata".format(URL.API_BASE_URL)
        responses.add(
            responses.GET,
            url,
            body="""{
                "height": 354,
                "width": 236,
                "size": 7390,
                "format": "jpg",
                "hasColorProfile": false,
                "quality": 0,
                "density": 250,
                "hasTransparency": false,
                "exif": {},
                "pHash": "2e0ed1f12eda9525"
            }""",
            match=[
                matchers.query_string_matcher(
                    "url=https://example.com/fakeid/fakeimage.jpg"
                )
            ],
        )
        resp = self.client.get_remote_file_url_metadata(self.fake_image_url)
        mock_response_metadata = {
            "headers": {"Content-Type": "text/plain"},
            "httpStatusCode": 200,
            "raw": {
                "density": 250,
                "exif": {},
                "format": "jpg",
                "hasColorProfile": False,
                "hasTransparency": False,
                "height": 354,
                "pHash": "2e0ed1f12eda9525",
                "quality": 0,
                "size": 7390,
                "width": 236,
            },
        }
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(
            "http://test.com/v1/metadata?url=https%3A%2F%2Fexample.com%2Ffakeid%2Ffakeimage.jpg",
            responses.calls[0].request.url,
        )


class TestUpdateFileDetails(ClientTestCase):
    """
    TestUpdateFileDetails class used to update file details method
    """

    file_id = "fake_123"

    valid_options = UpdateFileRequestOptions(
        tags=["tag1", "tag2"], custom_coordinates="10,10,100,100"
    )

    @responses.activate
    def test_update_file_details_fails_on_unauthenticated_request(self):
        """
        Tests if the unauthenticated request restricted
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/details/".format(URL.API_BASE_URL, self.file_id)
        try:
            responses.add(
                responses.PATCH,
                url,
                status=403,
                body="""{'message': 'Your account cannot be authenticated.'
                                    , 'help': 'For support kindly contact us at support@imagekit.io .'}""",
            )
            self.client.update_file_details(
                file_id=self.file_id, options=self.valid_options
            )
            self.assertRaises(ForbiddenException)
        except ForbiddenException as e:
            self.assertEqual(e.message, "Your account cannot be authenticated.")
            self.assertEqual(403, e.response_metadata.http_status_code)

    @responses.activate
    def test_update_file_details_succeeds_with_id(self):
        """
        Tests if  update file details succeeds with file id
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/details/".format(URL.API_BASE_URL, self.file_id)
        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())
        responses.add(
            responses.PATCH,
            url,
            body="""{
                    "type": "file",
                    "name": "default-image.jpg",
                    "createdAt": "2022-07-21T10:31:22.529Z",
                    "updatedAt": "2022-07-21T10:37:11.848Z",
                    "fileId": "fake_123",
                    "tags": ["tag1", "tag2"],
                    "AITags": [{
                        "name": "Corridor",
                        "confidence": 99.39,
                        "source": "aws-auto-tagging"
                    }, {
                        "name": "Floor",
                        "confidence": 97.59,
                        "source": "aws-auto-tagging"
                    }],
                    "versionInfo": {
                        "id": "versionId",
                        "name": "Version 2"
                    },
                    "embeddedMetadata": {
                        "XResolution": 1,
                        "YResolution": 1,
                        "DateCreated": "2022-07-21T10:35:34.497Z",
                        "DateTimeCreated": "2022-07-21T10:35:34.500Z"
                    },
                    "customCoordinates": "10,10,100,100",
                    "customMetadata": {
                        "test": 11
                    },
                    "isPrivateFile": false,
                    "url": "https://ik.imagekit.io/your_imagekit_id/default-image.jpg",
                    "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/default-image.jpg",
                    "fileType": "image",
                    "filePath": "/default-image.jpg",
                    "height": 1000,
                    "width": 1000,
                    "size": 184425,
                    "hasAlpha": false,
                    "mime": "image/jpeg",
                    "extensionStatus": {
                        "remove-bg": "pending",
                        "google-auto-tagging": "success"
                    }
                }""",
            headers=headers,
        )

        request_body = json.dumps(
            json.loads(
                """{
                "removeAITags": ["ai-tag1", "ai-tag2"],
                "webhookUrl": "url",
                "extensions": [{
                    "name": "remove-bg",
                    "options": {
                        "add_shadow": true,
                        "bg_color": "red"
                    }
                }, {
                    "name": "google-auto-tagging",
                    "minConfidence": 80,
                    "maxTags": 10
                }],
                "tags": ["tag1", "tag2"],
                "customCoordinates": "10,10,100,100",
                "customMetadata": {
                    "test": 11
                }
            }"""
            )
        )
        resp = self.client.update_file_details(
            file_id=self.file_id,
            options=UpdateFileRequestOptions(
                remove_ai_tags=["ai-tag1", "ai-tag2"],
                webhook_url="url",
                extensions=[
                    {
                        "name": "remove-bg",
                        "options": {"add_shadow": True, "bg_color": "red"},
                    },
                    {"name": "google-auto-tagging", "minConfidence": 80, "maxTags": 10},
                ],
                tags=["tag1", "tag2"],
                custom_coordinates="10,10,100,100",
                custom_metadata={"test": 11},
            ),
        )
        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "http_status_code": 200,
            "raw": {
                "AITags": [
                    {
                        "confidence": 99.39,
                        "name": "Corridor",
                        "source": "aws-auto-tagging",
                    },
                    {
                        "confidence": 97.59,
                        "name": "Floor",
                        "source": "aws-auto-tagging",
                    },
                ],
                "createdAt": "2022-07-21T10:31:22.529Z",
                "customCoordinates": "10,10,100,100",
                "customMetadata": {"test": 11},
                "embeddedMetadata": {
                    "DateCreated": "2022-07-21T10:35:34.497Z",
                    "DateTimeCreated": "2022-07-21T10:35:34.500Z",
                    "XResolution": 1,
                    "YResolution": 1,
                },
                "extensionStatus": {
                    "google-auto-tagging": "success",
                    "remove-bg": "pending",
                },
                "fileId": "fake_123",
                "filePath": "/default-image.jpg",
                "fileType": "image",
                "hasAlpha": False,
                "height": 1000,
                "isPrivateFile": False,
                "mime": "image/jpeg",
                "name": "default-image.jpg",
                "size": 184425,
                "tags": ["tag1", "tag2"],
                "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/default-image.jpg",
                "type": "file",
                "updatedAt": "2022-07-21T10:37:11.848Z",
                "url": "https://ik.imagekit.io/your_imagekit_id/default-image.jpg",
                "versionInfo": {"id": "versionId", "name": "Version 2"},
                "width": 1000,
            },
        }
        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("fake_123", resp.file_id)
        self.assertEqual(
            "http://test.com/v1/files/fake_123/details/", responses.calls[0].request.url
        )

    @responses.activate
    def test_update_file_publish_status_succeeds_(self):
        """
        Tests if  update file publish status succeeds
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/details/".format(URL.API_BASE_URL, self.file_id)
        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())
        responses.add(
            responses.PATCH,
            url,
            body="""{
                    "type": "file",
                    "name": "default-image.jpg",
                    "createdAt": "2022-07-21T10:31:22.529Z",
                    "updatedAt": "2022-07-21T10:37:11.848Z",
                    "fileId": "fake_123",
                    "tags": ["tag1", "tag2"],
                    "AITags": [{
                        "name": "Corridor",
                        "confidence": 99.39,
                        "source": "aws-auto-tagging"
                    }, {
                        "name": "Floor",
                        "confidence": 97.59,
                        "source": "aws-auto-tagging"
                    }],
                    "versionInfo": {
                        "id": "versionId",
                        "name": "Version 2"
                    },
                    "embeddedMetadata": {
                        "XResolution": 1,
                        "YResolution": 1,
                        "DateCreated": "2022-07-21T10:35:34.497Z",
                        "DateTimeCreated": "2022-07-21T10:35:34.500Z"
                    },
                    "customCoordinates": "10,10,100,100",
                    "customMetadata": {
                        "test": 11
                    },
                    "isPrivateFile": false,
                    "url": "https://ik.imagekit.io/your_imagekit_id/default-image.jpg",
                    "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/default-image.jpg",
                    "fileType": "image",
                    "filePath": "/default-image.jpg",
                    "height": 1000,
                    "width": 1000,
                    "size": 184425,
                    "hasAlpha": false,
                    "mime": "image/jpeg",
                    "extensionStatus": {
                        "remove-bg": "pending",
                        "google-auto-tagging": "success"
                    }
                }""",
            headers=headers,
        )

        request_body = json.dumps(
            json.loads(
                """{
                "publish": {
                    "isPublished": true,
                    "includeFileVersions": true
                }
            }"""
            )
        )
        resp = self.client.update_file_details(
            file_id=self.file_id,
            options=UpdateFileRequestOptions(
                publish={
                    "isPublished": True,
                    "includeFileVersions": True
                }
            ),
        )
        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "http_status_code": 200,
            "raw": {
                "AITags": [
                    {
                        "confidence": 99.39,
                        "name": "Corridor",
                        "source": "aws-auto-tagging",
                    },
                    {
                        "confidence": 97.59,
                        "name": "Floor",
                        "source": "aws-auto-tagging",
                    },
                ],
                "createdAt": "2022-07-21T10:31:22.529Z",
                "customCoordinates": "10,10,100,100",
                "customMetadata": {"test": 11},
                "embeddedMetadata": {
                    "DateCreated": "2022-07-21T10:35:34.497Z",
                    "DateTimeCreated": "2022-07-21T10:35:34.500Z",
                    "XResolution": 1,
                    "YResolution": 1,
                },
                "extensionStatus": {
                    "google-auto-tagging": "success",
                    "remove-bg": "pending",
                },
                "fileId": "fake_123",
                "filePath": "/default-image.jpg",
                "fileType": "image",
                "hasAlpha": False,
                "height": 1000,
                "isPrivateFile": False,
                "mime": "image/jpeg",
                "name": "default-image.jpg",
                "size": 184425,
                "tags": ["tag1", "tag2"],
                "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/default-image.jpg",
                "type": "file",
                "updatedAt": "2022-07-21T10:37:11.848Z",
                "url": "https://ik.imagekit.io/your_imagekit_id/default-image.jpg",
                "versionInfo": {"id": "versionId", "name": "Version 2"},
                "width": 1000,
            },
        }
        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("fake_123", resp.file_id)
        self.assertEqual(
            "http://test.com/v1/files/fake_123/details/", responses.calls[0].request.url
        )

    @responses.activate
    def test_update_file_details_fails_with_404_exception(self) -> None:
        """Test update file details raises 404 error"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/details/".format(URL.API_BASE_URL, self.file_id)
        try:
            responses.add(
                responses.PATCH,
                url,
                status=404,
                body="""{"message": "The requested file does not exist.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.update_file_details(
                file_id=self.file_id,
                options=UpdateFileRequestOptions(
                    remove_ai_tags=["ai-tag1", "ai-tag2"],
                    webhook_url="url",
                    extensions=[
                        {
                            "name": "remove-bg",
                            "options": {"add_shadow": True, "bg_color": "red"},
                        },
                        {
                            "name": "google-auto-tagging",
                            "minConfidence": 80,
                            "maxTags": 10,
                        },
                    ],
                    tags=["tag1", "tag2"],
                    custom_coordinates="10,10,100,100",
                    custom_metadata={"test": 11},
                ),
            )
            self.assertRaises(UnknownException)
        except UnknownException as e:
            self.assertEqual("The requested file does not exist.", e.message)
            self.assertEqual(404, e.response_metadata.http_status_code)


class TestGetFileVersions(ClientTestCase):
    """
    TestGetFileVersions class used to get file versions and it's details
    """

    file_id = "fake_123"

    version_id = "fake_version_123"

    valid_options = {"tags": ["tag1", "tag2"], "custom_coordinates": "10,10,100,100"}

    @responses.activate
    def test_get_file_versions_fails_on_unauthenticated_request(self):
        """
        Tests if the unauthenticated request restricted
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions".format(URL.API_BASE_URL, self.file_id)
        try:
            responses.add(
                responses.GET,
                url,
                status=403,
                body="""{'message': 'Your account cannot be authenticated.'
                                    , 'help': 'For support kindly contact us at support@imagekit.io .'}""",
            )
            self.client.get_file_versions(self.file_id)
            self.assertRaises(ForbiddenException)
        except ForbiddenException as e:
            self.assertEqual(e.message, "Your account cannot be authenticated.")
            self.assertEqual(403, e.response_metadata.http_status_code)

    @responses.activate
    def test_get_file_versions_succeeds_with_id(self):
        """
        Tests if get file versions succeeds with file id
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions".format(URL.API_BASE_URL, self.file_id)

        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())
        responses.add(
            responses.GET,
            url,
            body="""[{
                "type": "file",
                "name": "new_car.jpg",
                "createdAt": "2022-06-15T11:34:36.294Z",
                "updatedAt": "2022-07-04T10:15:50.067Z",
                "fileId": "fake_123",
                "tags": ["Tag_1", "Tag_2", "Tag_3"],
                "AITags": [{
                    "name": "Clothing",
                    "confidence": 98.77,
                    "source": "google-auto-tagging"
                }, {
                    "name": "Smile",
                    "confidence": 95.31,
                    "source": "google-auto-tagging"
                }, {
                    "name": "Shoe",
                    "confidence": 95.2,
                    "source": "google-auto-tagging"
                }],
                "versionInfo": {
                    "id": "versionId",
                    "name": "Version 4"
                },
                "embeddedMetadata": {
                    "DateCreated": "2022-07-04T10:15:50.066Z",
                    "DateTimeCreated": "2022-07-04T10:15:50.066Z"
                },
                "customCoordinates": "",
                "customMetadata": {
                    "test100": 10,
                    "test10": 11
                },
                "isPrivateFile": false,
                "url": "https://ik.imagekit.io/your_imagekit_id/new_car.jpg",
                "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/new_car.jpg",
                "fileType": "image",
                "filePath": "/new_car.jpg",
                "height": 354,
                "width": 236,
                "size": 7390,
                "hasAlpha": false,
                "mime": "image/jpeg"
            }, {
                "type": "file-version",
                "name": "new_car.jpg",
                "createdAt": "2022-07-04T10:15:49.698Z",
                "updatedAt": "2022-07-04T10:15:49.734Z",
                "fileId": "fileId",
                "tags": ["Tag_1", "Tag_2", "Tag_3"],
                "AITags": [{
                    "name": "Clothing",
                    "confidence": 98.77,
                    "source": "google-auto-tagging"
                }, {
                    "name": "Smile",
                    "confidence": 95.31,
                    "source": "google-auto-tagging"
                }, {
                    "name": "Shoe",
                    "confidence": 95.2,
                    "source": "google-auto-tagging"
                }, {
                    "name": "Street light",
                    "confidence": 91.05,
                    "source": "google-auto-tagging"
                }],
                "versionInfo": {
                    "id": "62c2bdd5872375c6b8f40fd4",
                    "name": "Version 1"
                },
                "embeddedMetadata": {
                    "XResolution": 250,
                    "YResolution": 250,
                    "DateCreated": "2022-06-15T11:34:36.702Z",
                    "DateTimeCreated": "2022-06-15T11:34:36.702Z"
                },
                "customCoordinates": "10,10,40,40",
                "customMetadata": {
                    "test100": 10,
                    "test10": 11
                },
                "isPrivateFile": false,
                "url": "https://ik.imagekit.io/your_imagekit_id/new_car.jpg?ik-obj-version=dlkUlhiJ7I8OTejhKG38GZJBrsvDBcnz",
                "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/new_car.jpg?ik-obj-version=dlkUlhiJ7I8OTejhKG38GZJBrsvDBcnz",
                "fileType": "image",
                "filePath": "/new_car.jpg",
                "height": 354,
                "width": 236,
                "size": 23023,
                "hasAlpha": false,
                "mime": "image/jpeg"
            }]""",
            headers=headers,
        )
        resp = self.client.get_file_versions(self.file_id)
        mock_response_metadata = {
            "raw": [
                {
                    "type": "file",
                    "name": "new_car.jpg",
                    "createdAt": "2022-06-15T11:34:36.294Z",
                    "updatedAt": "2022-07-04T10:15:50.067Z",
                    "fileId": "fake_123",
                    "tags": ["Tag_1", "Tag_2", "Tag_3"],
                    "AITags": [
                        {
                            "name": "Clothing",
                            "confidence": 98.77,
                            "source": "google-auto-tagging",
                        },
                        {
                            "name": "Smile",
                            "confidence": 95.31,
                            "source": "google-auto-tagging",
                        },
                        {
                            "name": "Shoe",
                            "confidence": 95.2,
                            "source": "google-auto-tagging",
                        },
                    ],
                    "versionInfo": {"id": "versionId", "name": "Version 4"},
                    "embeddedMetadata": {
                        "DateCreated": "2022-07-04T10:15:50.066Z",
                        "DateTimeCreated": "2022-07-04T10:15:50.066Z",
                    },
                    "customCoordinates": "",
                    "customMetadata": {"test100": 10, "test10": 11},
                    "isPrivateFile": False,
                    "url": "https://ik.imagekit.io/your_imagekit_id/new_car.jpg",
                    "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/new_car.jpg",
                    "fileType": "image",
                    "filePath": "/new_car.jpg",
                    "height": 354,
                    "width": 236,
                    "size": 7390,
                    "hasAlpha": False,
                    "mime": "image/jpeg",
                },
                {
                    "type": "file-version",
                    "name": "new_car.jpg",
                    "createdAt": "2022-07-04T10:15:49.698Z",
                    "updatedAt": "2022-07-04T10:15:49.734Z",
                    "fileId": "fileId",
                    "tags": ["Tag_1", "Tag_2", "Tag_3"],
                    "AITags": [
                        {
                            "name": "Clothing",
                            "confidence": 98.77,
                            "source": "google-auto-tagging",
                        },
                        {
                            "name": "Smile",
                            "confidence": 95.31,
                            "source": "google-auto-tagging",
                        },
                        {
                            "name": "Shoe",
                            "confidence": 95.2,
                            "source": "google-auto-tagging",
                        },
                        {
                            "name": "Street light",
                            "confidence": 91.05,
                            "source": "google-auto-tagging",
                        },
                    ],
                    "versionInfo": {
                        "id": "62c2bdd5872375c6b8f40fd4",
                        "name": "Version 1",
                    },
                    "embeddedMetadata": {
                        "XResolution": 250,
                        "YResolution": 250,
                        "DateCreated": "2022-06-15T11:34:36.702Z",
                        "DateTimeCreated": "2022-06-15T11:34:36.702Z",
                    },
                    "customCoordinates": "10,10,40,40",
                    "customMetadata": {"test100": 10, "test10": 11},
                    "isPrivateFile": False,
                    "url": "https://ik.imagekit.io/your_imagekit_id/new_car.jpg?ik-obj-version=dlkUlhiJ7I8OTejhKG38GZJBrsvDBcnz",
                    "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-ik_ml_thumbnail/new_car.jpg?ik-obj-version=dlkUlhiJ7I8OTejhKG38GZJBrsvDBcnz",
                    "fileType": "image",
                    "filePath": "/new_car.jpg",
                    "height": 354,
                    "width": 236,
                    "size": 23023,
                    "hasAlpha": False,
                    "mime": "image/jpeg",
                },
            ],
            "http_status_code": 200,
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
        }
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("fake_123", resp.list[0].file_id)
        self.assertEqual("fileId", resp.list[1].file_id)
        self.assertEqual(
            "http://test.com/v1/files/fake_123/versions", responses.calls[0].request.url
        )

    @responses.activate
    def test_get_file_versions_fails_with_404_exception(self) -> None:
        """Test get file versions raises 404 error"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions".format(URL.API_BASE_URL, self.file_id)
        try:
            responses.add(
                responses.GET,
                url,
                status=404,
                body="""{"message": "The requested asset does not exist.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.get_file_versions(self.file_id)
            self.assertRaises(NotFoundException)
        except NotFoundException as e:
            self.assertEqual("The requested asset does not exist.", e.message)
            self.assertEqual(404, e.response_metadata.http_status_code)

    @responses.activate
    def test_get_file_version_details_fails_on_unauthenticated_request(self):
        """
        Tests if the unauthenticated request restricted
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions/{}".format(
            URL.API_BASE_URL, self.file_id, self.version_id
        )
        try:
            responses.add(
                responses.GET,
                url,
                status=403,
                body="""{'message': 'Your account cannot be authenticated.'
                                    , 'help': 'For support kindly contact us at support@imagekit.io .'}""",
            )
            self.client.get_file_version_details(self.file_id, self.version_id)
            self.assertRaises(ForbiddenException)
        except ForbiddenException as e:
            self.assertEqual(e.message, "Your account cannot be authenticated.")
            self.assertEqual(403, e.response_metadata.http_status_code)

    @responses.activate
    def test_get_file_version_details_succeeds_with_id(self):
        """
        Tests if get file version details succeeds with file id
        """
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions/{}".format(
            URL.API_BASE_URL, self.file_id, self.version_id
        )

        headers = {"Content-Type": "application/json"}
        headers.update(get_auth_headers_for_test())
        responses.add(
            responses.GET,
            url,
            body="""{
                        "type": "file-version",
                        "name": "new_car.jpg",
                        "createdAt": "2022-06-27T09:24:25.251Z",
                        "updatedAt": "2022-06-27T12:11:11.247Z",
                        "fileId": "fake_123",
                        "tags": ["tagg", "tagg1"],
                        "AITags": "",
                        "versionInfo": {
                            "id": "fake_version_123",
                            "name": "Version 1"
                        },
                        "embeddedMetadata": {
                            "XResolution": 250,
                            "YResolution": 250,
                            "DateCreated": "2022-06-15T11:34:36.702Z",
                            "DateTimeCreated": "2022-06-15T11:34:36.702Z"
                        },
                        "customCoordinates": "10,10,20,20",
                        "customMetadata": {
                            "test100": 10
                        },
                        "isPrivateFile": false,
                        "url": "https://ik.imagekit.io/your-imagekit-id/new_car.jpg?ik-obj-version=hzBNRjaJhZYg.JNu75L2nMDfhjJP4tJH",
                        "thumbnail": "https://ik.imagekit.io/your-imagekit-id/tr:n-ik_ml_thumbnail/new_car.jpg?ik-obj-version=hzBNRjaJhZYg.JNu75L2nMDfhjJP4tJH",
                        "fileType": "image",
                        "filePath": "/new_car.jpg",
                        "height": 354,
                        "width": 236,
                        "size": 23023,
                        "hasAlpha": false,
                        "mime": "image/jpeg"
                    }""",
            headers=headers,
        )
        resp = self.client.get_file_version_details(self.file_id, self.version_id)
        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "http_status_code": 200,
            "raw": {
                "AITags": "",
                "createdAt": "2022-06-27T09:24:25.251Z",
                "customCoordinates": "10,10,20,20",
                "customMetadata": {"test100": 10},
                "embeddedMetadata": {
                    "DateCreated": "2022-06-15T11:34:36.702Z",
                    "DateTimeCreated": "2022-06-15T11:34:36.702Z",
                    "XResolution": 250,
                    "YResolution": 250,
                },
                "fileId": "fake_123",
                "filePath": "/new_car.jpg",
                "fileType": "image",
                "hasAlpha": False,
                "height": 354,
                "isPrivateFile": False,
                "mime": "image/jpeg",
                "name": "new_car.jpg",
                "size": 23023,
                "tags": ["tagg", "tagg1"],
                "thumbnail": "https://ik.imagekit.io/your-imagekit-id/tr:n-ik_ml_thumbnail/new_car.jpg?ik-obj-version=hzBNRjaJhZYg.JNu75L2nMDfhjJP4tJH",
                "type": "file-version",
                "updatedAt": "2022-06-27T12:11:11.247Z",
                "url": "https://ik.imagekit.io/your-imagekit-id/new_car.jpg?ik-obj-version=hzBNRjaJhZYg.JNu75L2nMDfhjJP4tJH",
                "versionInfo": {"id": "fake_version_123", "name": "Version 1"},
                "width": 236,
            },
        }

        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("fake_123", resp.file_id)
        self.assertEqual("fake_version_123", resp.version_info.id)
        self.assertEqual(
            "http://test.com/v1/files/fake_123/versions/fake_version_123",
            responses.calls[0].request.url,
        )

    @responses.activate
    def test_get_file_version_details_fails_with_404_exception(self) -> None:
        """Test get file version details raises 404 error"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions/{}".format(
            URL.API_BASE_URL, self.file_id, self.version_id
        )
        try:
            responses.add(
                responses.GET,
                url,
                status=404,
                body="""{"message": "The requested asset does not exist.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.get_file_version_details(self.file_id, self.version_id)
            self.assertRaises(NotFoundException)
        except NotFoundException as e:
            self.assertEqual("The requested asset does not exist.", e.message)
            self.assertEqual(404, e.response_metadata.http_status_code)

    @responses.activate
    def test_get_file_version_details_fails_with_400_exception(self) -> None:
        """Test get file version details raises 400 error"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions/{}".format(
            URL.API_BASE_URL, self.file_id, self.version_id
        )
        try:
            responses.add(
                responses.GET,
                url,
                status=400,
                body="""{"message": "Your request contains invalid fileId parameter.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.get_file_version_details(self.file_id, self.version_id)
            self.assertRaises(BadRequestException)
        except BadRequestException as e:
            self.assertEqual(
                "Your request contains invalid fileId parameter.", e.message
            )
            self.assertEqual(400, e.response_metadata.http_status_code)


class TestDeleteFileVersion(ClientTestCase):
    version_id = "fake_123_version_id"
    file_id = "fax_abx1223"

    @responses.activate
    def test_delete_file_version_fails_with_404_exception(self) -> None:
        """Test delete_file_version raises 404 error"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions/{}".format(
            URL.API_BASE_URL, self.file_id, self.version_id
        )
        try:
            responses.add(
                responses.DELETE,
                url,
                status=404,
                body="""{"message": "The requested file version does not exist.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.delete_file_version(self.file_id, self.version_id)
            self.assertRaises(NotFoundException)
        except NotFoundException as e:
            self.assertEqual("The requested file version does not exist.", e.message)
            self.assertEqual(404, e.response_metadata.http_status_code)

    @responses.activate
    def test_delete_file_version_succeeds(self) -> None:
        """Test delete_file_version succeeds with file and version Id"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions/{}".format(
            URL.API_BASE_URL, self.file_id, self.version_id
        )
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(responses.DELETE, url, status=204, headers=headers, body="{}")
        resp = self.client.delete_file_version(self.file_id, self.version_id)

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 204,
            "raw": None,
        }

        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(
            "http://test.com/v1/files/fax_abx1223/versions/fake_123_version_id",
            responses.calls[0].request.url,
        )


class TestCopyFile(ClientTestCase):
    source_file_path = "/source_file.jpg"

    destination_path = "/destination_path"

    @responses.activate
    def test_copy_file_fails_with_404(self) -> None:
        """Test copy_file raises 404"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/copy".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(
            responses.POST,
            url,
            status=404,
            headers=headers,
            body="""{
                "message": "No file found with filePath /source_file.jpg",
                "help": "For support kindly contact us at support@imagekit.io .",
                "reason": "SOURCE_FILE_MISSING"
            }""",
        )
        try:
            self.client.copy_file(
                options=CopyFileRequestOptions(
                    source_file_path=self.source_file_path,
                    destination_path=self.destination_path,
                    include_file_versions=False,
                )
            )
            self.assertRaises(NotFoundException)
        except NotFoundException as e:
            self.assertEqual("No file found with filePath /source_file.jpg", e.message)
            self.assertEqual(404, e.response_metadata.http_status_code)

    @responses.activate
    def test_copy_file_succeeds(self) -> None:
        """Test copy_file succeeds"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/copy".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(responses.POST, url, status=204, headers=headers, body="{}")

        resp = self.client.copy_file(
            options=CopyFileRequestOptions(
                source_file_path=self.source_file_path,
                destination_path=self.destination_path,
                include_file_versions=True,
            )
        )

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 204,
            "raw": None,
        }

        request_body = json.dumps(
            json.loads(
                """{
                "sourceFilePath": "/source_file.jpg",
                "destinationPath": "/destination_path",
                "includeFileVersions": true
            }"""
            )
        )

        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(
            "http://test.com/v1/files/copy", responses.calls[0].request.url
        )

    @responses.activate
    def test_copy_file_succeeds_without_include_file_versions(self) -> None:
        """Test copy_file succeeds"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/copy".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(responses.POST, url, status=204, headers=headers, body="{}")

        resp = self.client.copy_file(
            options=CopyFileRequestOptions(
                source_file_path=self.source_file_path,
                destination_path=self.destination_path,
            )
        )

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 204,
            "raw": None,
        }

        request_body = json.dumps(
            json.loads(
                """{
                "sourceFilePath": "/source_file.jpg",
                "destinationPath": "/destination_path"
            }"""
            )
        )

        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(
            "http://test.com/v1/files/copy", responses.calls[0].request.url
        )


class TestMoveFile(ClientTestCase):
    source_file_path = "/source_file.jpg"

    destination_path = "/destination_path"

    @responses.activate
    def test_move_file_fails_with_404(self) -> None:
        """Test move_file raises 404"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/move".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(
            responses.POST,
            url,
            status=404,
            headers=headers,
            body="""{
                "message": "No file found with filePath /source_file.jpg",
                "help": "For support kindly contact us at support@imagekit.io .",
                "reason": "SOURCE_FILE_MISSING"
            }""",
        )
        try:
            self.client.move_file(
                options=MoveFileRequestOptions(
                    source_file_path=self.source_file_path,
                    destination_path=self.destination_path,
                )
            )
            self.assertRaises(NotFoundException)
        except NotFoundException as e:
            self.assertEqual("No file found with filePath /source_file.jpg", e.message)
            self.assertEqual(404, e.response_metadata.http_status_code)

    @responses.activate
    def test_move_file_succeeds(self) -> None:
        """Test move_file succeeds"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/move".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(responses.POST, url, status=204, headers=headers, body="{}")

        resp = self.client.move_file(
            options=MoveFileRequestOptions(
                source_file_path=self.source_file_path,
                destination_path=self.destination_path,
            )
        )
        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 204,
            "raw": None,
        }

        request_body = json.dumps(
            json.loads(
                """{
                "sourceFilePath": "/source_file.jpg",
                "destinationPath": "/destination_path"
            }"""
            )
        )

        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(
            "http://test.com/v1/files/move", responses.calls[0].request.url
        )


class TestRenameFile(ClientTestCase):
    file_path = "/file_path.jpg"

    new_file_name = "new_file.jpg"

    @responses.activate
    def test_rename_file_fails_with_409(self) -> None:
        """Test rename_file raises 409"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/rename".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        try:
            responses.add(
                responses.PUT,
                url,
                status=409,
                headers=headers,
                body="""{
                    "message": "File with name testing-binary.jpg already exists at the same location.",
                    "help": "For support kindly contact us at support@imagekit.io .",
                    "reason": "FILE_ALREADY_EXISTS"
                }""",
            )
            self.client.rename_file(
                options=RenameFileRequestOptions(
                    file_path=self.file_path, new_file_name=self.new_file_name
                )
            )
            self.assertRaises(ConflictException)
        except ConflictException as e:
            self.assertEqual(
                "File with name testing-binary.jpg already exists at the same location.",
                e.message,
            )
            self.assertEqual(409, e.response_metadata.http_status_code)
            self.assertEqual("FILE_ALREADY_EXISTS", e.response_metadata.raw["reason"])

    @responses.activate
    def test_rename_file_succeeds_with_purge_cache_false(self) -> None:
        """Test rename_file succeeds with Purge cache"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/rename".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(
            responses.PUT,
            url,
            headers=headers,
            body="{}",
        )
        resp = self.client.rename_file(
            options=RenameFileRequestOptions(
                file_path=self.file_path,
                new_file_name=self.new_file_name,
                purge_cache=False,
            )
        )

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 200,
            "raw": {},
        }

        request_body = json.dumps(
            json.loads(
                """{
                "filePath": "/file_path.jpg",
                "newFileName": "new_file.jpg",
                "purgeCache": false
            }"""
            )
        )

        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(None, resp.purge_request_id)
        self.assertEqual(
            "http://test.com/v1/files/rename", responses.calls[0].request.url
        )

    @responses.activate
    def test_rename_file_succeeds_with_purge_cache(self) -> None:
        """Test rename_file succeeds with Purge cache"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/rename".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(
            responses.PUT,
            url,
            headers=headers,
            body='{"purgeRequestId": "62de3e986f68334a5a3339fb"}',
        )
        resp = self.client.rename_file(
            options=RenameFileRequestOptions(
                file_path=self.file_path,
                new_file_name=self.new_file_name,
                purge_cache=True,
            )
        )

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 200,
            "raw": {"purgeRequestId": "62de3e986f68334a5a3339fb"},
        }

        request_body = json.dumps(
            json.loads(
                """{
                "filePath": "/file_path.jpg",
                "newFileName": "new_file.jpg",
                "purgeCache": true
            }"""
            )
        )

        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("62de3e986f68334a5a3339fb", resp.purge_request_id)
        self.assertEqual(
            "http://test.com/v1/files/rename", responses.calls[0].request.url
        )

    @responses.activate
    def test_rename_file_succeeds(self) -> None:
        """Test rename_file succeeds"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/rename".format(URL.API_BASE_URL)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(responses.PUT, url, headers=headers, body="{}")
        resp = self.client.rename_file(
            options=RenameFileRequestOptions(
                file_path=self.file_path, new_file_name=self.new_file_name
            )
        )
        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "httpStatusCode": 200,
            "raw": {},
        }

        request_body = json.dumps(
            json.loads(
                """{
                "filePath": "/file_path.jpg",
                "newFileName": "new_file.jpg"
            }"""
            )
        )

        self.assertEqual(request_body, responses.calls[0].request.body)
        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual(None, resp.purge_request_id)
        self.assertEqual(
            "http://test.com/v1/files/rename", responses.calls[0].request.url
        )


class TestRestoreFileVersion(ClientTestCase):
    version_id = "fake_123_version_id"
    file_id = "fax_abx1223"

    @responses.activate
    def test_restore_file_version_fails_with_404_exception(self) -> None:
        """Test restore_file_version raises 404 error"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions/{}/restore".format(
            URL.API_BASE_URL, self.file_id, self.version_id
        )
        try:
            responses.add(
                responses.PUT,
                url,
                status=404,
                body="""{"message": "The requested file version does not exist.",
                                 "help": "For support kindly contact us at support@imagekit.io ."}""",
            )
            self.client.restore_file_version(self.file_id, self.version_id)
            self.assertRaises(NotFoundException)
        except NotFoundException as e:
            self.assertEqual("The requested file version does not exist.", e.message)
            self.assertEqual(404, e.response_metadata.http_status_code)

    @responses.activate
    def test_restore_file_version_succeeds(self) -> None:
        """Test restore_file_version succeeds with file and version Id"""

        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/versions/{}/restore".format(
            URL.API_BASE_URL, self.file_id, self.version_id
        )
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(
            responses.PUT,
            url,
            headers=headers,
            body="""{
                "fileId": "fileId",
                "type": "file",
                "name": "file1.jpg",
                "filePath": "/images/file.jpg",
                "tags": ["t-shirt", "round-neck", "sale2019"],
                "AITags": [
                    {
                        "confidence": 90.12,
                        "source": "google-auto-tagging"
                    }],
                "versionInfo": {
                    "id": "versionId",
                    "name": "Version 2"
                },
                "isPrivateFile": false,
                "customCoordinates": "",
                "url": "https://ik.imagekit.io/your_imagekit_id/images/products/file1.jpg",
                "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-media_library_thumbnail/images/products/file1.jpg",
                "fileType": "image",
                "hasAlpha": false,
                "height": 100,
                "isPrivateFile": false,
                "mime": "image/jpeg",
                "name": "file1.jpg",
                "size": 100,
                "hasAlpha": false,
                "customMetadata": {
                    "brand": "Nike",
                    "color": "red"
                },
                "createdAt": "2019-08-24T06:14:41.313Z",
                "updatedAt": "2019-09-24T06:14:41.313Z"
            }""",
        )
        resp = self.client.restore_file_version(self.file_id, self.version_id)

        mock_response_metadata = {
            "headers": {
                "Content-Type": "text/plain, application/json",
                "Accept-Encoding": "gzip, deflate",
                "Authorization": "Basic ZmFrZTEyMjo=",
            },
            "http_status_code": 200,
            "raw": {
                "AITags": [{"confidence": 90.12, "source": "google-auto-tagging"}],
                "createdAt": "2019-08-24T06:14:41.313Z",
                "customCoordinates": "",
                "customMetadata": {"brand": "Nike", "color": "red"},
                "fileId": "fileId",
                "filePath": "/images/file.jpg",
                "fileType": "image",
                "hasAlpha": False,
                "height": 100,
                "isPrivateFile": False,
                "mime": "image/jpeg",
                "name": "file1.jpg",
                "size": 100,
                "tags": ["t-shirt", "round-neck", "sale2019"],
                "thumbnail": "https://ik.imagekit.io/your_imagekit_id/tr:n-media_library_thumbnail/images/products/file1.jpg",
                "type": "file",
                "updatedAt": "2019-09-24T06:14:41.313Z",
                "url": "https://ik.imagekit.io/your_imagekit_id/images/products/file1.jpg",
                "versionInfo": {"id": "versionId", "name": "Version 2"},
            },
        }

        self.assertEqual(
            camel_dict_to_snake_dict(mock_response_metadata),
            resp.response_metadata.__dict__,
        )
        self.assertEqual("fileId", resp.file_id)
        self.assertEqual("versionId", resp.version_info.id)
        self.assertEqual(
            "http://test.com/v1/files/fax_abx1223/versions/fake_123_version_id/restore",
            responses.calls[0].request.url,
        )

    @responses.activate()
    def test_get_metadata_with_non_breaking_changes_in_response(self):
        URL.API_BASE_URL = "http://test.com"
        url = "{}/v1/files/{}/metadata".format(URL.API_BASE_URL, self.file_id)
        headers = {"Content-Type": "application/json"}
        headers.update(create_headers_for_test())
        responses.add(
            responses.GET,
            url,
            headers=headers,
            body="""{
                    "height": 176, 
                    "width": 287, 
                    "size": 15869, 
                    "format": "jpg", 
                    "hasColorProfile": false, 
                    "quality": 0, 
                    "density": 72, 
                    "hasTransparency": false, 
                    "exif":{
                        "gps":{
                            "GPSVersionId":"1.2",
                            "latitude":1235.124151355,
                            "longitude":12315.326236
                        },
                        "thumbnail":
                        {
                            "compression":12,
                            "YResolution":1,
                            "XResolution":1,
                            "resolutionUnit":"DPI",
                            "thumbnailOffset":12,
                            "thumbnailLength":12,
                            "overallResolution":1
                        },
                        "exif": {
                            "exposureTime":10,
                            "FNumber":1,
                            "exposureProgram":null,
                            "ISO":"2001",
                            "exifVersion":1.2,
                            "dateTimeOriginal":null,
                            "createDate":null,
                            "shutterSpeedValue":122,
                            "apertureValue":12,
                            "exposureCompensation":12,
                            "meteringMode":null,
                            "flash":"white",
                            "focalLength":null,
                            "subSecTime":null,
                            "subSecTimeOriginal":null,
                            "subSecTimeDigitized":null,
                            "flashpixVersion":null,
                            "colorSpace":null,
                            "exifImageWidth":null,
                            "exifImageHeight":null,
                            "interopOffset":null,
                            "focalPlaneXResolution":null,
                            "focalPlaneYResolution":null,
                            "focalPlaneResolutionUnit":null,
                            "customRendered":null,
                            "exposureMode":null,
                            "whiteBalance":null,
                            "sceneCaptureType":null,
                            "cameraModel":"Canon"
                        }, 
                        "image":{
                            "make":null,
                            "model":null,
                            "orientation":null,
                            "XResolution":null,
                            "YResolution":null,
                            "resolutionUnit":null,
                            "software":null,
                            "modifyDate":null,
                            "YCbCrPositioning":null,
                            "exifOffset":null,
                            "gpsInfo":"navic",
                            "cropped":true
                        },
                        "interoperability":{
                            "interopVersion":1.1,
                            "interopIndex":1.2,
                            "interopRandom":132
                        }
                    }
                }
                """,
        
        )

        metadataExif = self.client.get_metadata(self.file_id)

        self.assertEqual(metadataExif.exif.interoperability.interop_index,1.2)
        self.assertEqual(metadataExif.exif.interoperability.interop_random,132)
        self.assertEqual(metadataExif.exif.image.gps_info,"navic")
        self.assertEqual(metadataExif.exif.image.cropped,True)
        self.assertEqual(metadataExif.exif.gps.gps_version_id,["1",".","2"])
        self.assertEqual(metadataExif.exif.gps.longitude,12315.326236)
        self.assertEqual(metadataExif.exif.exif.exposure_time,10)
        self.assertEqual(metadataExif.exif.exif.camera_model,"Canon")
        self.assertEqual(metadataExif.exif.thumbnail.x_resolution,1)
        self.assertEqual(metadataExif.exif.thumbnail.overall_resolution,1)
        